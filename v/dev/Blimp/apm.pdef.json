{
  "": {
    "VEHICLE_UID": {
      "Description": "Vehicle unique ID",
      "DisplayName": "Vehicle unique ID",
      "Range": {
        "high": "1073741824",
        "low": "-1073741824"
      },
      "User": "Advanced"
    }
  },
  "AHRS_": {
    "AHRS_COMP_BETA": {
      "Description": "This controls the time constant for the cross-over frequency used to fuse AHRS (airspeed and heading) and GPS data to estimate ground velocity. Time constant is 0.1/beta. A larger time constant will use GPS data less and a small time constant will use air data less.",
      "DisplayName": "AHRS Velocity Complementary Filter Beta Coefficient",
      "Increment": ".01",
      "Range": {
        "high": "0.5",
        "low": "0.001"
      },
      "User": "Advanced"
    },
    "AHRS_CUSTOM_PIT": {
      "Description": "Autopilot mounting position pitch offset. Positive values = pitch up, negative values = pitch down. This parameter is only used when AHRS_ORIENTATION is set to CUSTOM.",
      "DisplayName": "Board orientation pitch offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "Units": "deg",
      "User": "Advanced"
    },
    "AHRS_CUSTOM_ROLL": {
      "Description": "Autopilot mounting position roll offset. Positive values = roll right, negative values = roll left. This parameter is only used when AHRS_ORIENTATION is set to CUSTOM.",
      "DisplayName": "Board orientation roll offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "Units": "deg",
      "User": "Advanced"
    },
    "AHRS_CUSTOM_YAW": {
      "Description": "Autopilot mounting position yaw offset. Positive values = yaw right, negative values = yaw left. This parameter is only used when AHRS_ORIENTATION is set to CUSTOM.",
      "DisplayName": "Board orientation yaw offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "Units": "deg",
      "User": "Advanced"
    },
    "AHRS_EKF_TYPE": {
      "Description": "This controls which NavEKF Kalman filter version is used for attitude and position estimation",
      "DisplayName": "Use NavEKF Kalman filter for attitude and position estimation",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "11": "ExternalAHRS",
        "2": "Enable EKF2",
        "3": "Enable EKF3"
      }
    },
    "AHRS_GPS_GAIN": {
      "Description": "This controls how much to use the GPS to correct the attitude. This should never be set to zero for a plane as it would result in the plane losing control in turns. For a plane please use the default value of 1.0.",
      "DisplayName": "AHRS GPS gain",
      "Increment": ".01",
      "Range": {
        "high": "1.0",
        "low": "0.0"
      },
      "User": "Advanced"
    },
    "AHRS_GPS_MINSATS": {
      "Description": "Minimum number of satellites visible to use GPS for velocity based corrections attitude correction. This defaults to 6, which is about the point at which the velocity numbers from a GPS become too unreliable for accurate correction of the accelerometers.",
      "DisplayName": "AHRS GPS Minimum satellites",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "User": "Advanced"
    },
    "AHRS_GPS_USE": {
      "Description": "This controls whether to use dead-reckoning or GPS based navigation. If set to 0 then the GPS won't be used for navigation, and only dead reckoning will be used. A value of zero should never be used for normal flight. Currently this affects only the DCM-based AHRS: the EKF uses GPS according to its own parameters. A value of 2 means to use GPS for height as well as position - both in DCM estimation and when determining altitude-above-home.",
      "DisplayName": "AHRS use GPS for DCM navigation and position-down",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Use GPS for DCM position",
        "2": "Use GPS for DCM position and height"
      }
    },
    "AHRS_ORIENTATION": {
      "Description": "Overall board orientation relative to the standard orientation for the board type. This rotates the IMU and compass readings to allow the board to be oriented in your vehicle at any 90 or 45 degree angle. The label for each option is specified in the order of rotations for that orientation. This option takes affect on next boot. After changing you will need to re-level your vehicle.",
      "DisplayName": "Board Orientation",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Yaw45",
        "10": "Yaw90Roll180",
        "100": "Custom 4.1 and older",
        "101": "Custom 1",
        "102": "Custom 2",
        "11": "Yaw135Roll180",
        "12": "Pitch180",
        "13": "Yaw225Roll180",
        "14": "Yaw270Roll180",
        "15": "Yaw315Roll180",
        "16": "Roll90",
        "17": "Yaw45Roll90",
        "18": "Yaw90Roll90",
        "19": "Yaw135Roll90",
        "2": "Yaw90",
        "20": "Roll270",
        "21": "Yaw45Roll270",
        "22": "Yaw90Roll270",
        "23": "Yaw135Roll270",
        "24": "Pitch90",
        "25": "Pitch270",
        "26": "Yaw90Pitch180",
        "27": "Yaw270Pitch180",
        "28": "Pitch90Roll90",
        "29": "Pitch90Roll180",
        "3": "Yaw135",
        "30": "Pitch90Roll270",
        "31": "Pitch180Roll90",
        "32": "Pitch180Roll270",
        "33": "Pitch270Roll90",
        "34": "Pitch270Roll180",
        "35": "Pitch270Roll270",
        "36": "Yaw90Pitch180Roll90",
        "37": "Yaw270Roll90",
        "38": "Yaw293Pitch68Roll180",
        "39": "Pitch315",
        "4": "Yaw180",
        "40": "Pitch315Roll90",
        "42": "Roll45",
        "43": "Roll315",
        "5": "Yaw225",
        "6": "Yaw270",
        "7": "Yaw315",
        "8": "Roll180",
        "9": "Yaw45Roll180"
      }
    },
    "AHRS_RP_P": {
      "Description": "This controls how fast the accelerometers correct the attitude",
      "DisplayName": "AHRS RP_P",
      "Increment": ".01",
      "Range": {
        "high": "0.4",
        "low": "0.1"
      },
      "User": "Advanced"
    },
    "AHRS_TRIM_X": {
      "Description": "Compensates for the roll angle difference between the control board and the frame. Positive values make the vehicle roll right.",
      "DisplayName": "AHRS Trim Roll",
      "Increment": "0.01",
      "Range": {
        "high": "+0.1745",
        "low": "-0.1745"
      },
      "Units": "rad",
      "User": "Standard"
    },
    "AHRS_TRIM_Y": {
      "Description": "Compensates for the pitch angle difference between the control board and the frame. Positive values make the vehicle pitch up/back.",
      "DisplayName": "AHRS Trim Pitch",
      "Increment": "0.01",
      "Range": {
        "high": "+0.1745",
        "low": "-0.1745"
      },
      "Units": "rad",
      "User": "Standard"
    },
    "AHRS_TRIM_Z": {
      "Description": "Not Used",
      "DisplayName": "AHRS Trim Yaw",
      "Increment": "0.01",
      "Range": {
        "high": "+0.1745",
        "low": "-0.1745"
      },
      "Units": "rad",
      "User": "Advanced"
    },
    "AHRS_WIND_MAX": {
      "Description": "This sets the maximum allowable difference between ground speed and airspeed. This allows the plane to cope with a failing airspeed sensor. A value of zero means to use the airspeed as is. See ARSPD_OPTIONS and ARSPD_MAX_WIND to disable airspeed sensors.",
      "DisplayName": "Maximum wind",
      "Increment": "1",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "AHRS_YAW_P": {
      "Description": "This controls the weight the compass or GPS has on the heading. A higher value means the heading will track the yaw source (GPS or compass) more rapidly.",
      "DisplayName": "Yaw P",
      "Increment": ".01",
      "Range": {
        "high": "0.4",
        "low": "0.1"
      },
      "User": "Advanced"
    }
  },
  "ARMING_": {
    "ARMING_ACCTHRESH": {
      "Description": "Accelerometer error threshold used to determine inconsistent accelerometers. Compares this error range to other accelerometers to detect a hardware or calibration error. Lower value means tighter check and harder to pass arming check. Not all accelerometers are created equal.",
      "DisplayName": "Accelerometer error threshold",
      "Range": {
        "high": "3.0",
        "low": "0.25"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "ARMING_CHECK": {
      "Bitmask": {
        "0": "All",
        "1": "Barometer",
        "10": "Logging Available",
        "11": "Hardware safety switch",
        "12": "GPS Configuration",
        "13": "System",
        "14": "Mission",
        "15": "Rangefinder",
        "16": "Camera",
        "17": "AuxAuth",
        "18": "VisualOdometry",
        "19": "FFT",
        "2": "Compass",
        "3": "GPS lock",
        "4": "INS",
        "5": "Parameters",
        "6": "RC Channels",
        "7": "Board voltage",
        "8": "Battery Level"
      },
      "Description": "Checks prior to arming motor. This is a bitmask of checks that will be performed before allowing arming. For most users it is recommended to leave this at the default of 1 (all checks enabled). You can select whatever checks you prefer by adding together the values of each check type to set this parameter. For example, to only allow arming when you have GPS lock and no RC failsafe you would set ARMING_CHECK to 72.",
      "DisplayName": "Arm Checks to Perform (bitmask)",
      "User": "Standard"
    },
    "ARMING_MIS_ITEMS": {
      "Bitmask": {
        "0": "Land",
        "1": "VTOL Land",
        "2": "DO_LAND_START",
        "3": "Takeoff",
        "4": "VTOL Takeoff",
        "5": "Rallypoint"
      },
      "Description": "Bitmask of mission items that are required to be planned in order to arm the aircraft",
      "DisplayName": "Required mission items",
      "User": "Advanced"
    },
    "ARMING_RUDDER": {
      "Description": "Allow arm/disarm by rudder input. When enabled arming can be done with right rudder, disarming with left rudder. Rudder arming only works in manual throttle modes with throttle at zero +- deadzone (RCx_DZ)",
      "DisplayName": "Arming with Rudder enable/disable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "ArmingOnly",
        "2": "ArmOrDisarm"
      }
    }
  },
  "ARSPD": {
    "ARSPD2_AUTOCAL": {
      "Description": "This parameter and function is not used by this vehicle. Always set to 0.",
      "DisplayName": "Automatic airspeed ratio calibration for 2nd airspeed sensor",
      "User": "Advanced"
    },
    "ARSPD2_BUS": {
      "Description": "The bus number of the I2C bus to look for the sensor on",
      "DisplayName": "Airspeed I2C bus for 2nd sensor",
      "User": "Advanced",
      "Values": {
        "0": "Bus0(internal)",
        "1": "Bus1(external)",
        "2": "Bus2(auxiliary)"
      }
    },
    "ARSPD2_DEVID": {
      "Description": "Airspeed2 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Airspeed2 ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "ARSPD2_OFFSET": {
      "Description": "Airspeed calibration offset",
      "DisplayName": "Airspeed offset for 2nd airspeed sensor",
      "Increment": "0.1",
      "User": "Advanced"
    },
    "ARSPD2_PIN": {
      "Description": "Pin number indicating location of analog airspeed sensors. Pixhawk/Cube if set to 15. ",
      "DisplayName": "Airspeed pin for 2nd airspeed sensor",
      "User": "Advanced"
    },
    "ARSPD2_PSI_RANGE": {
      "Description": "This parameter allows you to set the PSI (pounds per square inch) range for your sensor. You should not change this unless you examine the datasheet for your device",
      "DisplayName": "The PSI range of the device for 2nd sensor",
      "User": "Advanced"
    },
    "ARSPD2_RATIO": {
      "Description": "Airspeed calibration ratio",
      "DisplayName": "Airspeed ratio for 2nd airspeed sensor",
      "Increment": "0.1",
      "User": "Advanced"
    },
    "ARSPD2_SKIP_CAL": {
      "Description": "This parameter allows you to skip airspeed offset calibration on startup, instead using the offset from the last calibration. This may be desirable if the offset variance between flights for your sensor is low and you want to avoid having to cover the pitot tube on each boot.",
      "DisplayName": "Skip airspeed offset calibration on startup for 2nd sensor",
      "User": "Advanced",
      "Values": {
        "0": "Disable",
        "1": "Enable"
      }
    },
    "ARSPD2_TUBE_ORDR": {
      "Description": "This parameter allows you to control whether the order in which the tubes are attached to your pitot tube matters. If you set this to 0 then the first (often the top) connector on the sensor needs to be the stagnation pressure (the pressure at the tip of the pitot tube). If set to 1 then the second (often the bottom) connector needs to be the stagnation pressure. If set to 2 (the default) then the airspeed driver will accept either order. The reason you may wish to specify the order is it will allow your airspeed sensor to detect if the aircraft is receiving excessive pressure on the static port compared to the stagnation port such as during a stall, which would otherwise be seen as a positive airspeed.",
      "DisplayName": "Control pitot tube order of 2nd airspeed sensor",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Swapped",
        "2": "Auto Detect"
      }
    },
    "ARSPD2_TYPE": {
      "Description": "Type of 2nd airspeed sensor",
      "DisplayName": "Second Airspeed type",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "I2C-MS4525D0",
        "10": "I2C-DLVR-20in",
        "11": "I2C-DLVR-30in",
        "12": "I2C-DLVR-60in",
        "13": "NMEA water speed",
        "14": "MSP",
        "15": "ASP5033",
        "2": "Analog",
        "3": "I2C-MS5525",
        "4": "I2C-MS5525 (0x76)",
        "5": "I2C-MS5525 (0x77)",
        "6": "I2C-SDP3X",
        "7": "I2C-DLVR-5in",
        "8": "DroneCAN",
        "9": "I2C-DLVR-10in"
      }
    },
    "ARSPD2_USE": {
      "Description": "This parameter and function is not used by this vehicle. Always set to 0.",
      "DisplayName": "Enable use of 2nd airspeed sensor",
      "User": "Standard",
      "Values": {
        "0": "Don't Use",
        "1": "use",
        "2": "UseWhenZeroThrottle"
      }
    },
    "ARSPD_AUTOCAL": {
      "Description": "Enables automatic adjustment of ARSPD_RATIO during a calibration flight based on estimation of ground speed and true airspeed. New ratio saved every 2 minutes if change is > 5%. Should not be left enabled.",
      "DisplayName": "This parameter and function is not used by this vehicle. Always set to 0.",
      "User": "Advanced"
    },
    "ARSPD_BUS": {
      "Description": "Bus number of the I2C bus where the airspeed sensor is connected",
      "DisplayName": "Airspeed I2C bus",
      "User": "Advanced",
      "Values": {
        "0": "Bus0(internal)",
        "1": "Bus1(external)",
        "2": "Bus2(auxiliary)"
      }
    },
    "ARSPD_DEVID": {
      "Description": "Airspeed sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Airspeed ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "ARSPD_OFFSET": {
      "Description": "Airspeed calibration offset",
      "DisplayName": "Airspeed offset",
      "Increment": "0.1",
      "User": "Advanced"
    },
    "ARSPD_OPTIONS": {
      "Bitmask": {
        "0": "SpeedMismatchDisable",
        "1": "AllowSpeedMismatchRecovery",
        "2": "DisableVoltageCorrection"
      },
      "Description": "This parameter and function is not used by this vehicle. Always set to 0.",
      "DisplayName": "Airspeed options bitmask",
      "User": "Advanced"
    },
    "ARSPD_PIN": {
      "Description": "The pin number that the airspeed sensor is connected to for analog sensors. Set to 15 on the Pixhawk for the analog airspeed port. ",
      "DisplayName": "Airspeed pin",
      "User": "Advanced"
    },
    "ARSPD_PRIMARY": {
      "Description": "This selects which airspeed sensor will be the primary if multiple sensors are found",
      "DisplayName": "Primary airspeed sensor",
      "User": "Advanced",
      "Values": {
        "0": "FirstSensor",
        "1": "2ndSensor"
      }
    },
    "ARSPD_PSI_RANGE": {
      "Description": "This parameter allows you to set the PSI (pounds per square inch) range for your sensor. You should not change this unless you examine the datasheet for your device",
      "DisplayName": "The PSI range of the device",
      "User": "Advanced"
    },
    "ARSPD_RATIO": {
      "Description": "Calibrates pitot tube pressure to velocity. Increasing this value will indicate a higher airspeed at any given dynamic pressure.",
      "DisplayName": "Airspeed ratio",
      "Increment": "0.1",
      "User": "Advanced"
    },
    "ARSPD_SKIP_CAL": {
      "Description": "This parameter allows you to skip airspeed offset calibration on startup, instead using the offset from the last calibration. This may be desirable if the offset variance between flights for your sensor is low and you want to avoid having to cover the pitot tube on each boot.",
      "DisplayName": "Skip airspeed offset calibration on startup",
      "User": "Advanced",
      "Values": {
        "0": "Disable",
        "1": "Enable"
      }
    },
    "ARSPD_TUBE_ORDER": {
      "Description": "This parameter allows you to control whether the order in which the tubes are attached to your pitot tube matters. If you set this to 0 then the first (often the top) connector on the sensor needs to be the stagnation pressure (the pressure at the tip of the pitot tube). If set to 1 then the second (often the bottom) connector needs to be the stagnation pressure. If set to 2 (the default) then the airspeed driver will accept either order. The reason you may wish to specify the order is it will allow your airspeed sensor to detect if the aircraft is receiving excessive pressure on the static port compared to the stagnation port such as during a stall, which would otherwise be seen as a positive airspeed.",
      "DisplayName": "Control pitot tube order",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Swapped",
        "2": "Auto Detect"
      }
    },
    "ARSPD_TYPE": {
      "Description": "Type of airspeed sensor",
      "DisplayName": "Airspeed type",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "I2C-MS4525D0",
        "10": "I2C-DLVR-20in",
        "100": "SITL",
        "11": "I2C-DLVR-30in",
        "12": "I2C-DLVR-60in",
        "13": "NMEA water speed",
        "14": "MSP",
        "15": "ASP5033",
        "2": "Analog",
        "3": "I2C-MS5525",
        "4": "I2C-MS5525 (0x76)",
        "5": "I2C-MS5525 (0x77)",
        "6": "I2C-SDP3X",
        "7": "I2C-DLVR-5in",
        "8": "DroneCAN",
        "9": "I2C-DLVR-10in"
      }
    },
    "ARSPD_USE": {
      "Description": "This parameter is not used by this vehicle. Always set to 0.",
      "DisplayName": "Airspeed use",
      "User": "Standard",
      "Values": {
        "0": "DoNotUse",
        "1": "Use",
        "2": "UseWhenZeroThrottle"
      }
    },
    "ARSPD_WIND_MAX": {
      "Description": "This parameter and function is not used by this vehicle. Always set to 0.",
      "DisplayName": "Maximum airspeed and ground speed difference",
      "Units": "m/s",
      "User": "Advanced"
    },
    "ARSPD_WIND_WARN": {
      "Description": "This parameter and function is not used by this vehicle. Always set to 0.",
      "DisplayName": "Airspeed and ground speed difference that gives a warning",
      "Units": "m/s",
      "User": "Advanced"
    }
  },
  "BARO": {
    "BARO1_DEVID": {
      "Description": "Barometer sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Baro ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "BARO1_GND_PRESS": {
      "Description": "calibrated ground pressure in Pascals",
      "DisplayName": "Ground Pressure",
      "Increment": "1",
      "ReadOnly": "True",
      "Units": "Pa",
      "User": "Advanced",
      "Volatile": "True"
    },
    "BARO2_DEVID": {
      "Description": "Barometer2 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Baro ID2",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "BARO2_GND_PRESS": {
      "Description": "calibrated ground pressure in Pascals",
      "DisplayName": "Ground Pressure",
      "Increment": "1",
      "ReadOnly": "True",
      "Units": "Pa",
      "User": "Advanced",
      "Volatile": "True"
    },
    "BARO3_DEVID": {
      "Description": "Barometer3 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Baro ID3",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "BARO3_GND_PRESS": {
      "Description": "calibrated ground pressure in Pascals",
      "DisplayName": "Absolute Pressure",
      "Increment": "1",
      "ReadOnly": "True",
      "Units": "Pa",
      "User": "Advanced",
      "Volatile": "True"
    },
    "BARO_ALT_OFFSET": {
      "Description": "altitude offset in meters added to barometric altitude. This is used to allow for automatic adjustment of the base barometric altitude by a ground station equipped with a barometer. The value is added to the barometric altitude read by the aircraft. It is automatically reset to 0 when the barometer is calibrated on each reboot or when a preflight calibration is performed.",
      "DisplayName": "altitude offset",
      "Increment": "0.1",
      "Units": "m",
      "User": "Advanced"
    },
    "BARO_EXT_BUS": {
      "Description": "This selects the bus number for looking for an I2C barometer. When set to -1 it will probe all external i2c buses based on the GND_PROBE_EXT parameter.",
      "DisplayName": "External baro bus",
      "User": "Advanced",
      "Values": {
        "-1": "Disabled",
        "0": "Bus0",
        "1": "Bus1"
      }
    },
    "BARO_FIELD_ELV": {
      "Description": "User provided field elevation in meters. This is used to improve the calculation of the altitude the vehicle is at. This parameter is not persistent and will be reset to 0 every time the vehicle is rebooted. A value of 0 means no correction for takeoff height above sea level is performed.",
      "DisplayName": "field elevation",
      "Increment": "0.1",
      "Units": "m",
      "User": "Advanced",
      "Volatile": "True"
    },
    "BARO_FLTR_RNG": {
      "Description": "This sets the range around the average value that new samples must be within to be accepted. This can help reduce the impact of noise on sensors that are on long I2C cables. The value is a percentage from the average value. A value of zero disables this filter.",
      "DisplayName": "Range in which sample is accepted",
      "Increment": "1",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "%"
    },
    "BARO_GND_TEMP": {
      "Description": "User provided ambient ground temperature in degrees Celsius. This is used to improve the calculation of the altitude the vehicle is at. This parameter is not persistent and will be reset to 0 every time the vehicle is rebooted. A value of 0 means use the internal measurement ambient temperature.",
      "DisplayName": "ground temperature",
      "Increment": "1",
      "Units": "degC",
      "User": "Advanced",
      "Volatile": "True"
    },
    "BARO_PRIMARY": {
      "Description": "This selects which barometer will be the primary if multiple barometers are found",
      "DisplayName": "Primary barometer",
      "User": "Advanced",
      "Values": {
        "0": "FirstBaro",
        "1": "2ndBaro",
        "2": "3rdBaro"
      }
    },
    "BARO_PROBE_EXT": {
      "Bitmask": {
        "0": "BMP085",
        "1": "BMP280",
        "10": "BMP388",
        "11": "SPL06",
        "12": "MSP",
        "2": "MS5611",
        "3": "MS5607",
        "4": "MS5637",
        "5": "FBM320",
        "6": "DPS280",
        "7": "LPS25H",
        "8": "Keller",
        "9": "MS5837"
      },
      "Description": "This sets which types of external i2c barometer to look for. It is a bitmask of barometer types. The I2C buses to probe is based on GND_EXT_BUS. If BARO_EXT_BUS is -1 then it will probe all external buses, otherwise it will probe just the bus number given in GND_EXT_BUS.",
      "DisplayName": "External barometers to probe",
      "User": "Advanced"
    }
  },
  "BARO1_WCF_": {
    "BARO1_WCF_BCK": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the X body axis. If the baro height estimate rises during backwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative X direction (backwards)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO1_WCF_ENABLE": {
      "Description": "This enables the use of wind coefficients for barometer compensation",
      "DisplayName": "Wind coefficient enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BARO1_WCF_FWD": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the X body axis. If the baro height estimate rises during forwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive X direction (forward)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO1_WCF_LFT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the left, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative Y direction (left)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO1_WCF_RGT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the right, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive Y direction (right)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    }
  },
  "BARO2_WCF_": {
    "BARO2_WCF_BCK": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the X body axis. If the baro height estimate rises during backwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative X direction (backwards)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO2_WCF_ENABLE": {
      "Description": "This enables the use of wind coefficients for barometer compensation",
      "DisplayName": "Wind coefficient enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BARO2_WCF_FWD": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the X body axis. If the baro height estimate rises during forwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive X direction (forward)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO2_WCF_LFT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the left, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative Y direction (left)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO2_WCF_RGT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the right, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive Y direction (right)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    }
  },
  "BARO3_WCF_": {
    "BARO3_WCF_BCK": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the X body axis. If the baro height estimate rises during backwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative X direction (backwards)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO3_WCF_ENABLE": {
      "Description": "This enables the use of wind coefficients for barometer compensation",
      "DisplayName": "Wind coefficient enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BARO3_WCF_FWD": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the X body axis. If the baro height estimate rises during forwards flight, then this will be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive X direction (forward)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO3_WCF_LFT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a negative wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the left, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in negative Y direction (left)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    },
    "BARO3_WCF_RGT": {
      "Description": "This is the ratio of static pressure error to dynamic pressure generated by a positive wind relative velocity along the Y body axis. If the baro height estimate rises during sideways flight to the right, then this should be a negative number. Multirotors can use this feature only if using EKF3 and if the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters have been tuned.",
      "DisplayName": "Pressure error coefficient in positive Y direction (right)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "-1.0"
      },
      "User": "Advanced"
    }
  },
  "BATT2_": {
    "BATT2_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT2_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT2_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT2__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT2_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT2__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT2_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT2_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT2_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT2_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT2__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT2_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT2_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT2_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT2_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT2__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT2_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT2_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT2_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT2_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT2_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT2_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT2_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT2_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT2_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT2_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT2_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT2_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT2_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT2_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT2_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT2_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT2_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT2_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT2_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT2_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT2_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT2_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT2_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT3_": {
    "BATT3_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT3_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT3_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT3__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT3_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT3__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT3_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT3_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT3_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT3_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT3__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT3_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT3_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT3_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT3_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT3__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT3_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT3_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT3_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT3_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT3_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT3_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT3_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT3_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT3_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT3_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT3_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT3_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT3_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT3_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT3_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT3_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT3_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT3_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT3_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT3_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT3_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT3_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT3_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT4_": {
    "BATT4_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT4_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT4_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT4__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT4_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT4__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT4_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT4_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT4_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT4_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT4__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT4_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT4_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT4_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT4_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT4__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT4_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT4_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT4_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT4_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT4_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT4_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT4_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT4_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT4_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT4_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT4_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT4_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT4_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT4_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT4_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT4_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT4_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT4_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT4_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT4_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT4_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT4_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT4_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT5_": {
    "BATT5_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT5_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT5_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT5__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT5_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT5__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT5_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT5_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT5_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT5_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT5__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT5_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT5_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT5_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT5_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT5__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT5_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT5_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT5_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT5_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT5_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT5_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT5_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT5_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT5_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT5_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT5_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT5_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT5_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT5_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT5_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT5_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT5_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT5_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT5_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT5_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT5_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT5_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT5_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT6_": {
    "BATT6_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT6_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT6_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT6__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT6_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT6__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT6_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT6_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT6_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT6_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT6__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT6_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT6_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT6_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT6_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT6__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT6_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT6_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT6_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT6_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT6_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT6_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT6_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT6_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT6_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT6_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT6_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT6_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT6_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT6_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT6_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT6_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT6_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT6_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT6_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT6_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT6_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT6_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT6_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT7_": {
    "BATT7_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT7_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT7_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT7__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT7_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT7__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT7_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT7_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT7_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT7_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT7__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT7_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT7_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT7_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT7_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT7__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT7_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT7_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT7_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT7_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT7_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT7_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT7_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT7_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT7_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT7_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT7_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT7_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT7_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT7_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT7_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT7_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT7_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT7_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT7_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT7_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT7_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT7_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT7_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT8_": {
    "BATT8_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT8_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT8_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT8__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT8_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT8__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT8_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT8_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT8_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT8_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT8__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT8_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT8_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT8_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT8_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT8__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT8_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT8_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT8_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT8_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT8_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT8_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT8_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT8_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT8_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT8_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT8_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT8_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT8_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT8_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT8_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT8_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT8_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT8_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT8_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT8_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT8_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT8_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT8_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT9_": {
    "BATT9_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT9_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT9_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT9__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT9_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT9__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT9_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT9_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT9_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT9_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT9__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT9_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT9_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT9_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT9_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT9__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT9_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT9_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT9_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT9_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT9_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT9_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT9_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT9_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT9_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT9_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT9_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT9_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT9_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT9_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT9_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT9_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT9_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT9_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT9_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT9_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT9_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT9_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT9_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BATT_": {
    "BATT_AMP_OFFSET": {
      "Description": "Voltage offset at zero current on current sensor",
      "DisplayName": "AMP offset",
      "Units": "V",
      "User": "Standard"
    },
    "BATT_AMP_PERVLT": {
      "Description": "Number of amps that a 1V reading on the current sensor corresponds to. With a Pixhawk using the 3DR Power brick this should be set to 17. For the Pixhawk with the 3DR 4in1 ESC this should be 17.",
      "DisplayName": "Amps per volt",
      "Units": "A/V",
      "User": "Standard"
    },
    "BATT_ARM_MAH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Advanced"
    },
    "BATT_ARM_VOLT": {
      "Description": "Battery voltage level which is required to arm the aircraft. Set to 0 to allow arming at any voltage.",
      "DisplayName": "Required arming voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_ARM_WH": {
      "Description": "Battery capacity remaining which is required to arm the aircraft. Set to 0 to allow arming at any capacity. Note that execept for smart batteries rebooting the vehicle will always reset the remaining capacity estimate, which can lead to this check not providing sufficent protection, it is recommended to always use this in conjunction with the BATT__ARM_VOLT parameter.",
      "DisplayName": "Required arming remaining capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Advanced"
    },
    "BATT_CAPACITY": {
      "Description": "Capacity of the battery in mAh when full",
      "DisplayName": "Battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT_CAPA_WH": {
      "Description": "Capacity of the battery in Wh when full",
      "DisplayName": "Battery capacity in Wh",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT_CELL_COUNT": {
      "Description": "Overrides cell count autodetection if not -1",
      "DisplayName": "Battery cell count",
      "Increment": "1",
      "User": "Advanced"
    },
    "BATT_CELL_DT_V": {
      "Description": "Maximum cell voltage for cell count detection",
      "DisplayName": "Battery cell max voltage",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_CELL_VFULL": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_CRT_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_CRT_MAH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT_CRT_VOLT": {
      "Description": "Battery voltage that triggers a critical battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT_FS_CRT_ACT parameter.",
      "DisplayName": "Critical battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT_CRT_WH": {
      "Description": "Battery capacity at which the critical battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT__FS_CRT_ACT parameter.",
      "DisplayName": "Battery critical capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT_CURR_MULT": {
      "Description": "Multiplier applied to all current related reports to allow for adjustment if no UAVCAN param access or current splitting applications",
      "DisplayName": "Scales reported power monitor current",
      "Range": {
        "high": "10",
        "low": ".1"
      },
      "User": "Advanced"
    },
    "BATT_CURR_PIN": {
      "Description": "Sets the analog input pin that should be used for current monitoring.",
      "DisplayName": "Battery Current sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "101": "PX4-v1",
        "14": "Pixhawk2_PM2",
        "15": "CubeOrange",
        "17": "Durandal",
        "3": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "4": "CubeOrange_PM2/Navigator"
      }
    },
    "BATT_FS_CRT_ACT": {
      "Description": "What action the vehicle should perform if it hits a critical battery failsafe",
      "DisplayName": "Critical battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT_FS_LOW_ACT": {
      "Description": "What action the vehicle should perform if it hits a low battery failsafe",
      "DisplayName": "Low battery failsafe action",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Land"
      }
    },
    "BATT_FS_VOLTSRC": {
      "Description": "Voltage type used for detection of low voltage event",
      "DisplayName": "Failsafe voltage source",
      "User": "Advanced",
      "Values": {
        "0": "Raw Voltage",
        "1": "Sag Compensated Voltage"
      }
    },
    "BATT_I2C_ADDR": {
      "Description": "Battery monitor I2C address",
      "DisplayName": "Battery monitor I2C address",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT_I2C_BUS": {
      "Description": "Battery monitor I2C bus number",
      "DisplayName": "Battery monitor I2C bus number",
      "Range": {
        "high": "3",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BATT_LOW_CV": {
      "Description": "Minimum battery cell voltage to consider the battery full",
      "DisplayName": "Minimum battery cell voltage to consider the battery full",
      "Increment": "0.01",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_LOW_MAH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "50",
      "Units": "mAh",
      "User": "Standard"
    },
    "BATT_LOW_TIMER": {
      "Description": "This is the timeout in seconds before a low voltage event will be triggered. For aircraft with low C batteries it may be necessary to raise this in order to cope with low voltage on long takeoffs. A value of zero disables low voltage errors.",
      "DisplayName": "Low voltage timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "BATT_LOW_VOLT": {
      "Description": "Battery voltage that triggers a low battery failsafe. Set to 0 to disable. If the battery voltage drops below this voltage continuously for more then the period specified by the BATT_LOW_TIMER parameter then the vehicle will perform the failsafe specified by the BATT_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery voltage",
      "Increment": "0.1",
      "Units": "V",
      "User": "Standard"
    },
    "BATT_LOW_WH": {
      "Description": "Battery capacity at which the low battery failsafe is triggered. Set to 0 to disable battery remaining failsafe. If the battery capacity drops below this level the vehicle will perform the failsafe specified by the BATT_FS_LOW_ACT parameter.",
      "DisplayName": "Low battery capacity",
      "Increment": "0.1",
      "Units": "Wh",
      "User": "Standard"
    },
    "BATT_MONITOR": {
      "Description": "Controls enabling monitoring of the battery's voltage and current",
      "DisplayName": "Battery monitoring",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "10": "Sum Of Selected Monitors",
        "11": "FuelFlow",
        "12": "FuelLevelPWM",
        "13": "SMBUS-SUI3",
        "14": "SMBUS-SUI6",
        "15": "NeoDesign",
        "16": "SMBus-Maxell",
        "17": "Generator-Elec",
        "18": "Generator-Fuel",
        "19": "Rotoye",
        "20": "MPPT",
        "21": "INA2XX",
        "22": "LTC2946",
        "23": "Torqeedo",
        "3": "Analog Voltage Only",
        "4": "Analog Voltage and Current",
        "5": "Solo",
        "6": "Bebop",
        "7": "SMBus-Generic",
        "8": "DroneCAN-BatteryInfo",
        "9": "ESC"
      }
    },
    "BATT_OPTIONS": {
      "Bitmask": {
        "0": "Ignore DroneCAN SoC",
        "1": "MPPT reports input voltage and current",
        "2": "MPPT Powered off when disarmed",
        "23": "Use Wh for remaining battery percentage calculation",
        "3": "MPPT Powered on when armed",
        "4": "MPPT Powered off at boot",
        "5": "MPPT Powered on at boot",
        "6": "Send resistance compensated voltage to GCS"
      },
      "Description": "This sets options to change the behaviour of the battery monitor",
      "DisplayName": "Battery monitor options",
      "User": "Advanced"
    },
    "BATT_SERIAL_NUM": {
      "Description": "Battery serial number, automatically filled in for SMBus batteries, otherwise will be -1. With DroneCan it is the battery_id.",
      "DisplayName": "Battery serial number",
      "User": "Advanced"
    },
    "BATT_SUM_MASK": {
      "Bitmask": {
        "0": "monitor 1",
        "1": "monitor 2",
        "2": "monitor 3",
        "3": "monitor 4",
        "4": "monitor 5",
        "5": "monitor 6",
        "6": "monitor 7",
        "7": "monitor 8",
        "8": "monitor 9"
      },
      "Description": "0: sum of remaining battery monitors, If none 0 sum of specified monitors. Current will be summed and voltages averaged.",
      "DisplayName": "Battery Sum mask",
      "User": "Standard"
    },
    "BATT_VLT_OFFSET": {
      "Description": "Voltage offset on voltage pin. This allows for an offset due to a diode. This voltage is subtracted before the scaling is applied",
      "DisplayName": "Volage offset",
      "Units": "V",
      "User": "Advanced"
    },
    "BATT_VOLT_MULT": {
      "Description": "Used to convert the voltage of the voltage sensing pin (BATT_VOLT_PIN) to the actual battery's voltage (pin_voltage * VOLT_MULT). For the 3DR Power brick with a Pixhawk, this should be set to 10.1. For the Pixhawk with the 3DR 4in1 ESC this should be 12.02. For the PX using the PX4IO power supply this should be set to 1.",
      "DisplayName": "Voltage Multiplier",
      "User": "Advanced"
    },
    "BATT_VOLT_PIN": {
      "Description": "Sets the analog input pin that should be used for voltage monitoring.",
      "DisplayName": "Battery Voltage sensing pin",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "100": "PX4-v1",
        "13": "Pixhawk2_PM2/CubeOrange_PM2",
        "14": "CubeOrange",
        "16": "Durandal",
        "2": "Pixhawk/Pixracer/Navio2/Pixhawk2_PM1",
        "5": "Navigator"
      }
    }
  },
  "BRD_": {
    "BRD_ALT_CONFIG": {
      "Description": "Select an alternative hardware configuration. A value of zero selects the default configuration for this board. Other values are board specific. Please see the documentation for your board for details on any alternative configuration values that may be available.",
      "DisplayName": "Alternative HW config",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BRD_BOOT_DELAY": {
      "Description": "This adds a delay in milliseconds to boot to ensure peripherals initialise fully",
      "DisplayName": "Boot delay",
      "Range": {
        "high": "10000",
        "low": "0"
      },
      "Units": "ms",
      "User": "Advanced"
    },
    "BRD_HEAT_I": {
      "Description": "Board Heater integrator gain",
      "DisplayName": "Board Heater I gain",
      "Increment": "0.1",
      "Range": {
        "high": "1",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_HEAT_IMAX": {
      "Description": "Board Heater integrator maximum",
      "DisplayName": "Board Heater IMAX",
      "Increment": "1",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_HEAT_LOWMGN": {
      "Description": "Arming check will fail if temp is lower than this margin below BRD_HEAT_TARG. 0 disables the low temperature check",
      "DisplayName": "Board heater temp lower margin",
      "Range": {
        "high": "20",
        "low": "0"
      },
      "Units": "degC",
      "User": "Advanced"
    },
    "BRD_HEAT_P": {
      "Description": "Board Heater P gain",
      "DisplayName": "Board Heater P gain",
      "Increment": "1",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "User": "Advanced"
    },
    "BRD_HEAT_TARG": {
      "Description": "Board heater target temperature for boards with controllable heating units. DO NOT SET to -1 on the Cube. Set to -1 to disable the heater, please reboot after setting to -1.",
      "DisplayName": "Board heater temperature target",
      "Range": {
        "high": "80",
        "low": "-1"
      },
      "Units": "degC",
      "User": "Advanced"
    },
    "BRD_IO_ENABLE": {
      "Description": "This allows for the IO co-processor on FMUv1 and FMUv2 to be disabled",
      "DisplayName": "Enable IO co-processor",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BRD_OPTIONS": {
      "Bitmask": {
        "0": "Enable hardware watchdog",
        "1": "Disable MAVftp",
        "2": "Enable set of internal parameters",
        "3": "Enable Debug Pins",
        "4": "Unlock flash on reboot",
        "5": "Write protect firmware flash on reboot",
        "6": "Write protect bootloader flash on reboot"
      },
      "Description": "Board specific option flags",
      "DisplayName": "Board options",
      "User": "Advanced"
    },
    "BRD_PWM_VOLT_SEL": {
      "Description": "This sets the voltage max for PWM output pulses. 0 for 3.3V and 1 for 5V output.",
      "DisplayName": "Set PWM Out Voltage",
      "User": "Advanced",
      "Values": {
        "0": "3.3V",
        "1": "5V"
      }
    },
    "BRD_SAFETYENABLE": {
      "Description": "This controls the default state of the safety switch at startup. When set to 1 the safety switch will start in the safe state (flashing) at boot. When set to zero the safety switch will start in the unsafe state (solid) at startup. Note that if a safety switch is fitted the user can still control the safety state after startup using the switch. The safety state can also be controlled in software using a MAVLink message.",
      "DisplayName": "Enable use of safety arming switch",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BRD_SAFETYOPTION": {
      "Bitmask": {
        "0": "ActiveForSafetyEnable",
        "1": "ActiveForSafetyDisable",
        "2": "ActiveWhenArmed",
        "3": "Force safety on when the aircraft disarms"
      },
      "Description": "This controls the activation of the safety button. It allows you to control if the safety button can be used for safety enable and/or disable, and whether the button is only active when disarmed",
      "DisplayName": "Options for safety button behavior",
      "User": "Standard"
    },
    "BRD_SAFETY_MASK": {
      "Bitmask": {
        "0": "Output1",
        "1": "Output2",
        "10": "Output11",
        "11": "Output12",
        "12": "Output13",
        "13": "Output14",
        "2": "Output3",
        "3": "Output4",
        "4": "Output5",
        "5": "Output6",
        "6": "Output7",
        "7": "Output8",
        "8": "Output9",
        "9": "Output10"
      },
      "Description": "A bitmask which controls what outputs can move while the safety switch has not been pressed",
      "DisplayName": "Outputs which ignore the safety switch state",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "BRD_SBUS_OUT": {
      "Description": "This sets the SBUS output frame rate in Hz",
      "DisplayName": " SBUS output rate",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "50Hz",
        "2": "75Hz",
        "3": "100Hz",
        "4": "150Hz",
        "5": "200Hz",
        "6": "250Hz",
        "7": "300Hz"
      }
    },
    "BRD_SD_SLOWDOWN": {
      "Description": "This is a scaling factor to slow down microSD operation. It can be used on flight board and microSD card combinations where full speed is not reliable. For normal full speed operation a value of 0 should be used.",
      "DisplayName": "microSD slowdown",
      "Increment": "1",
      "Range": {
        "high": "32",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_SER1_RTSCTS": {
      "Description": "Enable flow control on serial 1 (telemetry 1). You must have the RTS and CTS pins connected to your radio. The standard DF13 6 pin connector for a 3DR radio does have those pins connected. If this is set to 2 then flow control will be auto-detected by checking for the output buffer filling on startup. Note that the PX4v1 does not have hardware flow control pins on this port, so you should leave this disabled.",
      "DisplayName": "Serial 1 flow control",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "Auto"
      }
    },
    "BRD_SER2_RTSCTS": {
      "Description": "Enable flow control on serial 2 (telemetry 2). You must have the RTS and CTS pins connected to your radio. The standard DF13 6 pin connector for a 3DR radio does have those pins connected. If this is set to 2 then flow control will be auto-detected by checking for the output buffer filling on startup.",
      "DisplayName": "Serial 2 flow control",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "Auto"
      }
    },
    "BRD_SER3_RTSCTS": {
      "Description": "Enable flow control on serial 3. You must have the RTS and CTS pins connected to your radio. The standard DF13 6 pin connector for a 3DR radio does have those pins connected. If this is set to 2 then flow control will be auto-detected by checking for the output buffer filling on startup.",
      "DisplayName": "Serial 3 flow control",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "Auto"
      }
    },
    "BRD_SER4_RTSCTS": {
      "Description": "Enable flow control on serial 4. You must have the RTS and CTS pins connected to your radio. The standard DF13 6 pin connector for a 3DR radio does have those pins connected. If this is set to 2 then flow control will be auto-detected by checking for the output buffer filling on startup.",
      "DisplayName": "Serial 4 flow control",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "Auto"
      }
    },
    "BRD_SER5_RTSCTS": {
      "Description": "Enable flow control on serial 5. You must have the RTS and CTS pins connected to your radio. The standard DF13 6 pin connector for a 3DR radio does have those pins connected. If this is set to 2 then flow control will be auto-detected by checking for the output buffer filling on startup.",
      "DisplayName": "Serial 5 flow control",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "Auto"
      }
    },
    "BRD_SERIAL_NUM": {
      "Description": "User-defined serial number of this vehicle, it can be any arbitrary number you want and has no effect on the autopilot",
      "DisplayName": "User-defined serial number",
      "Range": {
        "high": "8388607",
        "low": "-8388608"
      },
      "User": "Standard"
    },
    "BRD_TYPE": {
      "Description": "This allows selection of a PX4 or VRBRAIN board type. If set to zero then the board type is auto-detected (PX4)",
      "DisplayName": "Board type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "AUTO",
        "1": "PX4V1",
        "100": "PX4 OLDDRIVERS",
        "13": "Intel Aero FC",
        "14": "Pixhawk Pro",
        "2": "Pixhawk",
        "20": "AUAV2.1",
        "21": "PCNC1",
        "22": "MINDPXV2",
        "23": "SP01",
        "24": "CUAVv5/FMUV5",
        "3": "Cube/Pixhawk2",
        "30": "VRX BRAIN51",
        "32": "VRX BRAIN52",
        "33": "VRX BRAIN52E",
        "34": "VRX UBRAIN51",
        "35": "VRX UBRAIN52",
        "36": "VRX CORE10",
        "38": "VRX BRAIN54",
        "39": "PX4 FMUV6",
        "4": "Pixracer",
        "5": "PixhawkMini",
        "6": "Pixhawk2Slim"
      }
    },
    "BRD_VBUS_MIN": {
      "Description": "Minimum voltage on the autopilot power rail to allow the aircraft to arm. 0 to disable the check.",
      "DisplayName": "Autopilot board voltage requirement",
      "Increment": "0.1",
      "Range": {
        "high": "5.5",
        "low": "4.0"
      },
      "Units": "V",
      "User": "Advanced"
    },
    "BRD_VSERVO_MIN": {
      "Description": "Minimum voltage on the servo rail to allow the aircraft to arm. 0 to disable the check.",
      "DisplayName": "Servo voltage requirement",
      "Increment": "0.1",
      "Range": {
        "high": "12.0",
        "low": "3.3"
      },
      "Units": "V",
      "User": "Advanced"
    }
  },
  "BRD_RADIO": {
    "BRD_RADIO_ABLVL": {
      "Description": "This sets the minimum RSSI of an auto-bind packet for it to be accepted. This should be set so that auto-bind will only happen at short range to minimise the change of an auto-bind happening accidentially",
      "DisplayName": "Auto-bind level",
      "Range": {
        "high": "31",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_ABTIME": {
      "Description": "When non-zero this sets the time with no transmitter packets before we start looking for auto-bind packets.",
      "DisplayName": "Auto-bind time",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_BZOFS": {
      "Description": "Set transmitter buzzer note adjustment (adjust frequency up)",
      "DisplayName": "Transmitter buzzer adjustment",
      "Range": {
        "high": "40",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_DEBUG": {
      "Description": "radio debug level",
      "DisplayName": "debug level",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_DISCRC": {
      "Description": "disable receive CRC (for debug)",
      "DisplayName": "disable receive CRC",
      "User": "Advanced",
      "Values": {
        "0": "NotDisabled",
        "1": "Disabled"
      }
    },
    "BRD_RADIO_FCCTST": {
      "Description": "If this is enabled then the radio will continuously transmit as required for FCC testing. The transmit channel is set by the value of the parameter. The radio will not work for RC input while this is enabled",
      "DisplayName": "Put radio into FCC test mode",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "MinChannel",
        "2": "MidChannel",
        "3": "MaxChannel",
        "4": "MinChannelCW",
        "5": "MidChannelCW",
        "6": "MaxChannelCW"
      }
    },
    "BRD_RADIO_PPSCH": {
      "Description": "Channel to show received packet-per-second rate, or zero for disabled",
      "DisplayName": "Packet rate channel",
      "Range": {
        "high": "16",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_PROT": {
      "Description": "Select air protocol",
      "DisplayName": "protocol",
      "User": "Advanced",
      "Values": {
        "0": "Auto",
        "1": "DSM2",
        "2": "DSMX"
      }
    },
    "BRD_RADIO_SIGCH": {
      "Description": "Channel to show receive RSSI signal strength, or zero for disabled",
      "DisplayName": "RSSI signal strength",
      "Range": {
        "high": "16",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_STKMD": {
      "Description": "This selects between different stick input modes. The default is mode2, which has throttle on the left stick and pitch on the right stick. You can instead set mode1, which has throttle on the right stick and pitch on the left stick.",
      "DisplayName": "Stick input mode",
      "User": "Advanced",
      "Values": {
        "1": "Mode1",
        "2": "Mode2"
      }
    },
    "BRD_RADIO_TELEM": {
      "Description": "If this is non-zero then telemetry packets will be sent over DSM",
      "DisplayName": "Enable telemetry",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "BRD_RADIO_TESTCH": {
      "Description": "This sets the radio to a fixed test channel for factory testing. Using a fixed channel avoids the need for binding in factory testing.",
      "DisplayName": "Set radio to factory test channel",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "TestChan1",
        "2": "TestChan2",
        "3": "TestChan3",
        "4": "TestChan4",
        "5": "TestChan5",
        "6": "TestChan6",
        "7": "TestChan7",
        "8": "TestChan8"
      }
    },
    "BRD_RADIO_TPPSCH": {
      "Description": "Channel to show telemetry packets-per-second value, as received at TX",
      "DisplayName": "Telemetry PPS channel",
      "Range": {
        "high": "16",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_TSIGCH": {
      "Description": "Channel to show telemetry RSSI value as received by TX",
      "DisplayName": "RSSI value channel for telemetry data on transmitter",
      "Range": {
        "high": "16",
        "low": "0"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_TXMAX": {
      "Description": "Set transmitter maximum transmit power (from 1 to 8)",
      "DisplayName": "Transmitter transmit power",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_TXPOW": {
      "Description": "Set telemetry transmit power. This is the power level (from 1 to 8) for telemetry packets sent from the RX to the TX",
      "DisplayName": "Telemetry Transmit power",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "User": "Advanced"
    },
    "BRD_RADIO_TYPE": {
      "Description": "This enables support for direct attached radio receivers",
      "DisplayName": "Set type of direct attached radio",
      "Values": {
        "0": "None",
        "1": "CYRF6936",
        "2": "CC2500",
        "3": "BK2425"
      }
    }
  },
  "BRD_RTC": {
    "BRD_RTC_TYPES": {
      "Bitmask": {
        "0": "GPS",
        "1": "MAVLINK_SYSTEM_TIME",
        "2": "HW"
      },
      "Description": "Specifies which sources of UTC time will be accepted",
      "DisplayName": "Allowed sources of RTC time",
      "User": "Advanced"
    },
    "BRD_RTC_TZ_MIN": {
      "Description": "Adds offset in +- minutes from UTC to calculate local time",
      "DisplayName": "Timezone offset from UTC",
      "Range": {
        "high": "+840",
        "low": "-720"
      },
      "User": "Advanced"
    }
  },
  "Blimp": {
    "DEV_OPTIONS": {
      "Bitmask": {
        "0": "Unknown"
      },
      "Description": "Bitmask of developer options. The meanings of the bit fields in this parameter may vary at any time. Developers should check the source code for current meaning",
      "DisplayName": "Development options",
      "User": "Advanced"
    },
    "DISARM_DELAY": {
      "Description": "Delay before automatic disarm in seconds. A value of zero disables auto disarm.",
      "DisplayName": "Disarm delay",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "DIS_MASK": {
      "Bitmask": {
        "0": "Right",
        "1": "Front",
        "2": "Down",
        "3": "Yaw"
      },
      "Description": "Mask for disabling one or more of the 4 output axis in mode Velocity or Loiter",
      "DisplayName": "Disable output mask",
      "User": "Standard",
      "Values": {
        "0": "All enabled",
        "1": "Right",
        "12": "Front & Right only",
        "2": "Front",
        "3": "Down and Yaw only",
        "4": "Down",
        "8": "Yaw"
      }
    },
    "FLTMODE1": {
      "Description": "Flight mode when Channel 5 pwm is <= 1230",
      "DisplayName": "Flight Mode 1",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE2": {
      "Description": "Flight mode when Channel 5 pwm is >1230, <= 1360",
      "DisplayName": "Flight Mode 2",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE3": {
      "Description": "Flight mode when Channel 5 pwm is >1360, <= 1490",
      "DisplayName": "Flight Mode 3",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE4": {
      "Description": "Flight mode when Channel 5 pwm is >1490, <= 1620",
      "DisplayName": "Flight Mode 4",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE5": {
      "Description": "Flight mode when Channel 5 pwm is >1620, <= 1749",
      "DisplayName": "Flight Mode 5",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE6": {
      "Description": "Flight mode when Channel 5 pwm is >=1750",
      "DisplayName": "Flight Mode 6",
      "User": "Standard",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "FLTMODE_CH": {
      "Description": "RC Channel to use for flight mode control",
      "DisplayName": "Flightmode channel",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "5": "Channel5",
        "6": "Channel6",
        "7": "Channel7",
        "8": "Channel8"
      }
    },
    "FORMAT_VERSION": {
      "Description": "This value is incremented when changes are made to the eeprom format",
      "DisplayName": "Eeprom format version number",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "FRAME_CLASS": {
      "Description": "Controls major frame class for blimp.",
      "DisplayName": "Frame Class",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Finnedblimp"
      }
    },
    "FS_CRASH_CHECK": {
      "Description": "This enables automatic crash checking. When enabled the motors will disarm if a crash is detected.",
      "DisplayName": "Crash check enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "FS_EKF_ACTION": {
      "Description": "Controls the action that will be taken when an EKF failsafe is invoked",
      "DisplayName": "EKF Failsafe Action",
      "User": "Advanced",
      "Values": {
        "1": "Land",
        "3": "Land even in MANUAL"
      }
    },
    "FS_EKF_THRESH": {
      "Description": "Allows setting the maximum acceptable compass and velocity variance",
      "DisplayName": "EKF failsafe variance threshold",
      "User": "Advanced",
      "Values": {
        "0.6": "Strict",
        "0.8": "Default",
        "1.0": "Relaxed"
      }
    },
    "FS_GCS_ENABLE": {
      "Description": "Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds. See FS_OPTIONS param for additional actions, or for cases allowing Mission continuation, when GCS failsafe is enabled.",
      "DisplayName": "Ground Station Failsafe Enable",
      "User": "Standard",
      "Values": {
        "0": "Disabled/NoAction",
        "5": "Land"
      }
    },
    "FS_GCS_TIMEOUT": {
      "Description": "Timeout before triggering the GCS failsafe",
      "DisplayName": "GCS failsafe timeout",
      "Increment": "1",
      "Range": {
        "high": "120",
        "low": "2"
      },
      "Units": "s",
      "User": "Standard"
    },
    "FS_OPTIONS": {
      "Bitmask": {
        "4": "Continue if in pilot controlled modes on GCS failsafe"
      },
      "Description": "Bitmask of additional options for battery, radio, & GCS failsafes. 0 (default) disables all options.",
      "DisplayName": "Failsafe options bitmask",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "16": "Continue if in pilot controlled modes on GCS failsafe"
      }
    },
    "FS_THR_ENABLE": {
      "Description": "The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel",
      "DisplayName": "Throttle Failsafe Enable",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "3": "Enabled always Land"
      }
    },
    "FS_THR_VALUE": {
      "Description": "The PWM level in microseconds on channel 3 below which throttle failsafe triggers",
      "DisplayName": "Throttle Failsafe Value",
      "Increment": "1",
      "Range": {
        "high": "1100",
        "low": "910"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "FS_VIBE_ENABLE": {
      "Description": "This enables the vibration failsafe which will use modified altitude estimation and control during high vibrations",
      "DisplayName": "Vibration Failsafe enable",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "GCS_PID_MASK": {
      "Bitmask": {
        "0": "VELX",
        "1": "VELY",
        "2": "VELZ",
        "3": "VELYAW",
        "4": "POSX",
        "5": "POSY",
        "6": "POZ",
        "7": "POSYAW"
      },
      "Description": "bitmask of PIDs to send MAVLink PID_TUNING messages for",
      "DisplayName": "GCS PID tuning mask",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "VELX",
        "128": "POSYAW",
        "15": "Vel only",
        "16": "POSX",
        "2": "VELY",
        "204": "ZYaw only",
        "240": "Pos only",
        "255": "All",
        "32": "POSY",
        "4": "VELZ",
        "51": "XY only",
        "64": "POSZ",
        "8": "VELYAW"
      }
    },
    "GPS_HDOP_GOOD": {
      "Description": "GPS Hdop value at or below this value represent a good position.  Used for pre-arm checks",
      "DisplayName": "GPS Hdop Good",
      "Range": {
        "high": "900",
        "low": "100"
      },
      "User": "Advanced"
    },
    "INITIAL_MODE": {
      "Description": "This selects the mode to start in on boot.",
      "DisplayName": "Initial flight mode",
      "User": "Advanced",
      "Values": {
        "0": "LAND",
        "1": "MANUAL",
        "2": "VELOCITY",
        "3": "LOITER"
      }
    },
    "LOG_BITMASK": {
      "Bitmask": {
        "0": "ATTITUDE_FAST",
        "1": "ATTITUDE_MED",
        "10": "RCOUT",
        "11": "OPTFLOW",
        "12": "PID",
        "13": "COMPASS",
        "14": "INAV",
        "15": "CAMERA",
        "17": "MOTBATT",
        "18": "IMU_FAST",
        "19": "IMU_RAW",
        "2": "GPS",
        "3": "PM",
        "4": "CTUN",
        "5": "NTUN",
        "6": "RCIN",
        "7": "IMU",
        "8": "CMD",
        "9": "CURRENT"
      },
      "Description": "4 byte bitmap of log types to enable",
      "DisplayName": "Log bitmask",
      "User": "Standard"
    },
    "MAX_POS_XY": {
      "Description": "Sets the maximum XY position change, in m/s",
      "DisplayName": "Max XY Position change",
      "Range": {
        "high": "5",
        "low": "0.1"
      },
      "User": "Standard"
    },
    "MAX_POS_YAW": {
      "Description": "Sets the maximum Yaw position change, in rad/s",
      "DisplayName": "Max Yaw Position change",
      "Range": {
        "high": "5",
        "low": "0.1"
      },
      "User": "Standard"
    },
    "MAX_POS_Z": {
      "Description": "Sets the maximum Z position change, in m/s",
      "DisplayName": "Max Z Position change",
      "Range": {
        "high": "5",
        "low": "0.1"
      },
      "User": "Standard"
    },
    "MAX_VEL_XY": {
      "Description": "Sets the maximum XY velocity, in m/s",
      "DisplayName": "Max XY Velocity",
      "Range": {
        "high": "5",
        "low": "0.2"
      },
      "User": "Standard"
    },
    "MAX_VEL_YAW": {
      "Description": "Sets the maximum yaw velocity, in rad/s",
      "DisplayName": "Max yaw Velocity",
      "Range": {
        "high": "5",
        "low": "0.2"
      },
      "User": "Standard"
    },
    "MAX_VEL_Z": {
      "Description": "Sets the maximum Z velocity, in m/s",
      "DisplayName": "Max Z Velocity",
      "Range": {
        "high": "5",
        "low": "0.2"
      },
      "User": "Standard"
    },
    "PILOT_SPEED_DN": {
      "Description": "The maximum vertical descending velocity the pilot may request in cm/s",
      "DisplayName": "Pilot maximum vertical speed descending",
      "Increment": "10",
      "Range": {
        "high": "500",
        "low": "50"
      },
      "Units": "cm/s",
      "User": "Standard"
    },
    "PILOT_THR_BHV": {
      "Bitmask": {
        "0": "Feedback from mid stick",
        "1": "High throttle cancels landing",
        "2": "Disarm on land detection"
      },
      "Description": "Bitmask containing various throttle stick options. TX with sprung throttle can set PILOT_THR_BHV to \"1\" so motor feedback when landed starts from mid-stick instead of bottom of stick.",
      "DisplayName": "Throttle stick behavior",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "Feedback from mid stick",
        "2": "High throttle cancels landing",
        "4": "Disarm on land detection"
      }
    },
    "PILOT_THR_FILT": {
      "Description": "Throttle filter cutoff (Hz) - active whenever altitude control is inactive - 0 to disable",
      "DisplayName": "Throttle filter cutoff",
      "Increment": ".5",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "PILOT_TKOFF_ALT": {
      "Description": "Altitude that altitude control modes will climb to when a takeoff is triggered with the throttle stick.",
      "DisplayName": "Pilot takeoff altitude",
      "Increment": "10",
      "Range": {
        "high": "1000.0",
        "low": "0.0"
      },
      "Units": "cm",
      "User": "Standard"
    },
    "POSXY_D": {
      "Description": "Position (horizontal) D gain.  Corrects short-term changes in position",
      "DisplayName": "Position (horizontal) D gain",
      "Increment": "0.001",
      "Range": {
        "high": "1.00",
        "low": "0.00"
      },
      "User": "Advanced"
    },
    "POSXY_FF": {
      "Description": "Position (horizontal) feed forward gain.  Converts the difference between desired position to a target velocity",
      "DisplayName": "Position (horizontal) feed forward gain",
      "Increment": "0.01",
      "Range": {
        "high": "6",
        "low": "0"
      },
      "User": "Advanced"
    },
    "POSXY_FLTD": {
      "Description": "Position (horizontal) input filter.  This filter (in Hz) is applied to the input for D term",
      "DisplayName": "Position (horizontal) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "POSXY_FLTE": {
      "Description": "Position (horizontal) input filter.  This filter (in Hz) is applied to the input for P and I terms",
      "DisplayName": "Position (horizontal) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "POSXY_I": {
      "Description": "Position (horizontal) I gain.  Corrects long-term difference between desired and actual position to a target velocity",
      "DisplayName": "Position (horizontal) I gain",
      "Increment": "0.01",
      "Range": {
        "high": "1.00",
        "low": "0.02"
      },
      "User": "Advanced"
    },
    "POSXY_IMAX": {
      "Description": "Position (horizontal) integrator maximum.  Constrains the target acceleration that the I gain will output",
      "DisplayName": "Position (horizontal) integrator maximum",
      "Increment": "10",
      "Range": {
        "high": "4500",
        "low": "0"
      },
      "Units": "cm/s/s",
      "User": "Advanced"
    },
    "POSXY_P": {
      "Description": "Position (horizontal) P gain.  Converts the difference between desired and actual position to a target velocity",
      "DisplayName": "Position (horizontal) P gain",
      "Increment": "0.1",
      "Range": {
        "high": "6.0",
        "low": "0.1"
      },
      "User": "Advanced"
    },
    "POSYAW_D": {
      "Description": "Position (yaw) axis controller D gain.",
      "DisplayName": "Position (yaw) axis controller D gain",
      "Increment": "0.001",
      "Range": {
        "high": "0.1",
        "low": "0.001"
      },
      "User": "Standard"
    },
    "POSYAW_FF": {
      "Description": "Position (yaw) axis controller feed forward",
      "DisplayName": "Position (yaw) axis controller feed forward",
      "Increment": "0.001",
      "Range": {
        "high": "0.5",
        "low": "0"
      },
      "User": "Standard"
    },
    "POSYAW_FLTD": {
      "Description": "Position (yaw) derivative input filter in Hz",
      "DisplayName": "Position (yaw) derivative input filter in Hz",
      "Increment": "1",
      "Range": {
        "high": "100",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "POSYAW_FLTE": {
      "Description": "Position (yaw) error frequency filter in Hz",
      "DisplayName": "Position (yaw) error frequency filter in Hz",
      "Increment": "1",
      "Range": {
        "high": "100",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "POSYAW_FLTT": {
      "Description": "Position (yaw) target frequency filter in Hz",
      "DisplayName": "Position (yaw) target frequency filter in Hz",
      "Increment": "1",
      "Range": {
        "high": "50",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "POSYAW_I": {
      "Description": "Position (yaw) axis controller I gain.",
      "DisplayName": "Position (yaw) axis controller I gain",
      "Increment": "0.01",
      "Range": {
        "high": "3.0",
        "low": "0.0"
      },
      "User": "Standard"
    },
    "POSYAW_IMAX": {
      "Description": "Position (yaw) axis controller I gain maximum.",
      "DisplayName": "Position (yaw) axis controller I gain maximum",
      "Increment": "10",
      "Range": {
        "high": "4000",
        "low": "0"
      },
      "Units": "d%",
      "User": "Standard"
    },
    "POSYAW_P": {
      "Description": "Position (yaw) axis controller P gain.",
      "DisplayName": "Position (yaw) axis controller P gain",
      "Increment": "0.01",
      "Range": {
        "high": "3.0",
        "low": "0.0"
      },
      "User": "Standard"
    },
    "POSYAW_SMAX": {
      "Description": "Sets an upper limit on the slew rate produced by the combined P and D gains.",
      "DisplayName": "Yaw slew rate limit",
      "Increment": "0.5",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "User": "Advanced"
    },
    "POSZ_D": {
      "Description": "Position (vertical) D gain.  Corrects short-term changes in position",
      "DisplayName": "Position (vertical) D gain",
      "Increment": "0.001",
      "Range": {
        "high": "1.00",
        "low": "0.00"
      },
      "User": "Advanced"
    },
    "POSZ_FF": {
      "Description": "Position (vertical) feed forward gain.  Converts the difference between desired position to a target velocity",
      "DisplayName": "Position (vertical) feed forward gain",
      "Increment": "0.01",
      "Range": {
        "high": "6",
        "low": "0"
      },
      "User": "Advanced"
    },
    "POSZ_FLTD": {
      "Description": "Position (vertical) input filter.  This filter (in Hz) is applied to the input for D term",
      "DisplayName": "Position (vertical) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "POSZ_FLTE": {
      "Description": "Position (vertical) input filter.  This filter (in Hz) is applied to the input for P and I terms",
      "DisplayName": "Position (vertical) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "POSZ_I": {
      "Description": "Position (vertical) I gain.  Corrects long-term difference between desired and actual position to a target velocity",
      "DisplayName": "Position (vertical) I gain",
      "Increment": "0.01",
      "Range": {
        "high": "1.00",
        "low": "0.02"
      },
      "User": "Advanced"
    },
    "POSZ_IMAX": {
      "Description": "Position (vertical) integrator maximum.  Constrains the target acceleration that the I gain will output",
      "DisplayName": "Position (vertical) integrator maximum",
      "Increment": "10",
      "Range": {
        "high": "4500",
        "low": "0"
      },
      "Units": "cm/s/s",
      "User": "Advanced"
    },
    "POSZ_P": {
      "Description": "Position (vertical) P gain.  Converts the difference between desired and actual position to a target velocity",
      "DisplayName": "Position (vertical) P gain",
      "Increment": "0.1",
      "Range": {
        "high": "6.0",
        "low": "0.1"
      },
      "User": "Advanced"
    },
    "RC_SPEED": {
      "Description": "This is the speed in Hertz that your ESCs will receive updates",
      "DisplayName": "ESC Update Speed",
      "Increment": "1",
      "Range": {
        "high": "490",
        "low": "50"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "SIMPLE_MODE": {
      "Description": "Simple mode for Position control - \"forward\" moves blimp in +ve X direction world-frame",
      "DisplayName": "Simple mode",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "SYSID_ENFORCE": {
      "Description": "This controls whether packets from other than the expected GCS system ID will be accepted",
      "DisplayName": "GCS sysid enforcement",
      "User": "Advanced",
      "Values": {
        "0": "NotEnforced",
        "1": "Enforced"
      }
    },
    "SYSID_MYGCS": {
      "Description": "Allows restricting radio overrides to only come from my ground station",
      "DisplayName": "My ground station number",
      "Range": {
        "high": "255",
        "low": "1"
      },
      "User": "Advanced"
    },
    "SYSID_THISMAV": {
      "Description": "Allows setting an individual MAVLink system id for this vehicle to distinguish it from others on the same network",
      "DisplayName": "MAVLink system ID of this vehicle",
      "Range": {
        "high": "255",
        "low": "1"
      },
      "User": "Advanced"
    },
    "TELEM_DELAY": {
      "Description": "The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up",
      "DisplayName": "Telemetry startup delay",
      "Increment": "1",
      "Range": {
        "high": "30",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "THR_DZ": {
      "Description": "The deadzone above and below mid throttle in PWM microseconds. Used in AltHold, Loiter, PosHold flight modes",
      "DisplayName": "Throttle deadzone",
      "Increment": "1",
      "Range": {
        "high": "300",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "VELXY_D": {
      "Description": "Velocity (horizontal) D gain.  Corrects short-term changes in velocity",
      "DisplayName": "Velocity (horizontal) D gain",
      "Increment": "0.001",
      "Range": {
        "high": "1.00",
        "low": "0.00"
      },
      "User": "Advanced"
    },
    "VELXY_FF": {
      "Description": "Velocity (horizontal) feed forward gain.  Converts the difference between desired velocity to a target acceleration",
      "DisplayName": "Velocity (horizontal) feed forward gain",
      "Increment": "0.01",
      "Range": {
        "high": "6",
        "low": "0"
      },
      "User": "Advanced"
    },
    "VELXY_FLTD": {
      "Description": "Velocity (horizontal) input filter.  This filter (in Hz) is applied to the input for D term",
      "DisplayName": "Velocity (horizontal) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "VELXY_FLTE": {
      "Description": "Velocity (horizontal) input filter.  This filter (in Hz) is applied to the input for P and I terms",
      "DisplayName": "Velocity (horizontal) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "VELXY_I": {
      "Description": "Velocity (horizontal) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (horizontal) I gain",
      "Increment": "0.01",
      "Range": {
        "high": "1.00",
        "low": "0.02"
      },
      "User": "Advanced"
    },
    "VELXY_IMAX": {
      "Description": "Velocity (horizontal) integrator maximum.  Constrains the target acceleration that the I gain will output",
      "DisplayName": "Velocity (horizontal) integrator maximum",
      "Increment": "10",
      "Range": {
        "high": "4500",
        "low": "0"
      },
      "Units": "cm/s/s",
      "User": "Advanced"
    },
    "VELXY_P": {
      "Description": "Velocity (horizontal) P gain.  Converts the difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (horizontal) P gain",
      "Increment": "0.1",
      "Range": {
        "high": "6.0",
        "low": "0.1"
      },
      "User": "Advanced"
    },
    "VELYAW_D": {
      "Description": "Velocity (yaw) D gain.  Corrects short-term changes in velocity",
      "DisplayName": "Velocity (yaw) D gain",
      "Increment": "0.001",
      "Range": {
        "high": "1.00",
        "low": "0.00"
      },
      "User": "Advanced"
    },
    "VELYAW_FF": {
      "Description": "Velocity (yaw) feed forward gain.  Converts the difference between desired velocity to a target acceleration",
      "DisplayName": "Velocity (yaw) feed forward gain",
      "Increment": "0.01",
      "Range": {
        "high": "6",
        "low": "0"
      },
      "User": "Advanced"
    },
    "VELYAW_FLTE": {
      "Description": "Velocity (yaw) input filter.  This filter (in Hz) is applied to the input for P and I terms",
      "DisplayName": "Velocity (yaw) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "VELYAW_I": {
      "Description": "Velocity (yaw) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (yaw) I gain",
      "Increment": "0.01",
      "Range": {
        "high": "1.00",
        "low": "0.02"
      },
      "User": "Advanced"
    },
    "VELYAW_IMAX": {
      "Description": "Velocity (yaw) integrator maximum.  Constrains the target acceleration that the I gain will output",
      "DisplayName": "Velocity (yaw) integrator maximum",
      "Increment": "10",
      "Range": {
        "high": "4500",
        "low": "0"
      },
      "Units": "cm/s/s",
      "User": "Advanced"
    },
    "VELYAW_P": {
      "Description": "Velocity (yaw) P gain.  Converts the difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (yaw) P gain",
      "Increment": "0.1",
      "Range": {
        "high": "6.0",
        "low": "0.1"
      },
      "User": "Advanced"
    },
    "VELZ_D": {
      "Description": "Velocity (vertical) D gain.  Corrects short-term changes in velocity",
      "DisplayName": "Velocity (vertical) D gain",
      "Increment": "0.001",
      "Range": {
        "high": "1.00",
        "low": "0.00"
      },
      "User": "Advanced"
    },
    "VELZ_FF": {
      "Description": "Velocity (vertical) feed forward gain.  Converts the difference between desired velocity to a target acceleration",
      "DisplayName": "Velocity (vertical) feed forward gain",
      "Increment": "0.01",
      "Range": {
        "high": "6",
        "low": "0"
      },
      "User": "Advanced"
    },
    "VELZ_FLTD": {
      "Description": "Velocity (vertical) input filter.  This filter (in Hz) is applied to the input for D term",
      "DisplayName": "Velocity (vertical) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "VELZ_FLTE": {
      "Description": "Velocity (vertical) input filter.  This filter (in Hz) is applied to the input for P and I terms",
      "DisplayName": "Velocity (vertical) input filter",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "VELZ_I": {
      "Description": "Velocity (vertical) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (vertical) I gain",
      "Increment": "0.01",
      "Range": {
        "high": "1.00",
        "low": "0.02"
      },
      "User": "Advanced"
    },
    "VELZ_IMAX": {
      "Description": "Velocity (vertical) integrator maximum.  Constrains the target acceleration that the I gain will output",
      "DisplayName": "Velocity (vertical) integrator maximum",
      "Increment": "10",
      "Range": {
        "high": "4500",
        "low": "0"
      },
      "Units": "cm/s/s",
      "User": "Advanced"
    },
    "VELZ_P": {
      "Description": "Velocity (vertical) P gain.  Converts the difference between desired and actual velocity to a target acceleration",
      "DisplayName": "Velocity (vertical) P gain",
      "Increment": "0.1",
      "Range": {
        "high": "6.0",
        "low": "0.1"
      },
      "User": "Advanced"
    }
  },
  "CAM_RC_": {
    "CAM_RC_BTN_DELAY": {
      "Description": "Time it takes for the a RunCam button press to be actived in ms. If this is too short then commands can get out of sync.",
      "DisplayName": "RunCam button delay before allowing further button presses",
      "User": "Advanced"
    },
    "CAM_RC_BT_DELAY": {
      "Description": "Time it takes for the RunCam to become fully ready in ms. If this is too short then commands can get out of sync.",
      "DisplayName": "RunCam boot delay before allowing updates",
      "User": "Advanced"
    },
    "CAM_RC_CONTROL": {
      "Bitmask": {
        "0": "Stick yaw right",
        "1": "Stick roll right",
        "2": "3-position switch",
        "3": "2-position switch",
        "4": "Autorecording enabled"
      },
      "Description": "Specifies the allowed actions required to enter the OSD menu",
      "DisplayName": "RunCam control option",
      "User": "Advanced"
    },
    "CAM_RC_FEATURES": {
      "Bitmask": {
        "0": "Power Button",
        "1": "WiFi Button",
        "2": "Change Mode",
        "3": "5-Key OSD",
        "4": "Settings Access",
        "5": "DisplayPort",
        "6": "Start Recording",
        "7": "Stop Recording"
      },
      "Description": "The available features of the attached RunCam device. If 0 then the RunCam device will be queried for the features it supports, otherwise this setting is used.",
      "DisplayName": "RunCam features available",
      "User": "Advanced"
    },
    "CAM_RC_MDE_DELAY": {
      "Description": "Time it takes for the a RunCam mode button press to be actived in ms. If a mode change first requires a video recording change then double this value is used. If this is too short then commands can get out of sync.",
      "DisplayName": "RunCam mode delay before allowing further button presses",
      "User": "Advanced"
    },
    "CAM_RC_TYPE": {
      "Description": "RunCam deviee type used to determine OSD menu structure and shutter options.",
      "DisplayName": "RunCam device type",
      "Values": {
        "0": "Disabled",
        "1": "RunCam Split Micro/RunCam with UART",
        "2": "RunCam Split",
        "3": "RunCam Split4 4k",
        "4": "RunCam Hybrid"
      }
    }
  },
  "CAN_": {
    "CAN_LOGLEVEL": {
      "Description": "Loglevel for recording initialisation and debug information from CAN Interface",
      "DisplayName": "Loglevel",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "Log None",
        "1": "Log Error",
        "2": "Log Warning and below",
        "3": "Log Info and below",
        "4": "Log Everything"
      }
    }
  },
  "CAN_D1_": {
    "CAN_D1_PROTOCOL": {
      "Description": "Enabling this option starts selected protocol that will use this virtual driver",
      "DisplayName": "Enable use of specific protocol over virtual driver",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "DroneCAN",
        "10": "Scripting",
        "11": "Benewake",
        "4": "PiccoloCAN",
        "5": "CANTester",
        "6": "EFI_NWPMU",
        "7": "USD1",
        "8": "KDECAN"
      }
    }
  },
  "CAN_D1_KDE_": {
    "CAN_D1_KDE_NPOLE": {
      "Description": "Sets the number of motor poles to calculate the correct RPM value",
      "DisplayName": "Number of motor poles"
    }
  },
  "CAN_D1_PC_": {
    "CAN_D1_PC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask defining which ESC (motor) channels are to be transmitted over Piccolo CAN",
      "DisplayName": "ESC channels",
      "User": "Advanced"
    },
    "CAN_D1_PC_ESC_RT": {
      "Description": "Output rate of ESC command messages",
      "DisplayName": "ESC output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D1_PC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "2": "Servo 3",
        "3": "Servo 4",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask defining which servo channels are to be transmitted over Piccolo CAN",
      "DisplayName": "Servo channels",
      "User": "Advanced"
    },
    "CAN_D1_PC_SRV_RT": {
      "Description": "Output rate of servo command messages",
      "DisplayName": "Servo command output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_D1_TST_": {
    "CAN_D1_TST_ID": {
      "Description": "Selects the Index of Test that needs to be run recursively, this value gets reset to 0 at boot.",
      "DisplayName": "CAN Test Index",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "TEST_NONE",
        "1": "TEST_LOOPBACK",
        "2": "TEST_BUSOFF_RECOVERY",
        "3": "TEST_UAVCAN_DNA",
        "5": "TEST_KDE_CAN",
        "6": "TEST_UAVCAN_ESC",
        "7": "TEST_UAVCAN_FD_ESC"
      }
    },
    "CAN_D1_TST_LPR8": {
      "Description": "Selects the Looprate of Test methods",
      "DisplayName": "CANTester LoopRate",
      "Units": "us",
      "User": "Advanced"
    }
  },
  "CAN_D1_UC_": {
    "CAN_D1_UC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a ESC command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as ESC over UAVCAN",
      "User": "Advanced"
    },
    "CAN_D1_UC_ESC_OF": {
      "Description": "Offset for ESC numbering in DroneCAN ESC RawCommand messages. This allows for more efficient packing of ESC command messages. If your ESCs are on servo functions 5 to 8 and you set this parameter to 4 then the ESC RawCommand will be sent with the first 4 slots filled. This can be used for more efficint usage of CAN bandwidth",
      "DisplayName": "ESC Output channels offset",
      "Range": {
        "high": "18",
        "low": "0"
      },
      "User": "Advanced"
    },
    "CAN_D1_UC_NODE": {
      "Description": "UAVCAN node should be set implicitly",
      "DisplayName": "UAVCAN node that is used for this network",
      "Range": {
        "high": "250",
        "low": "1"
      },
      "User": "Advanced"
    },
    "CAN_D1_UC_NTF_RT": {
      "Description": "Maximum transmit rate for Notify State Message",
      "DisplayName": "Notify State rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D1_UC_OPTION": {
      "Bitmask": {
        "0": "ClearDNADatabase",
        "1": "IgnoreDNANodeConflicts",
        "2": "EnableCanfd"
      },
      "Description": "Option flags",
      "DisplayName": "UAVCAN options",
      "User": "Advanced"
    },
    "CAN_D1_UC_POOL": {
      "Description": "Amount of memory in bytes to allocate for the DroneCAN memory pool. More memory is needed for higher CAN bus loads",
      "DisplayName": "CAN pool size",
      "Range": {
        "high": "16384",
        "low": "1024"
      },
      "User": "Advanced"
    },
    "CAN_D1_UC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "16": "Servo 17",
        "17": "Servo 18",
        "18": "Servo 19",
        "19": "Servo 20",
        "2": "Servo 3",
        "20": "Servo 21",
        "21": "Servo 22",
        "22": "Servo 23",
        "23": "Servo 24",
        "24": "Servo 25",
        "25": "Servo 26",
        "26": "Servo 27",
        "27": "Servo 28",
        "28": "Servo 29",
        "29": "Servo 30",
        "3": "Servo 4",
        "30": "Servo 31",
        "31": "Servo 32",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a servo command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as servo over UAVCAN"
    },
    "CAN_D1_UC_SRV_RT": {
      "Description": "Maximum transmit rate for servo outputs",
      "DisplayName": "Servo output rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_D2_": {
    "CAN_D2_PROTOCOL": {
      "Description": "Enabling this option starts selected protocol that will use this virtual driver",
      "DisplayName": "Enable use of specific protocol over virtual driver",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "DroneCAN",
        "10": "Scripting",
        "11": "Benewake",
        "4": "PiccoloCAN",
        "5": "CANTester",
        "6": "EFI_NWPMU",
        "7": "USD1",
        "8": "KDECAN"
      }
    }
  },
  "CAN_D2_KDE_": {
    "CAN_D2_KDE_NPOLE": {
      "Description": "Sets the number of motor poles to calculate the correct RPM value",
      "DisplayName": "Number of motor poles"
    }
  },
  "CAN_D2_PC_": {
    "CAN_D2_PC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask defining which ESC (motor) channels are to be transmitted over Piccolo CAN",
      "DisplayName": "ESC channels",
      "User": "Advanced"
    },
    "CAN_D2_PC_ESC_RT": {
      "Description": "Output rate of ESC command messages",
      "DisplayName": "ESC output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D2_PC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "2": "Servo 3",
        "3": "Servo 4",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask defining which servo channels are to be transmitted over Piccolo CAN",
      "DisplayName": "Servo channels",
      "User": "Advanced"
    },
    "CAN_D2_PC_SRV_RT": {
      "Description": "Output rate of servo command messages",
      "DisplayName": "Servo command output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_D2_TST_": {
    "CAN_D2_TST_ID": {
      "Description": "Selects the Index of Test that needs to be run recursively, this value gets reset to 0 at boot.",
      "DisplayName": "CAN Test Index",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "TEST_NONE",
        "1": "TEST_LOOPBACK",
        "2": "TEST_BUSOFF_RECOVERY",
        "3": "TEST_UAVCAN_DNA",
        "5": "TEST_KDE_CAN",
        "6": "TEST_UAVCAN_ESC",
        "7": "TEST_UAVCAN_FD_ESC"
      }
    },
    "CAN_D2_TST_LPR8": {
      "Description": "Selects the Looprate of Test methods",
      "DisplayName": "CANTester LoopRate",
      "Units": "us",
      "User": "Advanced"
    }
  },
  "CAN_D2_UC_": {
    "CAN_D2_UC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a ESC command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as ESC over UAVCAN",
      "User": "Advanced"
    },
    "CAN_D2_UC_ESC_OF": {
      "Description": "Offset for ESC numbering in DroneCAN ESC RawCommand messages. This allows for more efficient packing of ESC command messages. If your ESCs are on servo functions 5 to 8 and you set this parameter to 4 then the ESC RawCommand will be sent with the first 4 slots filled. This can be used for more efficint usage of CAN bandwidth",
      "DisplayName": "ESC Output channels offset",
      "Range": {
        "high": "18",
        "low": "0"
      },
      "User": "Advanced"
    },
    "CAN_D2_UC_NODE": {
      "Description": "UAVCAN node should be set implicitly",
      "DisplayName": "UAVCAN node that is used for this network",
      "Range": {
        "high": "250",
        "low": "1"
      },
      "User": "Advanced"
    },
    "CAN_D2_UC_NTF_RT": {
      "Description": "Maximum transmit rate for Notify State Message",
      "DisplayName": "Notify State rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D2_UC_OPTION": {
      "Bitmask": {
        "0": "ClearDNADatabase",
        "1": "IgnoreDNANodeConflicts",
        "2": "EnableCanfd"
      },
      "Description": "Option flags",
      "DisplayName": "UAVCAN options",
      "User": "Advanced"
    },
    "CAN_D2_UC_POOL": {
      "Description": "Amount of memory in bytes to allocate for the DroneCAN memory pool. More memory is needed for higher CAN bus loads",
      "DisplayName": "CAN pool size",
      "Range": {
        "high": "16384",
        "low": "1024"
      },
      "User": "Advanced"
    },
    "CAN_D2_UC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "16": "Servo 17",
        "17": "Servo 18",
        "18": "Servo 19",
        "19": "Servo 20",
        "2": "Servo 3",
        "20": "Servo 21",
        "21": "Servo 22",
        "22": "Servo 23",
        "23": "Servo 24",
        "24": "Servo 25",
        "25": "Servo 26",
        "26": "Servo 27",
        "27": "Servo 28",
        "28": "Servo 29",
        "29": "Servo 30",
        "3": "Servo 4",
        "30": "Servo 31",
        "31": "Servo 32",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a servo command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as servo over UAVCAN"
    },
    "CAN_D2_UC_SRV_RT": {
      "Description": "Maximum transmit rate for servo outputs",
      "DisplayName": "Servo output rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_D3_": {
    "CAN_D3_PROTOCOL": {
      "Description": "Enabling this option starts selected protocol that will use this virtual driver",
      "DisplayName": "Enable use of specific protocol over virtual driver",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "DroneCAN",
        "10": "Scripting",
        "11": "Benewake",
        "4": "PiccoloCAN",
        "5": "CANTester",
        "6": "EFI_NWPMU",
        "7": "USD1",
        "8": "KDECAN"
      }
    }
  },
  "CAN_D3_KDE_": {
    "CAN_D3_KDE_NPOLE": {
      "Description": "Sets the number of motor poles to calculate the correct RPM value",
      "DisplayName": "Number of motor poles"
    }
  },
  "CAN_D3_PC_": {
    "CAN_D3_PC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask defining which ESC (motor) channels are to be transmitted over Piccolo CAN",
      "DisplayName": "ESC channels",
      "User": "Advanced"
    },
    "CAN_D3_PC_ESC_RT": {
      "Description": "Output rate of ESC command messages",
      "DisplayName": "ESC output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D3_PC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "2": "Servo 3",
        "3": "Servo 4",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask defining which servo channels are to be transmitted over Piccolo CAN",
      "DisplayName": "Servo channels",
      "User": "Advanced"
    },
    "CAN_D3_PC_SRV_RT": {
      "Description": "Output rate of servo command messages",
      "DisplayName": "Servo command output rate",
      "Range": {
        "high": "500",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_D3_TST_": {
    "CAN_D3_TST_ID": {
      "Description": "Selects the Index of Test that needs to be run recursively, this value gets reset to 0 at boot.",
      "DisplayName": "CAN Test Index",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "TEST_NONE",
        "1": "TEST_LOOPBACK",
        "2": "TEST_BUSOFF_RECOVERY",
        "3": "TEST_UAVCAN_DNA",
        "5": "TEST_KDE_CAN",
        "6": "TEST_UAVCAN_ESC",
        "7": "TEST_UAVCAN_FD_ESC"
      }
    },
    "CAN_D3_TST_LPR8": {
      "Description": "Selects the Looprate of Test methods",
      "DisplayName": "CANTester LoopRate",
      "Units": "us",
      "User": "Advanced"
    }
  },
  "CAN_D3_UC_": {
    "CAN_D3_UC_ESC_BM": {
      "Bitmask": {
        "0": "ESC 1",
        "1": "ESC 2",
        "10": "ESC 11",
        "11": "ESC 12",
        "12": "ESC 13",
        "13": "ESC 14",
        "14": "ESC 15",
        "15": "ESC 16",
        "16": "ESC 17",
        "17": "ESC 18",
        "18": "ESC 19",
        "19": "ESC 20",
        "2": "ESC 3",
        "20": "ESC 21",
        "21": "ESC 22",
        "22": "ESC 23",
        "23": "ESC 24",
        "24": "ESC 25",
        "25": "ESC 26",
        "26": "ESC 27",
        "27": "ESC 28",
        "28": "ESC 29",
        "29": "ESC 30",
        "3": "ESC 4",
        "30": "ESC 31",
        "31": "ESC 32",
        "4": "ESC 5",
        "5": "ESC 6",
        "6": "ESC 7",
        "7": "ESC 8",
        "8": "ESC 9",
        "9": "ESC 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a ESC command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as ESC over UAVCAN",
      "User": "Advanced"
    },
    "CAN_D3_UC_ESC_OF": {
      "Description": "Offset for ESC numbering in DroneCAN ESC RawCommand messages. This allows for more efficient packing of ESC command messages. If your ESCs are on servo functions 5 to 8 and you set this parameter to 4 then the ESC RawCommand will be sent with the first 4 slots filled. This can be used for more efficint usage of CAN bandwidth",
      "DisplayName": "ESC Output channels offset",
      "Range": {
        "high": "18",
        "low": "0"
      },
      "User": "Advanced"
    },
    "CAN_D3_UC_NODE": {
      "Description": "UAVCAN node should be set implicitly",
      "DisplayName": "UAVCAN node that is used for this network",
      "Range": {
        "high": "250",
        "low": "1"
      },
      "User": "Advanced"
    },
    "CAN_D3_UC_NTF_RT": {
      "Description": "Maximum transmit rate for Notify State Message",
      "DisplayName": "Notify State rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "CAN_D3_UC_OPTION": {
      "Bitmask": {
        "0": "ClearDNADatabase",
        "1": "IgnoreDNANodeConflicts",
        "2": "EnableCanfd"
      },
      "Description": "Option flags",
      "DisplayName": "UAVCAN options",
      "User": "Advanced"
    },
    "CAN_D3_UC_POOL": {
      "Description": "Amount of memory in bytes to allocate for the DroneCAN memory pool. More memory is needed for higher CAN bus loads",
      "DisplayName": "CAN pool size",
      "Range": {
        "high": "16384",
        "low": "1024"
      },
      "User": "Advanced"
    },
    "CAN_D3_UC_SRV_BM": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "16": "Servo 17",
        "17": "Servo 18",
        "18": "Servo 19",
        "19": "Servo 20",
        "2": "Servo 3",
        "20": "Servo 21",
        "21": "Servo 22",
        "22": "Servo 23",
        "23": "Servo 24",
        "24": "Servo 25",
        "25": "Servo 26",
        "26": "Servo 27",
        "27": "Servo 28",
        "28": "Servo 29",
        "29": "Servo 30",
        "3": "Servo 4",
        "30": "Servo 31",
        "31": "Servo 32",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "Bitmask with one set for channel to be transmitted as a servo command over UAVCAN",
      "DisplayName": "Output channels to be transmitted as servo over UAVCAN"
    },
    "CAN_D3_UC_SRV_RT": {
      "Description": "Maximum transmit rate for servo outputs",
      "DisplayName": "Servo output rate",
      "Range": {
        "high": "200",
        "low": "1"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "CAN_P1_": {
    "CAN_P1_BITRATE": {
      "Description": "Bit rate can be set up to from 10000 to 1000000",
      "DisplayName": "Bitrate of CAN interface",
      "Range": {
        "high": "1000000",
        "low": "10000"
      },
      "User": "Advanced"
    },
    "CAN_P1_DRIVER": {
      "Description": "Enabling this option enables use of CAN buses.",
      "DisplayName": "Index of virtual driver to be used with physical CAN interface",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "First driver",
        "2": "Second driver",
        "3": "Third driver"
      }
    },
    "CAN_P1_FDBITRATE": {
      "Description": "Bit rate can be set up to from 1000000 to 8000000",
      "DisplayName": "Bitrate of CANFD interface",
      "User": "Advanced",
      "Values": {
        "1": "1M",
        "2": "2M",
        "4": "4M",
        "5": "5M",
        "8": "8M"
      }
    }
  },
  "CAN_P2_": {
    "CAN_P2_BITRATE": {
      "Description": "Bit rate can be set up to from 10000 to 1000000",
      "DisplayName": "Bitrate of CAN interface",
      "Range": {
        "high": "1000000",
        "low": "10000"
      },
      "User": "Advanced"
    },
    "CAN_P2_DRIVER": {
      "Description": "Enabling this option enables use of CAN buses.",
      "DisplayName": "Index of virtual driver to be used with physical CAN interface",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "First driver",
        "2": "Second driver",
        "3": "Third driver"
      }
    },
    "CAN_P2_FDBITRATE": {
      "Description": "Bit rate can be set up to from 1000000 to 8000000",
      "DisplayName": "Bitrate of CANFD interface",
      "User": "Advanced",
      "Values": {
        "1": "1M",
        "2": "2M",
        "4": "4M",
        "5": "5M",
        "8": "8M"
      }
    }
  },
  "CAN_P3_": {
    "CAN_P3_BITRATE": {
      "Description": "Bit rate can be set up to from 10000 to 1000000",
      "DisplayName": "Bitrate of CAN interface",
      "Range": {
        "high": "1000000",
        "low": "10000"
      },
      "User": "Advanced"
    },
    "CAN_P3_DRIVER": {
      "Description": "Enabling this option enables use of CAN buses.",
      "DisplayName": "Index of virtual driver to be used with physical CAN interface",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "First driver",
        "2": "Second driver",
        "3": "Third driver"
      }
    },
    "CAN_P3_FDBITRATE": {
      "Description": "Bit rate can be set up to from 1000000 to 8000000",
      "DisplayName": "Bitrate of CANFD interface",
      "User": "Advanced",
      "Values": {
        "1": "1M",
        "2": "2M",
        "4": "4M",
        "5": "5M",
        "8": "8M"
      }
    }
  },
  "CAN_SLCAN_": {
    "CAN_SLCAN_CPORT": {
      "Description": "CAN Interface ID to be routed to SLCAN, 0 means no routing",
      "DisplayName": "SLCAN Route",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "First interface",
        "2": "Second interface"
      }
    },
    "CAN_SLCAN_SDELAY": {
      "Description": "Duration after which slcan starts after setting SERNUM in seconds.",
      "DisplayName": "SLCAN Start Delay",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "User": "Standard"
    },
    "CAN_SLCAN_SERNUM": {
      "Description": "Serial Port ID to be used for temporary SLCAN iface, -1 means no temporary serial. This parameter is automatically reset on reboot or on timeout. See CAN_SLCAN_TIMOUT for timeout details",
      "DisplayName": "SLCAN Serial Port",
      "User": "Standard",
      "Values": {
        "-1": "Disabled",
        "0": "Serial0",
        "1": "Serial1",
        "2": "Serial2",
        "3": "Serial3",
        "4": "Serial4",
        "5": "Serial5",
        "6": "Serial6"
      }
    },
    "CAN_SLCAN_TIMOUT": {
      "Description": "Duration of inactivity after which SLCAN is switched back to original driver in seconds.",
      "DisplayName": "SLCAN Timeout",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "User": "Standard"
    }
  },
  "COMPASS_": {
    "COMPASS_AUTODEC": {
      "Description": "Enable or disable the automatic calculation of the declination based on gps location",
      "DisplayName": "Auto Declination",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "COMPASS_AUTO_ROT": {
      "Description": "When enabled this will automatically check the orientation of compasses on successful completion of compass calibration. If set to 2 then external compasses will have their orientation automatically corrected.",
      "DisplayName": "Automatically check orientation",
      "Values": {
        "0": "Disabled",
        "1": "CheckOnly",
        "2": "CheckAndFix",
        "3": "use same tolerance to auto rotate 45 deg rotations"
      }
    },
    "COMPASS_CAL_FIT": {
      "Description": "This controls the fitness level required for a successful compass calibration. A lower value makes for a stricter fit (less likely to pass). This is the value used for the primary magnetometer. Other magnetometers get double the value.",
      "DisplayName": "Compass calibration fitness",
      "Increment": "0.1",
      "Range": {
        "high": "32",
        "low": "4"
      },
      "User": "Advanced",
      "Values": {
        "16": "Default",
        "32": "Relaxed",
        "4": "Very Strict",
        "8": "Strict"
      }
    },
    "COMPASS_CUS_PIT": {
      "Description": "Compass mounting position pitch offset. Positive values = pitch up, negative values = pitch down. This parameter is only used when COMPASS_ORIENT/2/3 is set to CUSTOM.",
      "DisplayName": "Custom orientation pitch offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "RebootRequired": "True",
      "Units": "deg",
      "User": "Advanced"
    },
    "COMPASS_CUS_ROLL": {
      "Description": "Compass mounting position roll offset. Positive values = roll right, negative values = roll left. This parameter is only used when COMPASS_ORIENT/2/3 is set to CUSTOM.",
      "DisplayName": "Custom orientation roll offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "RebootRequired": "True",
      "Units": "deg",
      "User": "Advanced"
    },
    "COMPASS_CUS_YAW": {
      "Description": "Compass mounting position yaw offset. Positive values = yaw right, negative values = yaw left. This parameter is only used when COMPASS_ORIENT/2/3 is set to CUSTOM.",
      "DisplayName": "Custom orientation yaw offset",
      "Increment": "1",
      "Range": {
        "high": "180",
        "low": "-180"
      },
      "RebootRequired": "True",
      "Units": "deg",
      "User": "Advanced"
    },
    "COMPASS_DEC": {
      "Description": "An angle to compensate between the true north and magnetic north",
      "DisplayName": "Compass declination",
      "Increment": "0.01",
      "Range": {
        "high": "3.142",
        "low": "-3.142"
      },
      "Units": "rad",
      "User": "Standard"
    },
    "COMPASS_DEV_ID": {
      "Description": "Compass device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID2": {
      "Description": "Second compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass2 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID3": {
      "Description": "Third compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass3 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID4": {
      "Description": "Extra 4th compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass4 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID5": {
      "Description": "Extra 5th compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass5 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID6": {
      "Description": "Extra 6th compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass6 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID7": {
      "Description": "Extra 7th compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass7 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DEV_ID8": {
      "Description": "Extra 8th compass's device id.  Automatically detected, do not set manually",
      "DisplayName": "Compass8 device id",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "COMPASS_DIA2_X": {
      "Calibration": "1",
      "Description": "DIA_X in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_DIA2_Y": {
      "Calibration": "1",
      "Description": "DIA_Y in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_DIA2_Z": {
      "Description": "DIA_Z in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_DIA3_X": {
      "Calibration": "1",
      "Description": "DIA_X in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_DIA3_Y": {
      "Calibration": "1",
      "Description": "DIA_Y in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_DIA3_Z": {
      "Description": "DIA_Z in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_DIA_X": {
      "Calibration": "1",
      "Description": "DIA_X in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_DIA_Y": {
      "Calibration": "1",
      "Description": "DIA_Y in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_DIA_Z": {
      "Description": "DIA_Z in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_ENABLE": {
      "Description": "Setting this to Enabled(1) will enable the compass. Setting this to Disabled(0) will disable the compass. Note that this is separate from COMPASS_USE. This will enable the low level senor, and will enable logging of magnetometer data. To use the compass for navigation you must also set COMPASS_USE to 1.",
      "DisplayName": "Enable Compass",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "COMPASS_EXTERN2": {
      "Description": "Configure second compass so it is attached externally. This is auto-detected on most boards. If set to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then auto-detection will be disabled.",
      "DisplayName": "Compass2 is attached via an external cable",
      "User": "Advanced",
      "Values": {
        "0": "Internal",
        "1": "External",
        "2": "ForcedExternal"
      }
    },
    "COMPASS_EXTERN3": {
      "Description": "Configure third compass so it is attached externally. This is auto-detected on most boards. If set to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then auto-detection will be disabled.",
      "DisplayName": "Compass3 is attached via an external cable",
      "User": "Advanced",
      "Values": {
        "0": "Internal",
        "1": "External",
        "2": "ForcedExternal"
      }
    },
    "COMPASS_EXTERNAL": {
      "Description": "Configure compass so it is attached externally. This is auto-detected on most boards. Set to 1 if the compass is externally connected. When externally connected the COMPASS_ORIENT option operates independently of the AHRS_ORIENTATION board orientation option. If set to 0 or 1 then auto-detection by bus connection can override the value. If set to 2 then auto-detection will be disabled.",
      "DisplayName": "Compass is attached via an external cable",
      "User": "Advanced",
      "Values": {
        "0": "Internal",
        "1": "External",
        "2": "ForcedExternal"
      }
    },
    "COMPASS_FLTR_RNG": {
      "Description": "This sets the range around the average value that new samples must be within to be accepted. This can help reduce the impact of noise on sensors that are on long I2C cables. The value is a percentage from the average value. A value of zero disables this filter.",
      "DisplayName": "Range in which sample is accepted",
      "Increment": "1",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "%"
    },
    "COMPASS_LEARN": {
      "Description": "Enable or disable the automatic learning of compass offsets. You can enable learning either using a compass-only method that is suitable only for fixed wing aircraft or using the offsets learnt by the active EKF state estimator. If this option is enabled then the learnt offsets are saved when you disarm the vehicle. If InFlight learning is enabled then the compass with automatically start learning once a flight starts (must be armed). While InFlight learning is running you cannot use position control modes.",
      "DisplayName": "Learn compass offsets automatically",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Internal-Learning",
        "2": "EKF-Learning",
        "3": "InFlight-Learning"
      }
    },
    "COMPASS_MOT2_X": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to compass2's x-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass2 for body frame X axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT2_Y": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to compass2's y-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass2 for body frame Y axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT2_Z": {
      "Description": "Multiplied by the current throttle and added to compass2's z-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass2 for body frame Z axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT3_X": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to compass3's x-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass3 for body frame X axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT3_Y": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to compass3's y-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass3 for body frame Y axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT3_Z": {
      "Description": "Multiplied by the current throttle and added to compass3's z-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation to compass3 for body frame Z axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOTCT": {
      "Calibration": "1",
      "Description": "Set motor interference compensation type to disabled, throttle or current.  Do not change manually.",
      "DisplayName": "Motor interference compensation type",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Use Throttle",
        "2": "Use Current"
      }
    },
    "COMPASS_MOT_X": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to the compass's x-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation for body frame X axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT_Y": {
      "Calibration": "1",
      "Description": "Multiplied by the current throttle and added to the compass's y-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation for body frame Y axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_MOT_Z": {
      "Description": "Multiplied by the current throttle and added to the compass's z-axis values to compensate for motor interference (Offset per Amp or at Full Throttle)",
      "DisplayName": "Motor interference compensation for body frame Z axis",
      "Increment": "1",
      "Range": {
        "high": "1000",
        "low": "-1000"
      },
      "Units": "mGauss/A",
      "User": "Advanced"
    },
    "COMPASS_ODI2_X": {
      "Calibration": "1",
      "Description": "ODI_X in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron off-diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_ODI2_Y": {
      "Calibration": "1",
      "Description": "ODI_Y in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron off-diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_ODI2_Z": {
      "Description": "ODI_Z in the compass2 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass2 soft-iron off-diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_ODI3_X": {
      "Calibration": "1",
      "Description": "ODI_X in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron off-diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_ODI3_Y": {
      "Calibration": "1",
      "Description": "ODI_Y in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron off-diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_ODI3_Z": {
      "Description": "ODI_Z in the compass3 soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass3 soft-iron off-diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_ODI_X": {
      "Calibration": "1",
      "Description": "ODI_X in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron off-diagonal X component",
      "User": "Advanced"
    },
    "COMPASS_ODI_Y": {
      "Calibration": "1",
      "Description": "ODI_Y in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron off-diagonal Y component",
      "User": "Advanced"
    },
    "COMPASS_ODI_Z": {
      "Description": "ODI_Z in the compass soft-iron calibration matrix: [[DIA_X, ODI_X, ODI_Y], [ODI_X, DIA_Y, ODI_Z], [ODI_Y, ODI_Z, DIA_Z]]",
      "DisplayName": "Compass soft-iron off-diagonal Z component",
      "User": "Advanced"
    },
    "COMPASS_OFFS_MAX": {
      "Description": "This sets the maximum allowed compass offset in calibration and arming checks",
      "DisplayName": "Compass maximum offset",
      "Increment": "1",
      "Range": {
        "high": "3000",
        "low": "500"
      },
      "User": "Advanced"
    },
    "COMPASS_OFS2_X": {
      "Calibration": "1",
      "Description": "Offset to be added to compass2's x-axis values to compensate for metal in the frame",
      "DisplayName": "Compass2 offsets in milligauss on the X axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS2_Y": {
      "Calibration": "1",
      "Description": "Offset to be added to compass2's y-axis values to compensate for metal in the frame",
      "DisplayName": "Compass2 offsets in milligauss on the Y axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS2_Z": {
      "Description": "Offset to be added to compass2's z-axis values to compensate for metal in the frame",
      "DisplayName": "Compass2 offsets in milligauss on the Z axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS3_X": {
      "Calibration": "1",
      "Description": "Offset to be added to compass3's x-axis values to compensate for metal in the frame",
      "DisplayName": "Compass3 offsets in milligauss on the X axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS3_Y": {
      "Calibration": "1",
      "Description": "Offset to be added to compass3's y-axis values to compensate for metal in the frame",
      "DisplayName": "Compass3 offsets in milligauss on the Y axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS3_Z": {
      "Description": "Offset to be added to compass3's z-axis values to compensate for metal in the frame",
      "DisplayName": "Compass3 offsets in milligauss on the Z axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS_X": {
      "Calibration": "1",
      "Description": "Offset to be added to the compass x-axis values to compensate for metal in the frame",
      "DisplayName": "Compass offsets in milligauss on the X axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS_Y": {
      "Calibration": "1",
      "Description": "Offset to be added to the compass y-axis values to compensate for metal in the frame",
      "DisplayName": "Compass offsets in milligauss on the Y axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OFS_Z": {
      "Description": "Offset to be added to the compass z-axis values to compensate for metal in the frame",
      "DisplayName": "Compass offsets in milligauss on the Z axis",
      "Increment": "1",
      "Range": {
        "high": "400",
        "low": "-400"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "COMPASS_OPTIONS": {
      "Bitmask": {
        "0": "CalRequireGPS"
      },
      "Description": "This sets options to change the behaviour of the compass",
      "DisplayName": "Compass options",
      "User": "Advanced"
    },
    "COMPASS_ORIENT": {
      "Description": "The orientation of the first external compass relative to the vehicle frame. This value will be ignored unless this compass is set as an external compass. When set correctly in the northern hemisphere, pointing the nose and right side down should increase the MagX and MagY values respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used. The label for each option is specified in the order of rotations for that orientation.",
      "DisplayName": "Compass orientation",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Yaw45",
        "10": "Yaw90Roll180",
        "100": "Custom 4.1 and older",
        "101": "Custom 1",
        "102": "Custom 2",
        "11": "Yaw135Roll180",
        "12": "Pitch180",
        "13": "Yaw225Roll180",
        "14": "Yaw270Roll180",
        "15": "Yaw315Roll180",
        "16": "Roll90",
        "17": "Yaw45Roll90",
        "18": "Yaw90Roll90",
        "19": "Yaw135Roll90",
        "2": "Yaw90",
        "20": "Roll270",
        "21": "Yaw45Roll270",
        "22": "Yaw90Roll270",
        "23": "Yaw135Roll270",
        "24": "Pitch90",
        "25": "Pitch270",
        "26": "Yaw90Pitch180",
        "27": "Yaw270Pitch180",
        "28": "Pitch90Roll90",
        "29": "Pitch90Roll180",
        "3": "Yaw135",
        "30": "Pitch90Roll270",
        "31": "Pitch180Roll90",
        "32": "Pitch180Roll270",
        "33": "Pitch270Roll90",
        "34": "Pitch270Roll180",
        "35": "Pitch270Roll270",
        "36": "Yaw90Pitch180Roll90",
        "37": "Yaw270Roll90",
        "38": "Yaw293Pitch68Roll180",
        "39": "Pitch315",
        "4": "Yaw180",
        "40": "Pitch315Roll90",
        "42": "Roll45",
        "43": "Roll315",
        "5": "Yaw225",
        "6": "Yaw270",
        "7": "Yaw315",
        "8": "Roll180",
        "9": "Yaw45Roll180"
      }
    },
    "COMPASS_ORIENT2": {
      "Description": "The orientation of a second external compass relative to the vehicle frame. This value will be ignored unless this compass is set as an external compass. When set correctly in the northern hemisphere, pointing the nose and right side down should increase the MagX and MagY values respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used.",
      "DisplayName": "Compass2 orientation",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Yaw45",
        "10": "Yaw90Roll180",
        "100": "Custom 4.1 and older",
        "101": "Custom 1",
        "102": "Custom 2",
        "11": "Yaw135Roll180",
        "12": "Pitch180",
        "13": "Yaw225Roll180",
        "14": "Yaw270Roll180",
        "15": "Yaw315Roll180",
        "16": "Roll90",
        "17": "Yaw45Roll90",
        "18": "Yaw90Roll90",
        "19": "Yaw135Roll90",
        "2": "Yaw90",
        "20": "Roll270",
        "21": "Yaw45Roll270",
        "22": "Yaw90Roll270",
        "23": "Yaw135Roll270",
        "24": "Pitch90",
        "25": "Pitch270",
        "26": "Yaw90Pitch180",
        "27": "Yaw270Pitch180",
        "28": "Pitch90Roll90",
        "29": "Pitch90Roll180",
        "3": "Yaw135",
        "30": "Pitch90Roll270",
        "31": "Pitch180Roll90",
        "32": "Pitch180Roll270",
        "33": "Pitch270Roll90",
        "34": "Pitch270Roll180",
        "35": "Pitch270Roll270",
        "36": "Yaw90Pitch180Roll90",
        "37": "Yaw270Roll90",
        "38": "Yaw293Pitch68Roll180",
        "39": "Pitch315",
        "4": "Yaw180",
        "40": "Pitch315Roll90",
        "42": "Roll45",
        "43": "Roll315",
        "5": "Yaw225",
        "6": "Yaw270",
        "7": "Yaw315",
        "8": "Roll180",
        "9": "Yaw45Roll180"
      }
    },
    "COMPASS_ORIENT3": {
      "Description": "The orientation of a third external compass relative to the vehicle frame. This value will be ignored unless this compass is set as an external compass. When set correctly in the northern hemisphere, pointing the nose and right side down should increase the MagX and MagY values respectively. Rolling the vehicle upside down should decrease the MagZ value. For southern hemisphere, switch increase and decrease. NOTE: For internal compasses, AHRS_ORIENT is used.",
      "DisplayName": "Compass3 orientation",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Yaw45",
        "10": "Yaw90Roll180",
        "100": "Custom 4.1 and older",
        "101": "Custom 1",
        "102": "Custom 2",
        "11": "Yaw135Roll180",
        "12": "Pitch180",
        "13": "Yaw225Roll180",
        "14": "Yaw270Roll180",
        "15": "Yaw315Roll180",
        "16": "Roll90",
        "17": "Yaw45Roll90",
        "18": "Yaw90Roll90",
        "19": "Yaw135Roll90",
        "2": "Yaw90",
        "20": "Roll270",
        "21": "Yaw45Roll270",
        "22": "Yaw90Roll270",
        "23": "Yaw135Roll270",
        "24": "Pitch90",
        "25": "Pitch270",
        "26": "Yaw90Pitch180",
        "27": "Yaw270Pitch180",
        "28": "Pitch90Roll90",
        "29": "Pitch90Roll180",
        "3": "Yaw135",
        "30": "Pitch90Roll270",
        "31": "Pitch180Roll90",
        "32": "Pitch180Roll270",
        "33": "Pitch270Roll90",
        "34": "Pitch270Roll180",
        "35": "Pitch270Roll270",
        "36": "Yaw90Pitch180Roll90",
        "37": "Yaw270Roll90",
        "38": "Yaw293Pitch68Roll180",
        "39": "Pitch315",
        "4": "Yaw180",
        "40": "Pitch315Roll90",
        "42": "Roll45",
        "43": "Roll315",
        "5": "Yaw225",
        "6": "Yaw270",
        "7": "Yaw315",
        "8": "Roll180",
        "9": "Yaw45Roll180"
      }
    },
    "COMPASS_PRIO1_ID": {
      "Description": "Compass device id with 1st order priority, set automatically if 0. Reboot required after change.",
      "DisplayName": "Compass device id with 1st order priority",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "COMPASS_PRIO2_ID": {
      "Description": "Compass device id with 2nd order priority, set automatically if 0. Reboot required after change.",
      "DisplayName": "Compass device id with 2nd order priority",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "COMPASS_PRIO3_ID": {
      "Description": "Compass device id with 3rd order priority, set automatically if 0. Reboot required after change.",
      "DisplayName": "Compass device id with 3rd order priority",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "COMPASS_SCALE": {
      "Description": "Scaling factor for first compass to compensate for sensor scaling errors. If this is 0 then no scaling is done",
      "DisplayName": "Compass1 scale factor",
      "Range": {
        "high": "1.3",
        "low": "0"
      },
      "User": "Standard"
    },
    "COMPASS_SCALE2": {
      "Description": "Scaling factor for 2nd compass to compensate for sensor scaling errors. If this is 0 then no scaling is done",
      "DisplayName": "Compass2 scale factor",
      "Range": {
        "high": "1.3",
        "low": "0"
      },
      "User": "Standard"
    },
    "COMPASS_SCALE3": {
      "Description": "Scaling factor for 3rd compass to compensate for sensor scaling errors. If this is 0 then no scaling is done",
      "DisplayName": "Compass3 scale factor",
      "Range": {
        "high": "1.3",
        "low": "0"
      },
      "User": "Standard"
    },
    "COMPASS_TYPEMASK": {
      "Bitmask": {
        "0": "HMC5883",
        "1": "LSM303D",
        "11": "DroneCAN",
        "12": "QMC5883",
        "14": "MAG3110",
        "15": "IST8308",
        "16": "RM3100",
        "17": "MSP",
        "18": "ExternalAHRS",
        "2": "AK8963",
        "3": "BMM150",
        "4": "LSM9DS1",
        "5": "LIS3MDL",
        "6": "AK09916",
        "7": "IST8310",
        "8": "ICM20948",
        "9": "MMC3416"
      },
      "Description": "This is a bitmask of driver types to disable. If a driver type is set in this mask then that driver will not try to find a sensor at startup",
      "DisplayName": "Compass disable driver type mask",
      "User": "Advanced"
    },
    "COMPASS_USE": {
      "Description": "Enable or disable the use of the compass (instead of the GPS) for determining heading",
      "DisplayName": "Use compass for yaw",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "COMPASS_USE2": {
      "Description": "Enable or disable the secondary compass for determining heading.",
      "DisplayName": "Compass2 used for yaw",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "COMPASS_USE3": {
      "Description": "Enable or disable the tertiary compass for determining heading.",
      "DisplayName": "Compass3 used for yaw",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    }
  },
  "COMPASS_PMOT": {
    "COMPASS_PMOT1_X": {
      "Description": "Compensation for X axis of motor1",
      "DisplayName": "Compass per-motor1 X",
      "User": "Advanced"
    },
    "COMPASS_PMOT1_Y": {
      "Description": "Compensation for Y axis of motor1",
      "DisplayName": "Compass per-motor1 Y",
      "User": "Advanced"
    },
    "COMPASS_PMOT1_Z": {
      "Description": "Compensation for Z axis of motor1",
      "DisplayName": "Compass per-motor1 Z",
      "User": "Advanced"
    },
    "COMPASS_PMOT2_X": {
      "Description": "Compensation for X axis of motor2",
      "DisplayName": "Compass per-motor2 X",
      "User": "Advanced"
    },
    "COMPASS_PMOT2_Y": {
      "Description": "Compensation for Y axis of motor2",
      "DisplayName": "Compass per-motor2 Y",
      "User": "Advanced"
    },
    "COMPASS_PMOT2_Z": {
      "Description": "Compensation for Z axis of motor2",
      "DisplayName": "Compass per-motor2 Z",
      "User": "Advanced"
    },
    "COMPASS_PMOT3_X": {
      "Description": "Compensation for X axis of motor3",
      "DisplayName": "Compass per-motor3 X",
      "User": "Advanced"
    },
    "COMPASS_PMOT3_Y": {
      "Description": "Compensation for Y axis of motor3",
      "DisplayName": "Compass per-motor3 Y",
      "User": "Advanced"
    },
    "COMPASS_PMOT3_Z": {
      "Description": "Compensation for Z axis of motor3",
      "DisplayName": "Compass per-motor3 Z",
      "User": "Advanced"
    },
    "COMPASS_PMOT4_X": {
      "Description": "Compensation for X axis of motor4",
      "DisplayName": "Compass per-motor4 X",
      "User": "Advanced"
    },
    "COMPASS_PMOT4_Y": {
      "Description": "Compensation for Y axis of motor4",
      "DisplayName": "Compass per-motor4 Y",
      "User": "Advanced"
    },
    "COMPASS_PMOT4_Z": {
      "Description": "Compensation for Z axis of motor4",
      "DisplayName": "Compass per-motor4 Z",
      "User": "Advanced"
    },
    "COMPASS_PMOT_EN": {
      "Description": "This enables per-motor compass corrections",
      "DisplayName": "per-motor compass correction enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "COMPASS_PMOT_EXP": {
      "Description": "This is the exponential correction for the power output of the motor for per-motor compass correction",
      "DisplayName": "per-motor exponential correction",
      "Increment": "0.01",
      "Range": {
        "high": "2",
        "low": "0"
      },
      "User": "Advanced"
    }
  },
  "CUST_ROT": {
    "CUST_ROT_ENABLE": {
      "Description": "This enables custom rotations",
      "DisplayName": "Enable Custom rotations",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disable",
        "1": "Enable"
      }
    }
  },
  "CUST_ROT1_": {
    "CUST_ROT1_PITCH": {
      "Description": "Custom euler pitch, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom pitch",
      "RebootRequired": "True",
      "Units": "deg"
    },
    "CUST_ROT1_ROLL": {
      "Description": "Custom euler roll, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom roll",
      "RebootRequired": "True",
      "Units": "deg"
    },
    "CUST_ROT1_YAW": {
      "Description": "Custom euler yaw, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom yaw",
      "RebootRequired": "True",
      "Units": "deg"
    }
  },
  "CUST_ROT2_": {
    "CUST_ROT2_PITCH": {
      "Description": "Custom euler pitch, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom pitch",
      "RebootRequired": "True",
      "Units": "deg"
    },
    "CUST_ROT2_ROLL": {
      "Description": "Custom euler roll, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom roll",
      "RebootRequired": "True",
      "Units": "deg"
    },
    "CUST_ROT2_YAW": {
      "Description": "Custom euler yaw, euler 321 (yaw, pitch, roll) ordering",
      "DisplayName": "Custom yaw",
      "RebootRequired": "True",
      "Units": "deg"
    }
  },
  "EAHRS": {
    "EAHRS_RATE": {
      "Description": "Requested rate for AHRS device",
      "DisplayName": "AHRS data rate",
      "Units": "Hz",
      "User": "Standard"
    },
    "EAHRS_TYPE": {
      "Description": "Type of AHRS device",
      "DisplayName": "AHRS type",
      "User": "Standard",
      "Values": {
        "0": "None",
        "1": "VectorNav",
        "2": "LORD"
      }
    }
  },
  "EFI": {
    "EFI_COEF1": {
      "Description": "Used to calibrate fuel flow for MS protocol (Slope). This should be calculated from a log at constant fuel usage rate. Plot (ECYL[0].InjT*EFI.Rpm)/600.0 to get the duty_cycle. Measure actual fuel usage in cm^3/min, and set EFI_COEF1 = fuel_usage_cm3permin / duty_cycle",
      "DisplayName": "EFI Calibration Coefficient 1",
      "Range": {
        "high": "1",
        "low": "0"
      },
      "User": "Advanced"
    },
    "EFI_COEF2": {
      "Description": "Used to calibrate fuel flow for MS protocol (Offset). This can be used to correct for a non-zero offset in the fuel consumption calculation of EFI_COEF1",
      "DisplayName": "EFI Calibration Coefficient 2",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "User": "Advanced"
    },
    "EFI_TYPE": {
      "Description": "What method of communication is used for EFI #1",
      "DisplayName": "EFI communication type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Serial-MS",
        "2": "NWPMU",
        "3": "Serial-Lutan",
        "5": "DroneCAN"
      }
    }
  },
  "EK2_": {
    "EK2_ABIAS_P_NSE": {
      "Description": "This noise controls the growth of the vertical accelerometer delta velocity bias state error estimate. Increasing it makes accelerometer bias estimation faster and noisier.",
      "DisplayName": "Accelerometer bias stability (m/s^3)",
      "Range": {
        "high": "0.005",
        "low": "0.00001"
      },
      "Units": "m/s/s/s",
      "User": "Advanced"
    },
    "EK2_ACC_P_NSE": {
      "Description": "This control disturbance noise controls the growth of estimated error due to accelerometer measurement errors excluding bias. Increasing it makes the flter trust the accelerometer measurements less and other measurements more.",
      "DisplayName": "Accelerometer noise (m/s^2)",
      "Increment": "0.01",
      "Range": {
        "high": "1.0",
        "low": "0.01"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK2_ALT_M_NSE": {
      "Description": "This is the RMS value of noise in the altitude measurement. Increasing it reduces the weighting of the baro measurement and will make the filter respond more slowly to baro measurement errors, but will make it more sensitive to GPS and accelerometer errors.",
      "DisplayName": "Altitude measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_ALT_SOURCE": {
      "Description": "Primary height sensor used by the EKF. If a sensor other than Baro is selected and becomes unavailable, then the Baro sensor will be used as a fallback. NOTE: The EK2_RNG_USE_HGT parameter can be used to switch to range-finder when close to the ground in conjunction with EK2_ALT_SOURCE = 0 or 2 (Baro or GPS).",
      "DisplayName": "Primary altitude sensor source",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Use Baro",
        "1": "Use Range Finder",
        "2": "Use GPS",
        "3": "Use Range Beacon"
      }
    },
    "EK2_BCN_DELAY": {
      "Description": "This is the number of msec that the range beacon measurements lag behind the inertial measurements. It is the time from the end of the optical flow averaging period and does not include the time delay due to the 100msec of averaging within the flow sensor.",
      "DisplayName": "Range beacon measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK2_BCN_I_GTE": {
      "Description": "This sets the percentage number of standard deviations applied to the range beacon measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Range beacon measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_BCN_M_NSE": {
      "Description": "This is the RMS value of noise in the range beacon measurement. Increasing it reduces the weighting on this measurement.",
      "DisplayName": "Range beacon measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_CHECK_SCALE": {
      "Description": "This scales the thresholds that are used to check GPS accuracy before it is used by the EKF. A value of 100 is the default. Values greater than 100 increase and values less than 100 reduce the maximum GPS error the EKF will accept. A value of 200 will double the allowable GPS error.",
      "DisplayName": "GPS accuracy check scaler (%)",
      "Range": {
        "high": "200",
        "low": "50"
      },
      "Units": "%",
      "User": "Advanced"
    },
    "EK2_EAS_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the airspeed measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Airspeed measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_EAS_M_NSE": {
      "Description": "This is the RMS value of noise in equivalent airspeed measurements used by planes. Increasing it reduces the weighting of airspeed measurements and will make wind speed estimates less noisy and slower to converge. Increasing also increases navigation errors when dead-reckoning without GPS measurements.",
      "DisplayName": "Equivalent airspeed measurement noise (m/s)",
      "Increment": "0.1",
      "Range": {
        "high": "5.0",
        "low": "0.5"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK2_ENABLE": {
      "Description": "This enables EKF2. Enabling EKF2 only makes the maths run, it does not mean it will be used for flight control. To use it for flight control set AHRS_EKF_TYPE=2. A reboot or restart will need to be performed after changing the value of EK2_ENABLE for it to take effect.",
      "DisplayName": "Enable EKF2",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "EK2_FLOW_DELAY": {
      "Description": "This is the number of msec that the optical flow measurements lag behind the inertial measurements. It is the time from the end of the optical flow averaging period and does not include the time delay due to the 100msec of averaging within the flow sensor.",
      "DisplayName": "Optical Flow measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "127",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK2_FLOW_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the optical flow innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Optical Flow measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_FLOW_M_NSE": {
      "Description": "This is the RMS value of noise and errors in optical flow measurements. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Optical flow measurement noise (rad/s)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "0.05"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK2_FLOW_USE": {
      "Description": "Controls if the optical flow data is fused into the 24-state navigation estimator OR the 1-state terrain height estimator.",
      "DisplayName": "Optical flow use bitmask",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Navigation",
        "2": "Terrain"
      }
    },
    "EK2_GBIAS_P_NSE": {
      "Description": "This state  process noise controls growth of the gyro delta angle bias state error estimate. Increasing it makes rate gyro bias estimation faster and noisier.",
      "DisplayName": "Rate gyro bias stability (rad/s/s)",
      "Range": {
        "high": "0.001",
        "low": "0.00001"
      },
      "Units": "rad/s/s",
      "User": "Advanced"
    },
    "EK2_GLITCH_RAD": {
      "Description": "This controls the maximum radial uncertainty in position between the value predicted by the filter and the value measured by the GPS before the filter position and velocity states are reset to the GPS. Making this value larger allows the filter to ignore larger GPS glitches but also means that non-GPS errors such as IMU and compass can create a larger error in position before the filter is forced back to the GPS position.",
      "DisplayName": "GPS glitch radius gate size (m)",
      "Increment": "5",
      "Range": {
        "high": "100",
        "low": "10"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_GPS_CHECK": {
      "Bitmask": {
        "0": "NSats",
        "1": "HDoP",
        "2": "speed error",
        "3": "position error",
        "4": "yaw error",
        "5": "pos drift",
        "6": "vert speed",
        "7": "horiz speed"
      },
      "Description": "This is a 1 byte bitmap controlling which GPS preflight checks are performed. Set to 0 to bypass all checks. Set to 255 perform all checks. Set to 3 to check just the number of satellites and HDoP. Set to 31 for the most rigorous checks that will still allow checks to pass when the copter is moving, eg launch from a boat.",
      "DisplayName": "GPS preflight check",
      "User": "Advanced"
    },
    "EK2_GPS_TYPE": {
      "Description": "This controls use of GPS measurements : 0 = use 3D velocity & 2D position, 1 = use 2D velocity and 2D position, 2 = use 2D position, 3 = Inhibit GPS use - this can be useful when flying with an optical flow sensor in an environment where GPS quality is poor and subject to large multipath errors.",
      "DisplayName": "GPS mode control",
      "User": "Advanced",
      "Values": {
        "0": "GPS 3D Vel and 2D Pos",
        "1": "GPS 2D vel and 2D pos",
        "2": "GPS 2D pos",
        "3": "No GPS"
      }
    },
    "EK2_GSCL_P_NSE": {
      "Description": "This noise controls the rate of gyro scale factor learning. Increasing it makes rate gyro scale factor estimation faster and noisier.",
      "DisplayName": "Rate gyro scale factor stability (1/s)",
      "Range": {
        "high": "0.001",
        "low": "0.000001"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "EK2_GSF_RST_MAX": {
      "Description": "Sets the maximum number of times the EKF2 will be allowed to reset its yaw to the estimate from the EKF-GSF yaw estimator. No resets will be allowed unless the use of the EKF-GSF yaw estimate is enabled via the EK2_GSF_USE_MASK parameter.",
      "DisplayName": "Maximum number of resets to the EKF-GSF yaw estimate allowed",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_GSF_RUN_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "A bitmask of which EKF2 instances run an independant EKF-GSF yaw estimator to provide a backup yaw estimate that doesn't rely on magnetometer data. This estimator uses IMU, GPS and, if available, airspeed data. EKF-GSF yaw estimator data for the primary EKF2 instance will be logged as GSF0 and GSF1 messages. Use of the yaw estimate generated by this algorithm is controlled by the EK2_GSF_USE_MASK and EK2_GSF_RST_MAX parameters. To run the EKF-GSF yaw estimator in ride-along and logging only, set EK2_GSF_USE_MASK to 0. ",
      "DisplayName": "Bitmask of which EKF-GSF yaw estimators run",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_GSF_USE_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "1 byte bitmap of which EKF2 instances will use the output from the EKF-GSF yaw estimator that has been turned on by the EK2_GSF_RUN_MASK parameter. If the inertial navigation calculation stops following the GPS, then the vehicle code can request EKF2 to attempt to resolve the issue, either by performing a yaw reset if enabled by this parameter by switching to another EKF2 instance.",
      "DisplayName": "Bitmask of which EKF-GSF yaw estimators are used",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_GYRO_P_NSE": {
      "Description": "This control disturbance noise controls the growth of estimated error due to gyro measurement errors excluding bias. Increasing it makes the flter trust the gyro measurements less and other measurements more.",
      "DisplayName": "Rate gyro noise (rad/s)",
      "Increment": "0.0001",
      "Range": {
        "high": "0.1",
        "low": "0.0001"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK2_HGT_DELAY": {
      "Description": "This is the number of msec that the Height measurements lag behind the inertial measurements.",
      "DisplayName": "Height measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK2_HGT_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the height measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Height measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_HRT_FILT": {
      "Description": "Specifies the crossover frequency of the complementary filter used to calculate the output predictor height rate derivative.",
      "DisplayName": "Height rate filter crossover frequency",
      "Range": {
        "high": "30.0",
        "low": "0.1"
      },
      "Units": "Hz"
    },
    "EK2_IMU_MASK": {
      "Bitmask": {
        "0": "FirstIMU",
        "1": "SecondIMU",
        "2": "ThirdIMU",
        "3": "FourthIMU",
        "4": "FifthIMU",
        "5": "SixthIMU"
      },
      "Description": "1 byte bitmap of IMUs to use in EKF2. A separate instance of EKF2 will be started for each IMU selected. Set to 1 to use the first IMU only (default), set to 2 to use the second IMU only, set to 3 to use the first and second IMU. Additional IMU's can be used up to a maximum of 6 if memory and processing resources permit. There may be insufficient memory and processing resources to run multiple instances. If this occurs EKF2 will fail to start.",
      "DisplayName": "Bitmask of active IMUs",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_MAGB_P_NSE": {
      "Description": "This state process noise controls the growth of body magnetic field state error estimates. Increasing it makes magnetometer bias error estimation faster and noisier.",
      "DisplayName": "Body magnetic field process noise (gauss/s)",
      "Range": {
        "high": "0.01",
        "low": "0.00001"
      },
      "Units": "Gauss/s",
      "User": "Advanced"
    },
    "EK2_MAGE_P_NSE": {
      "Description": "This state process noise controls the growth of earth magnetic field state error estimates. Increasing it makes earth magnetic field estimation faster and noisier.",
      "DisplayName": "Earth magnetic field process noise (gauss/s)",
      "Range": {
        "high": "0.01",
        "low": "0.00001"
      },
      "Units": "Gauss/s",
      "User": "Advanced"
    },
    "EK2_MAG_CAL": {
      "Description": "This determines when the filter will use the 3-axis magnetometer fusion model that estimates both earth and body fixed magnetic field states, when it will use a simpler magnetic heading fusion model that does not use magnetic field states and when it will use an alternative method of yaw determination to the magnetometer. The 3-axis magnetometer fusion is only suitable for use when the external magnetic field environment is stable. EK2_MAG_CAL = 0 uses heading fusion on ground, 3-axis fusion in-flight, and is the default setting for Plane users. EK2_MAG_CAL = 1 uses 3-axis fusion only when manoeuvring. EK2_MAG_CAL = 2 uses heading fusion at all times, is recommended if the external magnetic field is varying and is the default for rovers. EK2_MAG_CAL = 3 uses heading fusion on the ground and 3-axis fusion after the first in-air field and yaw reset has completed, and is the default for copters. EK2_MAG_CAL = 4 uses 3-axis fusion at all times. NOTE: The fusion mode can be forced to 2 for specific EKF cores using the EK2_MAG_MASK parameter. NOTE: limited operation without a magnetometer or any other yaw sensor is possible by setting all COMPASS_USE, COMPASS_USE2, COMPASS_USE3, etc parameters to 0 with COMPASS_ENABLE set to 1. If this is done, the EK2_GSF_RUN and EK2_GSF_USE masks must be set to the same as EK2_IMU_MASK.",
      "DisplayName": "Magnetometer default fusion mode",
      "User": "Advanced",
      "Values": {
        "0": "When flying",
        "1": "When manoeuvring",
        "2": "Never",
        "3": "After first climb yaw reset",
        "4": "Always"
      }
    },
    "EK2_MAG_EF_LIM": {
      "Description": "This limits the difference between the learned earth magnetic field and the earth field from the world magnetic model tables. A value of zero means to disable the use of the WMM tables.",
      "DisplayName": "EarthField error limit",
      "Range": {
        "high": "500",
        "low": "0"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "EK2_MAG_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the magnetometer measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Magnetometer measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_MAG_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "1 byte bitmap of EKF cores that will disable magnetic field states and use simple magnetic heading fusion at all times. This parameter enables specified cores to be used as a backup for flight into an environment with high levels of external magnetic interference which may degrade the EKF attitude estimate when using 3-axis magnetometer fusion. NOTE : Use of a different magnetometer fusion algorithm on different cores makes unwanted EKF core switches due to magnetometer errors more likely.",
      "DisplayName": "Bitmask of active EKF cores that will always use heading fusion",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_MAG_M_NSE": {
      "Description": "This is the RMS value of noise in magnetometer measurements. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Magnetometer measurement noise (Gauss)",
      "Increment": "0.01",
      "Range": {
        "high": "0.5",
        "low": "0.01"
      },
      "Units": "Gauss",
      "User": "Advanced"
    },
    "EK2_MAX_FLOW": {
      "Description": "This sets the magnitude maximum optical flow rate in rad/sec that will be accepted by the filter",
      "DisplayName": "Maximum valid optical flow rate",
      "Increment": "0.1",
      "Range": {
        "high": "4.0",
        "low": "1.0"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK2_NOAID_M_NSE": {
      "Description": "This sets the amount of position variation that the EKF allows for when operating without external measurements (eg GPS or optical flow). Increasing this parameter makes the EKF attitude estimate less sensitive to vehicle manoeuvres but more sensitive to IMU errors.",
      "DisplayName": "Non-GPS operation position uncertainty (m)",
      "Range": {
        "high": "50.0",
        "low": "0.5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_OGN_HGT_MASK": {
      "Bitmask": {
        "0": "Correct when using Baro height",
        "1": "Correct when using range finder height",
        "2": "Apply corrections to local position"
      },
      "Description": "When a height sensor other than GPS is used as the primary height source by the EKF, the position of the zero height datum is defined by that sensor and its frame of reference. If a GPS height measurement is also available, then the height of the WGS-84 height datum used by the EKF can be corrected so that the height returned by the getLLH() function is compensated for primary height sensor drift and change in datum over time. The first two bit positions control when the height datum will be corrected. Correction is performed using a Bayes filter and only operates when GPS quality permits. The third bit position controls where the corrections to the GPS reference datum are applied. Corrections can be applied to the local vertical position or to the reported EKF origin height (default).",
      "DisplayName": "Bitmask control of EKF reference height correction",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK2_POSNE_M_NSE": {
      "Description": "This sets the GPS horizontal position observation noise. Increasing it reduces the weighting of GPS horizontal position measurements.",
      "DisplayName": "GPS horizontal position measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_POS_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the GPS position measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "GPS position measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_RNG_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the range finder innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Range finder measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_RNG_M_NSE": {
      "Description": "This is the RMS value of noise in the range finder measurement. Increasing it reduces the weighting on this measurement.",
      "DisplayName": "Range finder measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK2_RNG_USE_HGT": {
      "Description": "Range finder can be used as the primary height source when below this percentage of its maximum range (see RNGFND_MAX_CM). This will not work unless Baro or GPS height is selected as the primary height source vis EK2_ALT_SOURCE = 0 or 2 respectively.  This feature should not be used for terrain following as it is designed  for vertical takeoff and landing with climb above  the range finder use height before commencing the mission, and with horizontal position changes below that height being limited to a flat region around the takeoff and landing point.",
      "DisplayName": "Range finder switch height percentage",
      "Increment": "1",
      "Range": {
        "high": "70",
        "low": "-1"
      },
      "Units": "%",
      "User": "Advanced"
    },
    "EK2_RNG_USE_SPD": {
      "Description": "The range finder will not be used as the primary height source when the horizontal ground speed is greater than this value.",
      "DisplayName": "Range finder max ground speed",
      "Increment": "0.5",
      "Range": {
        "high": "6.0",
        "low": "2.0"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK2_TAU_OUTPUT": {
      "Description": "Sets the time constant of the output complementary filter/predictor in centi-seconds.",
      "DisplayName": "Output complementary filter time constant (centi-sec)",
      "Increment": "5",
      "Range": {
        "high": "50",
        "low": "10"
      },
      "Units": "cs",
      "User": "Advanced"
    },
    "EK2_TERR_GRAD": {
      "Description": "Specifies the maximum gradient of the terrain below the vehicle assumed when it is fusing range finder or optical flow to estimate terrain height.",
      "DisplayName": "Maximum terrain gradient",
      "Increment": "0.01",
      "Range": {
        "high": "0.2",
        "low": "0"
      },
      "User": "Advanced"
    },
    "EK2_VELD_M_NSE": {
      "Description": "This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set vertical velocity observation noise. If the model of receiver used does not provide a speed accurcy estimate, then the parameter value will be used. Increasing it reduces the weighting of the GPS vertical velocity measurements.",
      "DisplayName": "GPS vertical velocity measurement noise (m/s)",
      "Increment": "0.05",
      "Range": {
        "high": "5.0",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK2_VELNE_M_NSE": {
      "Description": "This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set horizontal velocity observation noise. If the model of receiver used does not provide a speed accurcy estimate, then the parameter value will be used. Increasing it reduces the weighting of the GPS horizontal velocity measurements.",
      "DisplayName": "GPS horizontal velocity measurement noise (m/s)",
      "Increment": "0.05",
      "Range": {
        "high": "5.0",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK2_VEL_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the GPS velocity measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "GPS velocity innovation gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_WIND_PSCALE": {
      "Description": "This controls how much the process noise on the wind states is increased when gaining or losing altitude to take into account changes in wind speed and direction with altitude. Increasing this parameter increases how rapidly the wind states adapt when changing altitude, but does make wind velocity estimation noiser.",
      "DisplayName": "Height rate to wind process noise scaler",
      "Increment": "0.1",
      "Range": {
        "high": "1.0",
        "low": "0.0"
      },
      "User": "Advanced"
    },
    "EK2_WIND_P_NSE": {
      "Description": "This state process noise controls the growth of wind state error estimates. Increasing it makes wind estimation faster and noisier.",
      "DisplayName": "Wind velocity process noise (m/s^2)",
      "Increment": "0.1",
      "Range": {
        "high": "1.0",
        "low": "0.01"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK2_YAW_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the magnetometer yaw measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Yaw measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK2_YAW_M_NSE": {
      "Description": "This is the RMS value of noise in yaw measurements from the magnetometer. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Yaw measurement noise (rad)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "0.05"
      },
      "Units": "rad",
      "User": "Advanced"
    }
  },
  "EK3_": {
    "EK3_ABIAS_P_NSE": {
      "Description": "This noise controls the growth of the vertical accelerometer delta velocity bias state error estimate. Increasing it makes accelerometer bias estimation faster and noisier.",
      "DisplayName": "Accelerometer bias stability (m/s^3)",
      "Range": {
        "high": "0.005",
        "low": "0.00001"
      },
      "Units": "m/s/s/s",
      "User": "Advanced"
    },
    "EK3_ACC_BIAS_LIM": {
      "Description": "The accelerometer bias state will be limited to +- this value",
      "DisplayName": "Accelerometer bias limit",
      "Increment": "0.1",
      "Range": {
        "high": "2.5",
        "low": "0.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK3_ACC_P_NSE": {
      "Description": "This control disturbance noise controls the growth of estimated error due to accelerometer measurement errors excluding bias. Increasing it makes the flter trust the accelerometer measurements less and other measurements more.",
      "DisplayName": "Accelerometer noise (m/s^2)",
      "Increment": "0.01",
      "Range": {
        "high": "1.0",
        "low": "0.01"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK3_AFFINITY": {
      "Bitmask": {
        "0": "EnableGPSAffinity",
        "1": "EnableBaroAffinity",
        "2": "EnableCompassAffinity",
        "3": "EnableAirspeedAffinity"
      },
      "Description": "These options control the affinity between sensor instances and EKF cores",
      "DisplayName": "EKF3 Sensor Affinity Options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_ALT_M_NSE": {
      "Description": "This is the RMS value of noise in the altitude measurement. Increasing it reduces the weighting of the baro measurement and will make the filter respond more slowly to baro measurement errors, but will make it more sensitive to GPS and accelerometer errors.",
      "DisplayName": "Altitude measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_BCN_DELAY": {
      "Description": "This is the number of msec that the range beacon measurements lag behind the inertial measurements.",
      "DisplayName": "Range beacon measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK3_BCN_I_GTE": {
      "Description": "This sets the percentage number of standard deviations applied to the range beacon measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Range beacon measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_BCN_M_NSE": {
      "Description": "This is the RMS value of noise in the range beacon measurement. Increasing it reduces the weighting on this measurement.",
      "DisplayName": "Range beacon measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_BETA_MASK": {
      "Bitmask": {
        "0": "Always",
        "1": "WhenNoYawSensor"
      },
      "Description": "1 byte bitmap controlling use of sideslip angle fusion for estimation of non wind states during operation of 'fly forward' vehicle types such as fixed wing planes. By assuming that the angle of sideslip is small, the wind velocity state estimates are corrected  whenever the EKF is not dead reckoning (e.g. has an independent velocity or position sensor such as GPS). This behaviour is on by default and cannot be disabled. When the EKF is dead reckoning, the wind states are used as a reference, enabling use of the small angle of sideslip assumption to correct non wind velocity states (eg attitude, velocity, position, etc) and improve navigation accuracy. This behaviour is on by default and cannot be disabled. The behaviour controlled by this parameter is the use of the small angle of sideslip assumption to correct non wind velocity states when the EKF is NOT dead reckoning. This is primarily of benefit to reduce the buildup of yaw angle errors during straight and level flight without a yaw sensor (e.g. magnetometer or dual antenna GPS yaw) provided aerobatic flight maneuvers with large sideslip angles are not performed. The 'always' option might be used where the yaw sensor is intentionally not fitted or disabled. The 'WhenNoYawSensor' option might be used if a yaw sensor is fitted, but protection against in-flight failure and continual rejection by the EKF is desired. For vehicles operated within visual range of the operator performing frequent turning maneuvers, setting this parameter is unnecessary.",
      "DisplayName": "Bitmask controlling sidelip angle fusion",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_CHECK_SCALE": {
      "Description": "This scales the thresholds that are used to check GPS accuracy before it is used by the EKF. A value of 100 is the default. Values greater than 100 increase and values less than 100 reduce the maximum GPS error the EKF will accept. A value of 200 will double the allowable GPS error.",
      "DisplayName": "GPS accuracy check scaler (%)",
      "Range": {
        "high": "200",
        "low": "50"
      },
      "Units": "%",
      "User": "Advanced"
    },
    "EK3_DRAG_BCOEF_X": {
      "Description": "Ratio of mass to drag coefficient measured along the X body axis. This parameter enables estimation of wind drift for vehicles with bluff bodies and without propulsion forces in the X and Y direction (eg multicopters). The drag produced by this effect scales with speed squared.  Set to a postive value > 1.0 to enable. A starting value is the mass in Kg divided by the frontal area. The predicted drag from the rotors is specified separately by the EK3_DRAG_MCOEF parameter.",
      "DisplayName": "Ballistic coefficient for X axis drag",
      "Range": {
        "high": "1000.0",
        "low": "0.0"
      },
      "Units": "kg/m/m",
      "User": "Advanced"
    },
    "EK3_DRAG_BCOEF_Y": {
      "Description": "Ratio of mass to drag coefficient measured along the Y body axis. This parameter enables estimation of wind drift for vehicles with bluff bodies and without propulsion forces in the X and Y direction (eg multicopters). The drag produced by this effect scales with speed squared.  Set to a postive value > 1.0 to enable. A starting value is the mass in Kg divided by the side area. The predicted drag from the rotors is specified separately by the EK3_DRAG_MCOEF parameter.",
      "DisplayName": "Ballistic coefficient for Y axis drag",
      "Range": {
        "high": "1000.0",
        "low": "50.0"
      },
      "Units": "kg/m/m",
      "User": "Advanced"
    },
    "EK3_DRAG_MCOEF": {
      "Description": "This parameter is used to predict the drag produced by the rotors when flying a multi-copter, enabling estimation of wind drift. The drag produced by this effect scales with speed not speed squared and is produced because some of the air velocity normal to the rotors axis of rotation is lost when passing through the rotor disc which changes the momentum of the airflow causing drag. For unducted rotors the effect is roughly proportional to the area of the propeller blades when viewed side on and changes with different propellers. It is higher for ducted rotors. For example if flying at 15 m/s at sea level conditions produces a rotor induced drag acceleration of 1.5 m/s/s, then EK3_DRAG_MCOEF would be set to 0.1 = (1.5/15.0). Set EK3_MCOEF to a postive value to enable wind estimation using this drag effect. To account for the drag produced by the body which scales with speed squared, see documentation for the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters.",
      "DisplayName": "Momentum coefficient for propeller drag",
      "Increment": "0.01",
      "Range": {
        "high": "1.0",
        "low": "0.0"
      },
      "Units": "1/s",
      "User": "Advanced"
    },
    "EK3_DRAG_M_NSE": {
      "Description": "This sets the amount of noise used when fusing X and Y acceleration as an observation that enables esitmation of wind velocity for multi-rotor vehicles. This feature is enabled by the EK3_DRAG_BCOEF_X and EK3_DRAG_BCOEF_Y parameters",
      "DisplayName": "Observation noise for drag acceleration",
      "Increment": "0.1",
      "Range": {
        "high": "2.0",
        "low": "0.1"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK3_EAS_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the airspeed measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Airspeed measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_EAS_M_NSE": {
      "Description": "This is the RMS value of noise in equivalent airspeed measurements used by planes. Increasing it reduces the weighting of airspeed measurements and will make wind speed estimates less noisy and slower to converge. Increasing also increases navigation errors when dead-reckoning without GPS measurements.",
      "DisplayName": "Equivalent airspeed measurement noise (m/s)",
      "Increment": "0.1",
      "Range": {
        "high": "5.0",
        "low": "0.5"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_ENABLE": {
      "Description": "This enables EKF3. Enabling EKF3 only makes the maths run, it does not mean it will be used for flight control. To use it for flight control set AHRS_EKF_TYPE=3. A reboot or restart will need to be performed after changing the value of EK3_ENABLE for it to take effect.",
      "DisplayName": "Enable EKF3",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "EK3_ERR_THRESH": {
      "Description": "lanes have to be consistently better than the primary by at least this threshold to reduce their overall relativeCoreError, lowering this makes lane switching more sensitive to smaller error differences",
      "DisplayName": "EKF3 Lane Relative Error Sensitivity Threshold",
      "Increment": "0.05",
      "Range": {
        "high": "1",
        "low": "0.05"
      },
      "User": "Advanced"
    },
    "EK3_FLOW_DELAY": {
      "Description": "This is the number of msec that the optical flow measurements lag behind the inertial measurements. It is the time from the end of the optical flow averaging period and does not include the time delay due to the 100msec of averaging within the flow sensor.",
      "DisplayName": "Optical Flow measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK3_FLOW_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the optical flow innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Optical Flow measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_FLOW_M_NSE": {
      "Description": "This is the RMS value of noise and errors in optical flow measurements. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Optical flow measurement noise (rad/s)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "0.05"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK3_FLOW_USE": {
      "Description": "Controls if the optical flow data is fused into the 24-state navigation estimator OR the 1-state terrain height estimator.",
      "DisplayName": "Optical flow use bitmask",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Navigation",
        "2": "Terrain"
      }
    },
    "EK3_GBIAS_P_NSE": {
      "Description": "This state  process noise controls growth of the gyro delta angle bias state error estimate. Increasing it makes rate gyro bias estimation faster and noisier.",
      "DisplayName": "Rate gyro bias stability (rad/s/s)",
      "Range": {
        "high": "0.001",
        "low": "0.00001"
      },
      "Units": "rad/s/s",
      "User": "Advanced"
    },
    "EK3_GLITCH_RAD": {
      "Description": "This controls the maximum radial uncertainty in position between the value predicted by the filter and the value measured by the GPS before the filter position and velocity states are reset to the GPS. Making this value larger allows the filter to ignore larger GPS glitches but also means that non-GPS errors such as IMU and compass can create a larger error in position before the filter is forced back to the GPS position.",
      "DisplayName": "GPS glitch radius gate size (m)",
      "Increment": "5",
      "Range": {
        "high": "100",
        "low": "10"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_GND_EFF_DZ": {
      "Description": "This parameter sets the size of the dead zone that is applied to negative baro height spikes that can occur when taking off or landing when a vehicle with lift rotors is operating in ground effect ground effect. Set to about 0.5m less than the amount of negative offset in baro height that occurs just prior to takeoff when lift motors are spooling up. Set to 0 if no ground effect is present.",
      "DisplayName": "Baro height ground effect dead zone",
      "Increment": "0.5",
      "Range": {
        "high": "10.0",
        "low": "0.0"
      },
      "User": "Advanced"
    },
    "EK3_GPS_CHECK": {
      "Bitmask": {
        "0": "NSats",
        "1": "HDoP",
        "2": "speed error",
        "3": "position error",
        "4": "yaw error",
        "5": "pos drift",
        "6": "vert speed",
        "7": "horiz speed"
      },
      "Description": "This is a 1 byte bitmap controlling which GPS preflight checks are performed. Set to 0 to bypass all checks. Set to 255 perform all checks. Set to 3 to check just the number of satellites and HDoP. Set to 31 for the most rigorous checks that will still allow checks to pass when the copter is moving, eg launch from a boat.",
      "DisplayName": "GPS preflight check",
      "User": "Advanced"
    },
    "EK3_GSF_RST_MAX": {
      "Description": "Sets the maximum number of times the EKF3 will be allowed to reset its yaw to the estimate from the EKF-GSF yaw estimator. No resets will be allowed unless the use of the EKF-GSF yaw estimate is enabled via the EK3_GSF_USE_MASK parameter.",
      "DisplayName": "Maximum number of resets to the EKF-GSF yaw estimate allowed",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_GSF_RUN_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "1 byte bitmap of which EKF3 instances run an independant EKF-GSF yaw estimator to provide a backup yaw estimate that doesn't rely on magnetometer data. This estimator uses IMU, GPS and, if available, airspeed data. EKF-GSF yaw estimator data for the primary EKF3 instance will be logged as GSF0 and GSF1 messages. Use of the yaw estimate generated by this algorithm is controlled by the EK3_GSF_USE_MASK and EK3_GSF_RST_MAX parameters. To run the EKF-GSF yaw estimator in ride-along and logging only, set EK3_GSF_USE to 0. ",
      "DisplayName": "Bitmask of which EKF-GSF yaw estimators run",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_GSF_USE_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "A bitmask of which EKF3 instances will use the output from the EKF-GSF yaw estimator that has been turned on by the EK3_GSF_RUN_MASK parameter. If the inertial navigation calculation stops following the GPS, then the vehicle code can request EKF3 to attempt to resolve the issue, either by performing a yaw reset if enabled by this parameter by switching to another EKF3 instance.",
      "DisplayName": "Bitmask of which EKF-GSF yaw estimators are used",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_GYRO_P_NSE": {
      "Description": "This control disturbance noise controls the growth of estimated error due to gyro measurement errors excluding bias. Increasing it makes the flter trust the gyro measurements less and other measurements more.",
      "DisplayName": "Rate gyro noise (rad/s)",
      "Increment": "0.0001",
      "Range": {
        "high": "0.1",
        "low": "0.0001"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK3_HGT_DELAY": {
      "Description": "This is the number of msec that the Height measurements lag behind the inertial measurements.",
      "DisplayName": "Height measurement delay (msec)",
      "Increment": "10",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "EK3_HGT_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the height measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Height measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_HRT_FILT": {
      "Description": "Specifies the crossover frequency of the complementary filter used to calculate the output predictor height rate derivative.",
      "DisplayName": "Height rate filter crossover frequency",
      "Range": {
        "high": "30.0",
        "low": "0.1"
      },
      "Units": "Hz"
    },
    "EK3_IMU_MASK": {
      "Bitmask": {
        "0": "FirstIMU",
        "1": "SecondIMU",
        "2": "ThirdIMU",
        "3": "FourthIMU",
        "4": "FifthIMU",
        "5": "SixthIMU"
      },
      "Description": "1 byte bitmap of IMUs to use in EKF3. A separate instance of EKF3 will be started for each IMU selected. Set to 1 to use the first IMU only (default), set to 2 to use the second IMU only, set to 3 to use the first and second IMU. Additional IMU's can be used up to a maximum of 6 if memory and processing resources permit. There may be insufficient memory and processing resources to run multiple instances. If this occurs EKF3 will fail to start.",
      "DisplayName": "Bitmask of active IMUs",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_MAGB_P_NSE": {
      "Description": "This state process noise controls the growth of body magnetic field state error estimates. Increasing it makes magnetometer bias error estimation faster and noisier.",
      "DisplayName": "Body magnetic field process noise (gauss/s)",
      "Range": {
        "high": "0.01",
        "low": "0.00001"
      },
      "Units": "Gauss/s",
      "User": "Advanced"
    },
    "EK3_MAGE_P_NSE": {
      "Description": "This state process noise controls the growth of earth magnetic field state error estimates. Increasing it makes earth magnetic field estimation faster and noisier.",
      "DisplayName": "Earth magnetic field process noise (gauss/s)",
      "Range": {
        "high": "0.01",
        "low": "0.00001"
      },
      "Units": "Gauss/s",
      "User": "Advanced"
    },
    "EK3_MAG_CAL": {
      "Description": "This determines when the filter will use the 3-axis magnetometer fusion model that estimates both earth and body fixed magnetic field states and when it will use a simpler magnetic heading fusion model that does not use magnetic field states. The 3-axis magnetometer fusion is only suitable for use when the external magnetic field environment is stable. EK3_MAG_CAL = 0 uses heading fusion on ground, 3-axis fusion in-flight, and is the default setting for Plane users. EK3_MAG_CAL = 1 uses 3-axis fusion only when manoeuvring. EK3_MAG_CAL = 2 uses heading fusion at all times, is recommended if the external magnetic field is varying and is the default for rovers. EK3_MAG_CAL = 3 uses heading fusion on the ground and 3-axis fusion after the first in-air field and yaw reset has completed, and is the default for copters. EK3_MAG_CAL = 4 uses 3-axis fusion at all times. EK3_MAG_CAL = 5 uses an external yaw sensor with simple heading fusion. NOTE : Use of simple heading magnetometer fusion makes vehicle compass calibration and alignment errors harder for the EKF to detect which reduces the sensitivity of the Copter EKF failsafe algorithm. NOTE: The fusion mode can be forced to 2 for specific EKF cores using the EK3_MAG_MASK parameter. EK3_MAG_CAL = 6 uses an external yaw sensor with fallback to compass when the external sensor is not available if we are flying. NOTE: The fusion mode can be forced to 2 for specific EKF cores using the EK3_MAG_MASK parameter. NOTE: limited operation without a magnetometer or any other yaw sensor is possible by setting all COMPASS_USE, COMPASS_USE2, COMPASS_USE3, etc parameters to 0 and setting COMPASS_ENABLE to 0. If this is done, the EK3_GSF_RUN and EK3_GSF_USE masks must be set to the same as EK3_IMU_MASK. A yaw angle derived from IMU and GPS velocity data using a Gaussian Sum Filter (GSF) will then be used to align the yaw when flight commences and there is sufficient movement.",
      "DisplayName": "Magnetometer default fusion mode",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "When flying",
        "1": "When manoeuvring",
        "2": "Never",
        "3": "After first climb yaw reset",
        "4": "Always",
        "5": "Use external yaw sensor (Deprecated in 4.1+ see EK3_SRCn_YAW)",
        "6": "External yaw sensor with compass fallback (Deprecated in 4.1+ see EK3_SRCn_YAW)"
      }
    },
    "EK3_MAG_EF_LIM": {
      "Description": "This limits the difference between the learned earth magnetic field and the earth field from the world magnetic model tables. A value of zero means to disable the use of the WMM tables.",
      "DisplayName": "EarthField error limit",
      "Range": {
        "high": "500",
        "low": "0"
      },
      "Units": "mGauss",
      "User": "Advanced"
    },
    "EK3_MAG_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the magnetometer measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Magnetometer measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_MAG_MASK": {
      "Bitmask": {
        "0": "FirstEKF",
        "1": "SecondEKF",
        "2": "ThirdEKF",
        "3": "FourthEKF",
        "4": "FifthEKF",
        "5": "SixthEKF"
      },
      "Description": "1 byte bitmap of EKF cores that will disable magnetic field states and use simple magnetic heading fusion at all times. This parameter enables specified cores to be used as a backup for flight into an environment with high levels of external magnetic interference which may degrade the EKF attitude estimate when using 3-axis magnetometer fusion. NOTE : Use of a different magnetometer fusion algorithm on different cores makes unwanted EKF core switches due to magnetometer errors more likely.",
      "DisplayName": "Bitmask of active EKF cores that will always use heading fusion",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_MAG_M_NSE": {
      "Description": "This is the RMS value of noise in magnetometer measurements. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Magnetometer measurement noise (Gauss)",
      "Increment": "0.01",
      "Range": {
        "high": "0.5",
        "low": "0.01"
      },
      "Units": "Gauss",
      "User": "Advanced"
    },
    "EK3_MAX_FLOW": {
      "Description": "This sets the magnitude maximum optical flow rate in rad/sec that will be accepted by the filter",
      "DisplayName": "Maximum valid optical flow rate",
      "Increment": "0.1",
      "Range": {
        "high": "4.0",
        "low": "1.0"
      },
      "Units": "rad/s",
      "User": "Advanced"
    },
    "EK3_NOAID_M_NSE": {
      "Description": "This sets the amount of position variation that the EKF allows for when operating without external measurements (eg GPS or optical flow). Increasing this parameter makes the EKF attitude estimate less sensitive to vehicle manoeuvres but more sensitive to IMU errors.",
      "DisplayName": "Non-GPS operation position uncertainty (m)",
      "Range": {
        "high": "50.0",
        "low": "0.5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_OGNM_TEST_SF": {
      "Description": "This parameter is adjust the sensitivity of the on ground not moving test which is used to assist with learning the yaw gyro bias and stopping yaw drift before flight when operating without a yaw sensor. Bigger values allow the detection of a not moving condition with noiser IMU data. Check the XKFM data logged when the vehicle is on ground not moving and adjust the value of OGNM_TEST_SF to be slightly higher than the maximum value of the XKFM.ADR, XKFM.ALR, XKFM.GDR and XKFM.GLR test levels.",
      "DisplayName": "On ground not moving test scale factor",
      "Increment": "0.5",
      "Range": {
        "high": "10.0",
        "low": "1.0"
      },
      "User": "Advanced"
    },
    "EK3_OGN_HGT_MASK": {
      "Bitmask": {
        "0": "Correct when using Baro height",
        "1": "Correct when using range finder height",
        "2": "Apply corrections to local position"
      },
      "Description": "When a height sensor other than GPS is used as the primary height source by the EKF, the position of the zero height datum is defined by that sensor and its frame of reference. If a GPS height measurement is also available, then the height of the WGS-84 height datum used by the EKF can be corrected so that the height returned by the getLLH() function is compensated for primary height sensor drift and change in datum over time. The first two bit positions control when the height datum will be corrected. Correction is performed using a Bayes filter and only operates when GPS quality permits. The third bit position controls where the corrections to the GPS reference datum are applied. Corrections can be applied to the local vertical position or to the reported EKF origin height (default).",
      "DisplayName": "Bitmask control of EKF reference height correction",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "EK3_POSNE_M_NSE": {
      "Description": "This sets the GPS horizontal position observation noise. Increasing it reduces the weighting of GPS horizontal position measurements.",
      "DisplayName": "GPS horizontal position measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_POS_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the GPS position measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "GPS position measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_PRIMARY": {
      "Description": "The core number (index in IMU mask) that will be used as the primary EKF core on startup. While disarmed the EKF will force the use of this core. A value of 0 corresponds to the first IMU in EK3_IMU_MASK.",
      "DisplayName": "Primary core number",
      "Increment": "1",
      "Range": {
        "high": "2",
        "low": "0"
      },
      "User": "Advanced"
    },
    "EK3_RNG_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the range finder innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Range finder measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_RNG_M_NSE": {
      "Description": "This is the RMS value of noise in the range finder measurement. Increasing it reduces the weighting on this measurement.",
      "DisplayName": "Range finder measurement noise (m)",
      "Increment": "0.1",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "EK3_RNG_USE_HGT": {
      "Description": "Range finder can be used as the primary height source when below this percentage of its maximum range (see RNGFNDx_MAX_CM) and the primary height source is Baro or GPS (see EK3_SRCx_POSZ).  This feature should not be used for terrain following as it is designed for vertical takeoff and landing with climb above the range finder use height before commencing the mission, and with horizontal position changes below that height being limited to a flat region around the takeoff and landing point.",
      "DisplayName": "Range finder switch height percentage",
      "Increment": "1",
      "Range": {
        "high": "70",
        "low": "-1"
      },
      "Units": "%",
      "User": "Advanced"
    },
    "EK3_RNG_USE_SPD": {
      "Description": "The range finder will not be used as the primary height source when the horizontal ground speed is greater than this value.",
      "DisplayName": "Range finder max ground speed",
      "Increment": "0.5",
      "Range": {
        "high": "6.0",
        "low": "2.0"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_TAU_OUTPUT": {
      "Description": "Sets the time constant of the output complementary filter/predictor in centi-seconds.",
      "DisplayName": "Output complementary filter time constant (centi-sec)",
      "Increment": "5",
      "Range": {
        "high": "50",
        "low": "10"
      },
      "Units": "cs",
      "User": "Advanced"
    },
    "EK3_TERR_GRAD": {
      "Description": "Specifies the maximum gradient of the terrain below the vehicle when it is using range finder as a height reference",
      "DisplayName": "Maximum terrain gradient",
      "Increment": "0.01",
      "Range": {
        "high": "0.2",
        "low": "0"
      },
      "User": "Advanced"
    },
    "EK3_VELD_M_NSE": {
      "Description": "This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set vertical velocity observation noise. If the model of receiver used does not provide a speed accurcy estimate, then the parameter value will be used. Increasing it reduces the weighting of the GPS vertical velocity measurements.",
      "DisplayName": "GPS vertical velocity measurement noise (m/s)",
      "Increment": "0.05",
      "Range": {
        "high": "5.0",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_VELNE_M_NSE": {
      "Description": "This sets a lower limit on the speed accuracy reported by the GPS receiver that is used to set horizontal velocity observation noise. If the model of receiver used does not provide a speed accurcy estimate, then the parameter value will be used. Increasing it reduces the weighting of the GPS horizontal velocity measurements.",
      "DisplayName": "GPS horizontal velocity measurement noise (m/s)",
      "Increment": "0.05",
      "Range": {
        "high": "5.0",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_VEL_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the GPS velocity measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "GPS velocity innovation gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_VIS_VERR_MAX": {
      "Description": "This is the 1-STD odometry velocity observation error that will be assumed when minimum quality is reported by the sensor. When quality is between max and min, the error will be calculated using linear interpolation between VIS_VERR_MIN and VIS_VERR_MAX.",
      "DisplayName": "Visual odometry maximum velocity error",
      "Increment": "0.1",
      "Range": {
        "high": "5.0",
        "low": "0.5"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_VIS_VERR_MIN": {
      "Description": "This is the 1-STD odometry velocity observation error that will be assumed when maximum quality is reported by the sensor. When quality is between max and min, the error will be calculated using linear interpolation between VIS_VERR_MIN and VIS_VERR_MAX.",
      "DisplayName": "Visual odometry minimum velocity error",
      "Increment": "0.05",
      "Range": {
        "high": "0.5",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_WENC_VERR": {
      "Description": "This is the 1-STD odometry velocity observation error that will be assumed when wheel encoder data is being fused.",
      "DisplayName": "Wheel odometry velocity error",
      "Increment": "0.1",
      "Range": {
        "high": "1.0",
        "low": "0.01"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "EK3_WIND_PSCALE": {
      "Description": "This controls how much the process noise on the wind states is increased when gaining or losing altitude to take into account changes in wind speed and direction with altitude. Increasing this parameter increases how rapidly the wind states adapt when changing altitude, but does make wind velocity estimation noiser.",
      "DisplayName": "Height rate to wind process noise scaler",
      "Increment": "0.1",
      "Range": {
        "high": "2.0",
        "low": "0.0"
      },
      "User": "Advanced"
    },
    "EK3_WIND_P_NSE": {
      "Description": "This state process noise controls the growth of wind state error estimates. Increasing it makes wind estimation faster and noisier.",
      "DisplayName": "Wind velocity process noise (m/s^2)",
      "Increment": "0.1",
      "Range": {
        "high": "2.0",
        "low": "0.01"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "EK3_YAW_I_GATE": {
      "Description": "This sets the percentage number of standard deviations applied to the magnetometer yaw measurement innovation consistency check. Decreasing it makes it more likely that good measurements will be rejected. Increasing it makes it more likely that bad measurements will be accepted.",
      "DisplayName": "Yaw measurement gate size",
      "Increment": "25",
      "Range": {
        "high": "1000",
        "low": "100"
      },
      "User": "Advanced"
    },
    "EK3_YAW_M_NSE": {
      "Description": "This is the RMS value of noise in yaw measurements from the magnetometer. Increasing it reduces the weighting on these measurements.",
      "DisplayName": "Yaw measurement noise (rad)",
      "Increment": "0.05",
      "Range": {
        "high": "1.0",
        "low": "0.05"
      },
      "Units": "rad",
      "User": "Advanced"
    }
  },
  "EK3_SRC": {
    "EK3_SRC1_POSXY": {
      "Description": "Position Horizontal Source (Primary)",
      "DisplayName": "Position Horizontal Source (Primary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC1_POSZ": {
      "Description": "Position Vertical Source",
      "DisplayName": "Position Vertical Source",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Baro",
        "2": "RangeFinder",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC1_VELXY": {
      "Description": "Velocity Horizontal Source",
      "DisplayName": "Velocity Horizontal Source",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "5": "OpticalFlow",
        "6": "ExternalNav",
        "7": "WheelEncoder"
      }
    },
    "EK3_SRC1_VELZ": {
      "Description": "Velocity Vertical Source",
      "DisplayName": "Velocity Vertical Source",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC1_YAW": {
      "Description": "Yaw Source",
      "DisplayName": "Yaw Source",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Compass",
        "2": "GPS",
        "3": "GPS with Compass Fallback",
        "6": "ExternalNav",
        "8": "GSF"
      }
    },
    "EK3_SRC2_POSXY": {
      "Description": "Position Horizontal Source (Secondary)",
      "DisplayName": "Position Horizontal Source (Secondary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC2_POSZ": {
      "Description": "Position Vertical Source (Secondary)",
      "DisplayName": "Position Vertical Source (Secondary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Baro",
        "2": "RangeFinder",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC2_VELXY": {
      "Description": "Velocity Horizontal Source (Secondary)",
      "DisplayName": "Velocity Horizontal Source (Secondary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "5": "OpticalFlow",
        "6": "ExternalNav",
        "7": "WheelEncoder"
      }
    },
    "EK3_SRC2_VELZ": {
      "Description": "Velocity Vertical Source (Secondary)",
      "DisplayName": "Velocity Vertical Source (Secondary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC2_YAW": {
      "Description": "Yaw Source (Secondary)",
      "DisplayName": "Yaw Source (Secondary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Compass",
        "2": "GPS",
        "3": "GPS with Compass Fallback",
        "6": "ExternalNav",
        "8": "GSF"
      }
    },
    "EK3_SRC3_POSXY": {
      "Description": "Position Horizontal Source (Tertiary)",
      "DisplayName": "Position Horizontal Source (Tertiary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC3_POSZ": {
      "Description": "Position Vertical Source (Tertiary)",
      "DisplayName": "Position Vertical Source (Tertiary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Baro",
        "2": "RangeFinder",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC3_VELXY": {
      "Description": "Velocity Horizontal Source (Tertiary)",
      "DisplayName": "Velocity Horizontal Source (Tertiary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "5": "OpticalFlow",
        "6": "ExternalNav",
        "7": "WheelEncoder"
      }
    },
    "EK3_SRC3_VELZ": {
      "Description": "Velocity Vertical Source (Tertiary)",
      "DisplayName": "Velocity Vertical Source (Tertiary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "3": "GPS",
        "4": "Beacon",
        "6": "ExternalNav"
      }
    },
    "EK3_SRC3_YAW": {
      "Description": "Yaw Source (Tertiary)",
      "DisplayName": "Yaw Source (Tertiary)",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Compass",
        "2": "GPS",
        "3": "GPS with Compass Fallback",
        "6": "ExternalNav",
        "8": "GSF"
      }
    },
    "EK3_SRC_OPTIONS": {
      "Bitmask": {
        "0": "FuseAllVelocities"
      },
      "Description": "EKF Source Options",
      "DisplayName": "EKF Source Options",
      "User": "Advanced"
    }
  },
  "ESC_TLM": {
    "ESC_TLM_MAV_OFS": {
      "Description": "Offset to apply to ESC numbers when reporting as ESC_TELEMETRY packets over MAVLink. This allows high numbered motors to be displayed as low numbered ESCs for convenience on GCS displays. A value of 4 would send ESC on output 5 as ESC number 1 in ESC_TELEMETRY packets",
      "DisplayName": "ESC Telemetry mavlink offset",
      "Increment": "1",
      "Range": {
        "high": "31",
        "low": "0"
      },
      "User": "Standard"
    }
  },
  "FFT_": {
    "FFT_ATT_REF": {
      "Description": "FFT attenuation level in dB for bandwidth calculation and peak detection. The bandwidth is calculated by comparing peak power output with the attenuated version. The default of 15 has shown to be a good compromise in both simulations and real flight.",
      "DisplayName": "FFT attenuation for bandwidth calculation",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "User": "Advanced"
    },
    "FFT_BW_HOVER": {
      "Description": "FFT learned bandwidth at hover for the attenuation frequencies.",
      "DisplayName": "FFT learned bandwidth at hover",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "User": "Advanced"
    },
    "FFT_ENABLE": {
      "Description": "Enable Gyro FFT analyser",
      "DisplayName": "Enable",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "FFT_FREQ_HOVER": {
      "Description": "The learned hover noise frequency",
      "DisplayName": "FFT learned hover frequency",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "User": "Advanced"
    },
    "FFT_HMNC_FIT": {
      "Description": "FFT harmonic fit frequency threshold percentage at which a signal of the appropriate frequency is determined to be the harmonic of another. Signals that have a harmonic relationship that varies at most by this percentage are considered harmonics of each other for the purpose of selecting the harmonic notch frequency. If a match is found then the lower frequency harmonic is always used as the basis for the dynamic harmonic notch. A value of zero completely disables harmonic matching.",
      "DisplayName": "FFT harmonic fit frequency threshold",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "FFT_HMNC_PEAK": {
      "Description": "The FFT harmonic peak target that should be returned by FTN1.PkAvg. The resulting value will be used by the harmonic notch if configured to track the FFT frequency. By default the appropriate peak is auto-detected based on the harmonic fit between peaks and the energy-weighted average frequency on roll on pitch is used. Setting this to 1 will always target the highest energy peak. Setting this to 2 will target the highest energy peak that is lower in frequency than the highest energy peak. Setting this to 3 will target the highest energy peak that is higher in frequency than the highest energy peak. Setting this to 4 will target the highest energy peak on the roll axis only and only the roll frequency will be used (some vehicles have a much more pronounced peak on roll). Setting this to 5 will target the highest energy peak on the pitch axis only and only the pitch frequency will be used (some vehicles have a much more pronounced peak on roll).",
      "DisplayName": "FFT harmonic peak target",
      "User": "Advanced",
      "Values": {
        "0": "Auto",
        "1": "Center Frequency",
        "2": "Lower-Shoulder Frequency",
        "3": "Upper-Shoulder Frequency",
        "4": "Roll-Axis",
        "5": "Pitch-Axis"
      }
    },
    "FFT_MAXHZ": {
      "Description": "Upper bound of FFT frequency detection in Hz. On smaller vehicles the maximum motor frequency is likely to be significantly higher than for larger vehicles.",
      "DisplayName": "Maximum Frequency",
      "Range": {
        "high": "495",
        "low": "20"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "FFT_MINHZ": {
      "Description": "Lower bound of FFT frequency detection in Hz. On larger vehicles the minimum motor frequency is likely to be significantly lower than for smaller vehicles.",
      "DisplayName": "Minimum Frequency",
      "Range": {
        "high": "400",
        "low": "20"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "FFT_NUM_FRAMES": {
      "Description": "Number of output frequency frames to retain and average in order to calculate final frequencies. Averaging output frames can drastically reduce noise and jitter at the cost of latency as long as the input is stable. The default is to perform no averaging. For rapidly changing frequencies (e.g. smaller aircraft) fewer frames should be averaged.",
      "DisplayName": "FFT output frames to retain and average",
      "Range": {
        "high": "8",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "FFT_SAMPLE_MODE": {
      "Description": "Sampling mode (and therefore rate). 0: Gyro rate sampling, 1: Fast loop rate sampling, 2: Fast loop rate / 2 sampling, 3: Fast loop rate / 3 sampling. Takes effect on reboot.",
      "DisplayName": "Sample Mode",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "FFT_SNR_REF": {
      "Description": "FFT SNR reference threshold in dB at which a signal is determined to be present.",
      "DisplayName": "FFT SNR reference threshold",
      "Range": {
        "high": "100.0",
        "low": "0.0"
      },
      "User": "Advanced"
    },
    "FFT_THR_REF": {
      "Description": "FFT learned thrust reference for the hover frequency and FFT minimum frequency.",
      "DisplayName": "FFT learned thrust reference",
      "Range": {
        "high": "0.9",
        "low": "0.01"
      },
      "User": "Advanced"
    },
    "FFT_WINDOW_OLAP": {
      "Description": "Percentage of window to be overlapped before another frame is process. Takes effect on reboot. A good default is 50% overlap. Higher overlap results in more processed frames but not necessarily more temporal resolution. Lower overlap results in lost information at the frame edges.",
      "DisplayName": "FFT window overlap",
      "Range": {
        "high": "0.9",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "FFT_WINDOW_SIZE": {
      "Description": "Size of window to be used in FFT calculations. Takes effect on reboot. Must be a power of 2 and between 32 and 512. Larger windows give greater frequency resolution but poorer time resolution, consume more CPU time and may not be appropriate for all vehicles. Time and frequency resolution are given by the sample-rate / window-size. Windows of 256 are only really recommended for F7 class boards, windows of 512 or more H7 class.",
      "DisplayName": "FFT window size",
      "Range": {
        "high": "1024",
        "low": "32"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    }
  },
  "FINS_": {
    "FINS_FREQ_HZ": {
      "Description": "This is the oscillation frequency of the fins",
      "DisplayName": "Fins frequency",
      "Range": {
        "high": "10",
        "low": "1"
      },
      "User": "Standard"
    },
    "FINS_TURBO_MODE": {
      "Description": "Enables double speed on high offset.",
      "DisplayName": "Enable turbo mode",
      "Range": {
        "high": "1",
        "low": "0"
      },
      "User": "Standard"
    }
  },
  "FRSKY_": {
    "FRSKY_DNLINK1_ID": {
      "Description": "Change the first extra downlink sensor id (SPort only)",
      "DisplayName": "First downlink sensor id",
      "User": "Advanced",
      "Values": {
        "-1": "Disable",
        "10": "10",
        "11": "11",
        "12": "12",
        "13": "13",
        "14": "14",
        "15": "15",
        "16": "16",
        "17": "17",
        "18": "18",
        "19": "19",
        "20": "20",
        "21": "21",
        "22": "22",
        "23": "23",
        "24": "24",
        "25": "25",
        "26": "26",
        "7": "7",
        "8": "8",
        "9": "9"
      }
    },
    "FRSKY_DNLINK2_ID": {
      "Description": "Change the second extra downlink sensor id (SPort only)",
      "DisplayName": "Second downlink sensor id",
      "User": "Advanced",
      "Values": {
        "-1": "Disable",
        "10": "10",
        "11": "11",
        "12": "12",
        "13": "13",
        "14": "14",
        "15": "15",
        "16": "16",
        "17": "17",
        "18": "18",
        "19": "19",
        "20": "20",
        "21": "21",
        "22": "22",
        "23": "23",
        "24": "24",
        "25": "25",
        "26": "26",
        "7": "7",
        "8": "8",
        "9": "9"
      }
    },
    "FRSKY_DNLINK_ID": {
      "Description": "Change the default downlink sensor id (SPort only)",
      "DisplayName": "Default downlink sensor id",
      "User": "Advanced",
      "Values": {
        "-1": "Disable",
        "10": "10",
        "11": "11",
        "12": "12",
        "13": "13",
        "14": "14",
        "15": "15",
        "16": "16",
        "17": "17",
        "18": "18",
        "19": "19",
        "20": "20",
        "21": "21",
        "22": "22",
        "23": "23",
        "24": "24",
        "25": "25",
        "26": "26",
        "27": "27",
        "7": "7",
        "8": "8",
        "9": "9"
      }
    },
    "FRSKY_OPTIONS": {
      "Bitmask": {
        "0": "EnableAirspeedAndGroundspeed"
      },
      "Description": "A bitmask to set some FRSky Telemetry specific options",
      "DisplayName": "FRSky Telemetry Options",
      "User": "Standard"
    },
    "FRSKY_UPLINK_ID": {
      "Description": "Change the uplink sensor id (SPort only)",
      "DisplayName": "Uplink sensor id",
      "User": "Advanced",
      "Values": {
        "-1": "Disable",
        "10": "10",
        "11": "11",
        "12": "12",
        "13": "13",
        "14": "14",
        "15": "15",
        "16": "16",
        "17": "17",
        "18": "18",
        "19": "19",
        "20": "20",
        "21": "21",
        "22": "22",
        "23": "23",
        "24": "24",
        "25": "25",
        "26": "26",
        "7": "7",
        "8": "8",
        "9": "9"
      }
    }
  },
  "GEN_": {
    "GEN_OPTIONS": {
      "Bitmask": {
        "0": "Supress Maintenance-Required Warnings"
      },
      "Description": "Bitmask of options for generators",
      "DisplayName": "Generator Options",
      "User": "Standard"
    },
    "GEN_TYPE": {
      "Description": "Generator type",
      "DisplayName": "Generator type",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "IE 650w 800w Fuel Cell",
        "2": "IE 2.4kW Fuel Cell",
        "3": "Richenpower"
      }
    }
  },
  "GPS": {
    "GPS1_CAN_OVRIDE": {
      "Description": "GPS Node id for first GPS. If 0 the gps will be automatically selected on a first-come-first-GPS basis.",
      "DisplayName": "First DroneCAN GPS NODE ID",
      "User": "Advanced"
    },
    "GPS2_CAN_OVRIDE": {
      "Description": "GPS Node id for second GPS. If 0 the gps will be automatically selected on a second-come-second-GPS basis.",
      "DisplayName": "Second DroneCAN GPS NODE ID",
      "User": "Advanced"
    },
    "GPS_AUTO_CONFIG": {
      "Description": "Controls if the autopilot should automatically configure the GPS based on the parameters and default settings",
      "DisplayName": "Automatic GPS configuration",
      "User": "Advanced",
      "Values": {
        "0": "Disables automatic configuration",
        "1": "Enable automatic configuration for Serial GPSes only",
        "2": "Enable automatic configuration for DroneCAN as well"
      }
    },
    "GPS_AUTO_SWITCH": {
      "Description": "Automatic switchover to GPS reporting best lock, 1:UseBest selects the GPS with highest status, if both are equal the GPS with highest satellite count is used 4:Use primary if 3D fix or better, will revert to 'UseBest' behaviour if 3D fix is lost on primary",
      "DisplayName": "Automatic Switchover Setting",
      "User": "Advanced",
      "Values": {
        "0": "Use primary",
        "1": "UseBest",
        "2": "Blend",
        "4": "Use primary if 3D fix or better"
      }
    },
    "GPS_BLEND_MASK": {
      "Bitmask": {
        "0": "Horiz Pos",
        "1": "Vert Pos",
        "2": "Speed"
      },
      "Description": "Determines which of the accuracy measures Horizontal position, Vertical Position and Speed are used to calculate the weighting on each GPS receiver when soft switching has been selected by setting GPS_AUTO_SWITCH to 2(Blend)",
      "DisplayName": "Multi GPS Blending Mask",
      "User": "Advanced"
    },
    "GPS_BLEND_TC": {
      "Description": "Controls the slowest time constant applied to the calculation of GPS position and height offsets used to adjust different GPS receivers for steady state position differences.",
      "DisplayName": "Blending time constant",
      "Range": {
        "high": "30.0",
        "low": "5.0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "GPS_CAN_NODEID1": {
      "Description": "GPS Node id for first-discovered GPS.",
      "DisplayName": "GPS Node ID 1",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "GPS_CAN_NODEID2": {
      "Description": "GPS Node id for second-discovered GPS.",
      "DisplayName": "GPS Node ID 2",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "GPS_COM_PORT": {
      "Description": "The physical COM port on the connected device, currently only applies to SBF GPS",
      "DisplayName": "GPS physical COM port",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "GPS_COM_PORT2": {
      "Description": "The physical COM port on the connected device, currently only applies to SBF GPS",
      "DisplayName": "GPS physical COM port",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "GPS_DELAY_MS": {
      "Description": "Controls the amount of GPS  measurement delay that the autopilot compensates for. Set to zero to use the default delay for the detected GPS type.",
      "DisplayName": "GPS delay in milliseconds",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "GPS_DELAY_MS2": {
      "Description": "Controls the amount of GPS  measurement delay that the autopilot compensates for. Set to zero to use the default delay for the detected GPS type.",
      "DisplayName": "GPS 2 delay in milliseconds",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "ms",
      "User": "Advanced"
    },
    "GPS_DRV_OPTIONS": {
      "Bitmask": {
        "0": "Use UART2 for moving baseline on ublox",
        "1": "Use base station for GPS yaw on SBF",
        "2": "Use baudrate 115200",
        "3": "Use dedicated CAN port b/w GPSes for moving baseline",
        "4": "Use ellipsoid height instead of AMSL for uBlox driver"
      },
      "Description": "Additional backend specific options",
      "DisplayName": "driver options",
      "User": "Advanced"
    },
    "GPS_GNSS_MODE": {
      "Bitmask": {
        "0": "GPS",
        "1": "SBAS",
        "2": "Galileo",
        "3": "Beidou",
        "4": "IMES",
        "5": "QZSS",
        "6": "GLONASS"
      },
      "Description": "Bitmask for what GNSS system to use on the first GPS (all unchecked or zero to leave GPS as configured)",
      "DisplayName": "GNSS system configuration",
      "User": "Advanced"
    },
    "GPS_GNSS_MODE2": {
      "Bitmask": {
        "0": "GPS",
        "1": "SBAS",
        "2": "Galileo",
        "3": "Beidou",
        "4": "IMES",
        "5": "QZSS",
        "6": "GLONASS"
      },
      "Description": "Bitmask for what GNSS system to use on the second GPS (all unchecked or zero to leave GPS as configured)",
      "DisplayName": "GNSS system configuration",
      "User": "Advanced"
    },
    "GPS_INJECT_TO": {
      "Description": "The GGS can send raw serial packets to inject data to multiple GPSes.",
      "DisplayName": "Destination for GPS_INJECT_DATA MAVLink packets",
      "User": "Advanced",
      "Values": {
        "0": "send to first GPS",
        "1": "send to 2nd GPS",
        "127": "send to all"
      }
    },
    "GPS_MIN_DGPS": {
      "Description": "Sets the minimum type of differential GPS corrections required before allowing to switch into DGPS mode.",
      "DisplayName": "Minimum Lock Type Accepted for DGPS",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Any",
        "100": "IntegerRTK",
        "50": "FloatRTK"
      }
    },
    "GPS_MIN_ELEV": {
      "Description": "This sets the minimum elevation of satellites above the horizon for them to be used for navigation. Setting this to -100 leaves the minimum elevation set to the GPS modules default.",
      "DisplayName": "Minimum elevation",
      "Range": {
        "high": "90",
        "low": "-100"
      },
      "Units": "deg",
      "User": "Advanced"
    },
    "GPS_NAVFILTER": {
      "Description": "Navigation filter engine setting",
      "DisplayName": "Navigation filter setting",
      "User": "Advanced",
      "Values": {
        "0": "Portable",
        "2": "Stationary",
        "3": "Pedestrian",
        "4": "Automotive",
        "5": "Sea",
        "6": "Airborne1G",
        "7": "Airborne2G",
        "8": "Airborne4G"
      }
    },
    "GPS_POS1_X": {
      "Description": "X position of the first GPS antenna in body frame. Positive X is forward of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna X position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_POS1_Y": {
      "Description": "Y position of the first GPS antenna in body frame. Positive Y is to the right of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna Y position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_POS1_Z": {
      "Description": "Z position of the first GPS antenna in body frame. Positive Z is down from the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna Z position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_POS2_X": {
      "Description": "X position of the second GPS antenna in body frame. Positive X is forward of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna X position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_POS2_Y": {
      "Description": "Y position of the second GPS antenna in body frame. Positive Y is to the right of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna Y position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_POS2_Z": {
      "Description": "Z position of the second GPS antenna in body frame. Positive Z is down from the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Antenna Z position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_PRIMARY": {
      "Description": "This GPS will be used when GPS_AUTO_SWITCH is 0 and used preferentially with GPS_AUTO_SWITCH = 4.",
      "DisplayName": "Primary GPS",
      "Increment": "1",
      "User": "Advanced",
      "Values": {
        "0": "FirstGPS",
        "1": "SecondGPS"
      }
    },
    "GPS_RATE_MS": {
      "Description": "Controls how often the GPS should provide a position update. Lowering below 5Hz(default) is not allowed. Raising the rate above 5Hz usually provides little benefit and for some GPS (eg Ublox M9N) can severely impact performance.",
      "DisplayName": "GPS update rate in milliseconds",
      "Range": {
        "high": "200",
        "low": "50"
      },
      "Units": "ms",
      "User": "Advanced",
      "Values": {
        "100": "10Hz",
        "125": "8Hz",
        "200": "5Hz"
      }
    },
    "GPS_RATE_MS2": {
      "Description": "Controls how often the GPS should provide a position update. Lowering below 5Hz(default) is not allowed. Raising the rate above 5Hz usually provides little benefit and for some GPS (eg Ublox M9N) can severely impact performance.",
      "DisplayName": "GPS 2 update rate in milliseconds",
      "Range": {
        "high": "200",
        "low": "50"
      },
      "Units": "ms",
      "User": "Advanced",
      "Values": {
        "100": "10Hz",
        "125": "8Hz",
        "200": "5Hz"
      }
    },
    "GPS_RAW_DATA": {
      "Description": "Handles logging raw data; on uBlox chips that support raw data this will log RXM messages into logger; on Septentrio this will log on the equipment's SD card and when set to 2, the autopilot will try to stop logging after disarming and restart after arming",
      "DisplayName": "Raw data logging",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Ignore",
        "1": "Always log",
        "2": "Stop logging when disarmed (SBF only)",
        "5": "Only log every five samples (uBlox only)"
      }
    },
    "GPS_SAVE_CFG": {
      "Description": "Determines whether the configuration for this GPS should be written to non-volatile memory on the GPS. Currently working for UBlox 6 series and above.",
      "DisplayName": "Save GPS configuration",
      "User": "Advanced",
      "Values": {
        "0": "Do not save config",
        "1": "Save config",
        "2": "Save only when needed"
      }
    },
    "GPS_SBAS_MODE": {
      "Description": "This sets the SBAS (satellite based augmentation system) mode if available on this GPS. If set to 2 then the SBAS mode is not changed in the GPS. Otherwise the GPS will be reconfigured to enable/disable SBAS. Disabling SBAS may be worthwhile in some parts of the world where an SBAS signal is available but the baseline is too long to be useful.",
      "DisplayName": "SBAS Mode",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "NoChange"
      }
    },
    "GPS_SBP_LOGMASK": {
      "Description": "Masked with the SBP msg_type field to determine whether SBR1/SBR2 data is logged",
      "DisplayName": "Swift Binary Protocol Logging Mask",
      "User": "Advanced",
      "Values": {
        "-1": "All (0xFFFF)",
        "-256": "External only (0xFF00)",
        "0": "None (0x0000)"
      }
    },
    "GPS_TYPE": {
      "Description": "GPS type of 1st GPS",
      "DisplayName": "1st GPS type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "AUTO",
        "10": "SBF",
        "11": "GSOF",
        "13": "ERB",
        "14": "MAV",
        "15": "NOVA",
        "16": "HemisphereNMEA",
        "17": "uBlox-MovingBaseline-Base",
        "18": "uBlox-MovingBaseline-Rover",
        "19": "MSP",
        "2": "uBlox",
        "20": "AllyStar",
        "21": "ExternalAHRS",
        "22": "DroneCAN-MovingBaseline-Base",
        "23": "DroneCAN-MovingBaseline-Rover",
        "5": "NMEA",
        "6": "SiRF",
        "7": "HIL",
        "8": "SwiftNav",
        "9": "DroneCAN"
      }
    },
    "GPS_TYPE2": {
      "Description": "GPS type of 2nd GPS",
      "DisplayName": "2nd GPS type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "AUTO",
        "10": "SBF",
        "11": "GSOF",
        "13": "ERB",
        "14": "MAV",
        "15": "NOVA",
        "16": "HemisphereNMEA",
        "17": "uBlox-MovingBaseline-Base",
        "18": "uBlox-MovingBaseline-Rover",
        "19": "MSP",
        "2": "uBlox",
        "20": "AllyStar",
        "21": "ExternalAHRS",
        "22": "DroneCAN-MovingBaseline-Base",
        "23": "DroneCAN-MovingBaseline-Rover",
        "5": "NMEA",
        "6": "SiRF",
        "7": "HIL",
        "8": "SwiftNav",
        "9": "DroneCAN"
      }
    }
  },
  "GPS_MB1_": {
    "GPS_MB1_OFS_X": {
      "Description": "X position of the base GPS antenna in body frame. Positive X is forward of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna X position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB1_OFS_Y": {
      "Description": "Y position of the base GPS antenna in body frame. Positive Y is to the right of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna Y position offset    ",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB1_OFS_Z": {
      "Description": "Z position of the base GPS antenna in body frame. Positive Z is down from the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna Z position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB1_TYPE": {
      "Description": "Controls the type of moving base used if using moving base.",
      "DisplayName": "Moving base type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Relative to alternate GPS instance",
        "1": "RelativeToCustomBase"
      }
    }
  },
  "GPS_MB2_": {
    "GPS_MB2_OFS_X": {
      "Description": "X position of the base GPS antenna in body frame. Positive X is forward of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna X position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB2_OFS_Y": {
      "Description": "Y position of the base GPS antenna in body frame. Positive Y is to the right of the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna Y position offset    ",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB2_OFS_Z": {
      "Description": "Z position of the base GPS antenna in body frame. Positive Z is down from the origin. Use antenna phase centroid location if provided by the manufacturer.",
      "DisplayName": "Base antenna Z position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "GPS_MB2_TYPE": {
      "Description": "Controls the type of moving base used if using moving base.",
      "DisplayName": "Moving base type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Relative to alternate GPS instance",
        "1": "RelativeToCustomBase"
      }
    }
  },
  "INS_": {
    "INS_ACC1_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 1st accelerometer was calibrated at",
      "DisplayName": "Calibration temperature for 1st accelerometer",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_ACC2OFFS_X": {
      "Calibration": "1",
      "Description": "Accelerometer2 offsets of X axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer2 offsets of X axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC2OFFS_Y": {
      "Calibration": "1",
      "Description": "Accelerometer2 offsets of Y axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer2 offsets of Y axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC2OFFS_Z": {
      "Calibration": "1",
      "Description": "Accelerometer2 offsets of Z axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer2 offsets of Z axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC2SCAL_X": {
      "Calibration": "1",
      "Description": "Accelerometer2 scaling of X axis.  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer2 scaling of X axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC2SCAL_Y": {
      "Calibration": "1",
      "Description": "Accelerometer2 scaling of Y axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer2 scaling of Y axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC2SCAL_Z": {
      "Calibration": "1",
      "Description": "Accelerometer2 scaling of Z axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer2 scaling of Z axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC2_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 2nd accelerometer was calibrated at",
      "DisplayName": "Calibration temperature for 2nd accelerometer",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_ACC2_ID": {
      "Description": "Accelerometer2 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Accelerometer2 ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_ACC3OFFS_X": {
      "Calibration": "1",
      "Description": "Accelerometer3 offsets of X axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer3 offsets of X axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC3OFFS_Y": {
      "Calibration": "1",
      "Description": "Accelerometer3 offsets of Y axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer3 offsets of Y axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC3OFFS_Z": {
      "Calibration": "1",
      "Description": "Accelerometer3 offsets of Z axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer3 offsets of Z axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACC3SCAL_X": {
      "Calibration": "1",
      "Description": "Accelerometer3 scaling of X axis.  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer3 scaling of X axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC3SCAL_Y": {
      "Calibration": "1",
      "Description": "Accelerometer3 scaling of Y axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer3 scaling of Y axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC3SCAL_Z": {
      "Calibration": "1",
      "Description": "Accelerometer3 scaling of Z axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer3 scaling of Z axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC3_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 3rd accelerometer was calibrated at",
      "DisplayName": "Calibration temperature for 3rd accelerometer",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_ACC3_ID": {
      "Description": "Accelerometer3 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Accelerometer3 ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_ACCEL_FILTER": {
      "Description": "Filter cutoff frequency for accelerometers. This can be set to a lower value to try to cope with very high vibration levels in aircraft. A value of zero means no filtering (not recommended!)",
      "DisplayName": "Accel filter cutoff frequency",
      "Range": {
        "high": "256",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_ACCOFFS_X": {
      "Calibration": "1",
      "Description": "Accelerometer offsets of X axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer offsets of X axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACCOFFS_Y": {
      "Calibration": "1",
      "Description": "Accelerometer offsets of Y axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer offsets of Y axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACCOFFS_Z": {
      "Calibration": "1",
      "Description": "Accelerometer offsets of Z axis. This is setup using the acceleration calibration or level operations",
      "DisplayName": "Accelerometer offsets of Z axis",
      "Range": {
        "high": "3.5",
        "low": "-3.5"
      },
      "Units": "m/s/s",
      "User": "Advanced"
    },
    "INS_ACCSCAL_X": {
      "Calibration": "1",
      "Description": "Accelerometer scaling of X axis.  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer scaling of X axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACCSCAL_Y": {
      "Calibration": "1",
      "Description": "Accelerometer scaling of Y axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer scaling of Y axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACCSCAL_Z": {
      "Calibration": "1",
      "Description": "Accelerometer scaling of Z axis  Calculated during acceleration calibration routine",
      "DisplayName": "Accelerometer scaling of Z axis",
      "Range": {
        "high": "1.2",
        "low": "0.8"
      },
      "User": "Advanced"
    },
    "INS_ACC_BODYFIX": {
      "Description": "The body-fixed accelerometer to be used for trim calculation",
      "DisplayName": "Body-fixed accelerometer",
      "User": "Advanced",
      "Values": {
        "1": "IMU 1",
        "2": "IMU 2",
        "3": "IMU 3"
      }
    },
    "INS_ACC_ID": {
      "Description": "Accelerometer sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Accelerometer ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_ENABLE_MASK": {
      "Bitmask": {
        "0": "FirstIMU",
        "1": "SecondIMU",
        "2": "ThirdIMU",
        "3": "FourthIMU",
        "4": "FifthIMU",
        "5": "SixthIMU",
        "6": "SeventhIMU"
      },
      "Description": "Bitmask of IMUs to enable. It can be used to prevent startup of specific detected IMUs",
      "DisplayName": "IMU enable mask",
      "User": "Advanced"
    },
    "INS_FAST_SAMPLE": {
      "Bitmask": {
        "0": "FirstIMU",
        "1": "SecondIMU",
        "2": "ThirdIMU"
      },
      "Description": "Mask of IMUs to enable fast sampling on, if available",
      "DisplayName": "Fast sampling mask",
      "User": "Advanced"
    },
    "INS_GYR1_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 1st gyroscope was calibrated at",
      "DisplayName": "Calibration temperature for 1st gyroscope",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_GYR2OFFS_X": {
      "Calibration": "1",
      "Description": "Gyro2 sensor offsets of X axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro2 offsets of X axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR2OFFS_Y": {
      "Calibration": "1",
      "Description": "Gyro2 sensor offsets of Y axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro2 offsets of Y axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR2OFFS_Z": {
      "Calibration": "1",
      "Description": "Gyro2 sensor offsets of Z axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro2 offsets of Z axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR2_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 2nd gyroscope was calibrated at",
      "DisplayName": "Calibration temperature for 2nd gyroscope",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_GYR2_ID": {
      "Description": "Gyro2 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Gyro2 ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_GYR3OFFS_X": {
      "Calibration": "1",
      "Description": "Gyro3 sensor offsets of X axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro3 offsets of X axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR3OFFS_Y": {
      "Calibration": "1",
      "Description": "Gyro3 sensor offsets of Y axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro3 offsets of Y axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR3OFFS_Z": {
      "Calibration": "1",
      "Description": "Gyro3 sensor offsets of Z axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro3 offsets of Z axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYR3_CALTEMP": {
      "Calibration": "1",
      "Description": "Temperature that the 3rd gyroscope was calibrated at",
      "DisplayName": "Calibration temperature for 3rd gyroscope",
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_GYR3_ID": {
      "Description": "Gyro3 sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Gyro3 ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_GYROFFS_X": {
      "Calibration": "1",
      "Description": "Gyro sensor offsets of X axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro offsets of X axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYROFFS_Y": {
      "Calibration": "1",
      "Description": "Gyro sensor offsets of Y axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro offsets of Y axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYROFFS_Z": {
      "Calibration": "1",
      "Description": "Gyro sensor offsets of Z axis. This is setup on each boot during gyro calibrations",
      "DisplayName": "Gyro offsets of Z axis",
      "Units": "rad/s",
      "User": "Advanced"
    },
    "INS_GYRO_FILTER": {
      "Description": "Filter cutoff frequency for gyroscopes. This can be set to a lower value to try to cope with very high vibration levels in aircraft. A value of zero means no filtering (not recommended!)",
      "DisplayName": "Gyro filter cutoff frequency",
      "Range": {
        "high": "256",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_GYRO_RATE": {
      "Description": "Gyro rate for IMUs with fast sampling enabled. The gyro rate is the sample rate at which the IMU filters operate and needs to be at least double the maximum filter frequency. If the sensor does not support the selected rate the next highest supported rate will be used. For IMUs which do not support fast sampling this setting is ignored and the default gyro rate of 1Khz is used.",
      "DisplayName": "Gyro rate for IMUs with Fast Sampling enabled",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "1kHz",
        "1": "2kHz",
        "2": "4kHz",
        "3": "8kHz"
      }
    },
    "INS_GYR_CAL": {
      "Description": "Conrols when automatic gyro calibration is performed",
      "DisplayName": "Gyro Calibration scheme",
      "User": "Advanced",
      "Values": {
        "0": "Never",
        "1": "Start-up only"
      }
    },
    "INS_GYR_ID": {
      "Description": "Gyro sensor ID, taking into account its type, bus and instance",
      "DisplayName": "Gyro ID",
      "ReadOnly": "True",
      "User": "Advanced"
    },
    "INS_POS1_X": {
      "Description": "X position of the first IMU Accelerometer in body frame. Positive X is forward of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer X position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS1_Y": {
      "Description": "Y position of the first IMU accelerometer in body frame. Positive Y is to the right of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Y position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS1_Z": {
      "Description": "Z position of the first IMU accelerometer in body frame. Positive Z is down from the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Z position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS2_X": {
      "Description": "X position of the second IMU accelerometer in body frame. Positive X is forward of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer X position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS2_Y": {
      "Description": "Y position of the second IMU accelerometer in body frame. Positive Y is to the right of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Y position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS2_Z": {
      "Description": "Z position of the second IMU accelerometer in body frame. Positive Z is down from the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Z position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS3_X": {
      "Description": "X position of the third IMU accelerometer in body frame. Positive X is forward of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer X position",
      "Range": {
        "high": "10",
        "low": "-10"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS3_Y": {
      "Description": "Y position of the third IMU accelerometer in body frame. Positive Y is to the right of the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Y position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_POS3_Z": {
      "Description": "Z position of the third IMU accelerometer in body frame. Positive Z is down from the origin. Attention: The IMU should be located as close to the vehicle c.g. as practical so that the value of this parameter is minimised. Failure to do so can result in noisy navigation velocity measurements due to vibration and IMU gyro noise. If the IMU cannot be moved and velocity noise is a problem, a location closer to the IMU can be used as the body frame origin.",
      "DisplayName": "IMU accelerometer Z position",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "INS_STILL_THRESH": {
      "Description": "Threshold to tolerate vibration to determine if vehicle is motionless. This depends on the frame type and if there is a constant vibration due to motors before launch or after landing. Total motionless is about 0.05. Suggested values: Planes/rover use 0.1, multirotors use 1, tradHeli uses 5",
      "DisplayName": "Stillness threshold for detecting if we are moving",
      "Range": {
        "high": "50",
        "low": "0.05"
      },
      "User": "Advanced"
    },
    "INS_TCAL_OPTIONS": {
      "Bitmask": {
        "0": "PersistParams"
      },
      "Description": "This enables optional temperature calibration features. Setting PersistParams will save the accelerometer and temperature calibration parameters in the bootloader sector on the next update of the bootloader.",
      "DisplayName": "Options for temperature calibration",
      "User": "Advanced"
    },
    "INS_TRIM_OPTION": {
      "Description": "Specifies how the accel cal routine determines the trims",
      "DisplayName": "Accel cal trim option",
      "User": "Advanced",
      "Values": {
        "0": "Don't adjust the trims",
        "1": "Assume first orientation was level",
        "2": "Assume ACC_BODYFIX is perfectly aligned to the vehicle"
      }
    },
    "INS_USE": {
      "Description": "Use first IMU for attitude, velocity and position estimates",
      "DisplayName": "Use first IMU for attitude, velocity and position estimates",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "INS_USE2": {
      "Description": "Use second IMU for attitude, velocity and position estimates",
      "DisplayName": "Use second IMU for attitude, velocity and position estimates",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "INS_USE3": {
      "Description": "Use third IMU for attitude, velocity and position estimates",
      "DisplayName": "Use third IMU for attitude, velocity and position estimates",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    }
  },
  "INS_HNTC2_": {
    "INS_HNTC2_ATT": {
      "Description": "Harmonic Notch Filter attenuation in dB. Values greater than 40dB will typically produce a hard notch rather than a modest attenuation of motor noise.",
      "DisplayName": "Harmonic Notch Filter attenuation",
      "Range": {
        "high": "50",
        "low": "5"
      },
      "Units": "dB",
      "User": "Advanced"
    },
    "INS_HNTC2_BW": {
      "Description": "Harmonic Notch Filter bandwidth in Hz. This is typically set to half the base frequency. The ratio of base frequency to bandwidth determines the notch quality factor and is fixed across harmonics.",
      "DisplayName": "Harmonic Notch Filter bandwidth",
      "Range": {
        "high": "250",
        "low": "5"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_HNTC2_ENABLE": {
      "Description": "Harmonic Notch Filter enable",
      "DisplayName": "Harmonic Notch Filter enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "INS_HNTC2_FREQ": {
      "Description": "Harmonic Notch Filter base center frequency in Hz. This should be set at most half the backend gyro rate (which is typically 1Khz). For helicopters using RPM sensor to dynamically set the notch frequency, use this parameter to provide a lower limit to the dynamic notch filter.  Recommend setting it to half the operating rotor speed in Hz.",
      "DisplayName": "Harmonic Notch Filter base frequency",
      "Range": {
        "high": "495",
        "low": "10"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_HNTC2_HMNCS": {
      "Bitmask": {
        "0": "1st harmonic",
        "1": "2nd harmonic",
        "2": "3rd harmonic",
        "3": "4th hamronic",
        "4": "5th harmonic",
        "5": "6th harmonic",
        "6": "7th harmonic",
        "7": "8th harmonic"
      },
      "Description": "Bitmask of harmonic frequencies to apply Harmonic Notch Filter to. This option takes effect on the next reboot. A value of 0 disables this filter. The first harmonic refers to the base frequency.",
      "DisplayName": "Harmonic Notch Filter harmonics",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_HNTC2_MODE": {
      "Description": "Harmonic Notch Filter dynamic frequency tracking mode. Dynamic updates can be throttle, RPM sensor, ESC telemetry or dynamic FFT based. Throttle-based updates should only be used with multicopters.",
      "DisplayName": "Harmonic Notch Filter dynamic frequency tracking mode",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Throttle",
        "2": "RPM Sensor",
        "3": "ESC Telemetry",
        "4": "Dynamic FFT",
        "5": "Second RPM Sensor"
      }
    },
    "INS_HNTC2_OPTS": {
      "Bitmask": {
        "0": "Double notch",
        "1": "Dynamic harmonic",
        "2": "Update at loop rate",
        "3": "EnableOnAllIMUs"
      },
      "Description": "Harmonic Notch Filter options. Double-notches can provide deeper attenuation across a wider bandwidth than single notches and are suitable for larger aircraft. Dynamic harmonics attaches a harmonic notch to each detected noise frequency instead of simply being multiples of the base frequency, in the case of FFT it will attach notches to each of three detected noise peaks, in the case of ESC it will attach notches to each of four motor RPM values. Loop rate update changes the notch center frequency at the scheduler loop rate rather than at the default of 200Hz.",
      "DisplayName": "Harmonic Notch Filter options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_HNTC2_REF": {
      "Description": "A reference value of zero disables dynamic updates on the Harmonic Notch Filter and a positive value enables dynamic updates on the Harmonic Notch Filter.  For throttle-based scaling, this parameter is the reference value associated with the specified frequency to facilitate frequency scaling of the Harmonic Notch Filter. For RPM and ESC telemetry based tracking, this parameter is set to 1 to enable the Harmonic Notch Filter using the RPM sensor or ESC telemetry set to measure rotor speed.  The sensor data is converted to Hz automatically for use in the Harmonic Notch Filter.  This reference value may also be used to scale the sensor data, if required.  For example, rpm sensor data is required to measure heli motor RPM. Therefore the reference value can be used to scale the RPM sensor to the rotor RPM.",
      "DisplayName": "Harmonic Notch Filter reference value",
      "Range": {
        "high": "1.0",
        "low": "0.0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    }
  },
  "INS_HNTCH_": {
    "INS_HNTCH_ATT": {
      "Description": "Harmonic Notch Filter attenuation in dB. Values greater than 40dB will typically produce a hard notch rather than a modest attenuation of motor noise.",
      "DisplayName": "Harmonic Notch Filter attenuation",
      "Range": {
        "high": "50",
        "low": "5"
      },
      "Units": "dB",
      "User": "Advanced"
    },
    "INS_HNTCH_BW": {
      "Description": "Harmonic Notch Filter bandwidth in Hz. This is typically set to half the base frequency. The ratio of base frequency to bandwidth determines the notch quality factor and is fixed across harmonics.",
      "DisplayName": "Harmonic Notch Filter bandwidth",
      "Range": {
        "high": "250",
        "low": "5"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_HNTCH_ENABLE": {
      "Description": "Harmonic Notch Filter enable",
      "DisplayName": "Harmonic Notch Filter enable",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "INS_HNTCH_FREQ": {
      "Description": "Harmonic Notch Filter base center frequency in Hz. This should be set at most half the backend gyro rate (which is typically 1Khz). For helicopters using RPM sensor to dynamically set the notch frequency, use this parameter to provide a lower limit to the dynamic notch filter.  Recommend setting it to half the operating rotor speed in Hz.",
      "DisplayName": "Harmonic Notch Filter base frequency",
      "Range": {
        "high": "495",
        "low": "10"
      },
      "Units": "Hz",
      "User": "Advanced"
    },
    "INS_HNTCH_HMNCS": {
      "Bitmask": {
        "0": "1st harmonic",
        "1": "2nd harmonic",
        "2": "3rd harmonic",
        "3": "4th hamronic",
        "4": "5th harmonic",
        "5": "6th harmonic",
        "6": "7th harmonic",
        "7": "8th harmonic"
      },
      "Description": "Bitmask of harmonic frequencies to apply Harmonic Notch Filter to. This option takes effect on the next reboot. A value of 0 disables this filter. The first harmonic refers to the base frequency.",
      "DisplayName": "Harmonic Notch Filter harmonics",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_HNTCH_MODE": {
      "Description": "Harmonic Notch Filter dynamic frequency tracking mode. Dynamic updates can be throttle, RPM sensor, ESC telemetry or dynamic FFT based. Throttle-based updates should only be used with multicopters.",
      "DisplayName": "Harmonic Notch Filter dynamic frequency tracking mode",
      "Range": {
        "high": "4",
        "low": "0"
      },
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Throttle",
        "2": "RPM Sensor",
        "3": "ESC Telemetry",
        "4": "Dynamic FFT",
        "5": "Second RPM Sensor"
      }
    },
    "INS_HNTCH_OPTS": {
      "Bitmask": {
        "0": "Double notch",
        "1": "Dynamic harmonic",
        "2": "Update at loop rate",
        "3": "EnableOnAllIMUs"
      },
      "Description": "Harmonic Notch Filter options. Double-notches can provide deeper attenuation across a wider bandwidth than single notches and are suitable for larger aircraft. Dynamic harmonics attaches a harmonic notch to each detected noise frequency instead of simply being multiples of the base frequency, in the case of FFT it will attach notches to each of three detected noise peaks, in the case of ESC it will attach notches to each of four motor RPM values. Loop rate update changes the notch center frequency at the scheduler loop rate rather than at the default of 200Hz.",
      "DisplayName": "Harmonic Notch Filter options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_HNTCH_REF": {
      "Description": "A reference value of zero disables dynamic updates on the Harmonic Notch Filter and a positive value enables dynamic updates on the Harmonic Notch Filter.  For throttle-based scaling, this parameter is the reference value associated with the specified frequency to facilitate frequency scaling of the Harmonic Notch Filter. For RPM and ESC telemetry based tracking, this parameter is set to 1 to enable the Harmonic Notch Filter using the RPM sensor or ESC telemetry set to measure rotor speed.  The sensor data is converted to Hz automatically for use in the Harmonic Notch Filter.  This reference value may also be used to scale the sensor data, if required.  For example, rpm sensor data is required to measure heli motor RPM. Therefore the reference value can be used to scale the RPM sensor to the rotor RPM.",
      "DisplayName": "Harmonic Notch Filter reference value",
      "Range": {
        "high": "1.0",
        "low": "0.0"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    }
  },
  "INS_LOG_": {
    "INS_LOG_BAT_CNT": {
      "Description": "Number of samples to take when logging streams of IMU sensor readings.  Will be rounded down to a multiple of 32. This option takes effect on the next reboot.",
      "DisplayName": "sample count per batch",
      "Increment": "32",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_LOG_BAT_LGCT": {
      "Description": "Number of samples to push to count every INS_LOG_BAT_LGIN",
      "DisplayName": "logging count",
      "Increment": "1"
    },
    "INS_LOG_BAT_LGIN": {
      "Description": "Interval between pushing samples to the AP_Logger log",
      "DisplayName": "logging interval",
      "Increment": "10",
      "Units": "ms"
    },
    "INS_LOG_BAT_MASK": {
      "Bitmask": {
        "0": "IMU1",
        "1": "IMU2",
        "2": "IMU3"
      },
      "Description": "Bitmap of which IMUs to log batch data for. This option takes effect on the next reboot.",
      "DisplayName": "Sensor Bitmask",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "INS_LOG_BAT_OPT": {
      "Bitmask": {
        "0": "Sensor-Rate Logging (sample at full sensor rate seen by AP)",
        "1": "Sample post-filtering"
      },
      "Description": "Options for the BatchSampler. Post-filter and sensor-rate logging cannot be used at the same time.",
      "DisplayName": "Batch Logging Options Mask",
      "User": "Advanced"
    }
  },
  "INS_TCAL1_": {
    "INS_TCAL1_ACC1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ACC3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_ENABLE": {
      "Description": "Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2 and also set the INS_TCALn_TMAX to the target temperature, then reboot",
      "DisplayName": "Enable temperature calibration",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "LearnCalibration"
      }
    },
    "INS_TCAL1_GYR1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL1_GYR3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL1_TMAX": {
      "Calibration": "1",
      "Description": "The maximum temperature that the calibration is valid for. This must be at least 10 degrees above TMIN for calibration",
      "DisplayName": "Temperature calibration max",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_TCAL1_TMIN": {
      "Calibration": "1",
      "Description": "The minimum temperature that the calibration is valid for",
      "DisplayName": "Temperature calibration min",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    }
  },
  "INS_TCAL2_": {
    "INS_TCAL2_ACC1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ACC3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_ENABLE": {
      "Description": "Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2 and also set the INS_TCALn_TMAX to the target temperature, then reboot",
      "DisplayName": "Enable temperature calibration",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "LearnCalibration"
      }
    },
    "INS_TCAL2_GYR1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL2_GYR3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL2_TMAX": {
      "Calibration": "1",
      "Description": "The maximum temperature that the calibration is valid for. This must be at least 10 degrees above TMIN for calibration",
      "DisplayName": "Temperature calibration max",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_TCAL2_TMIN": {
      "Calibration": "1",
      "Description": "The minimum temperature that the calibration is valid for",
      "DisplayName": "Temperature calibration min",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    }
  },
  "INS_TCAL3_": {
    "INS_TCAL3_ACC1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ACC3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Accelerometer 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_ENABLE": {
      "Description": "Enable the use of temperature calibration parameters for this IMU. For automatic learning set to 2 and also set the INS_TCALn_TMAX to the target temperature, then reboot",
      "DisplayName": "Enable temperature calibration",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled",
        "2": "LearnCalibration"
      }
    },
    "INS_TCAL3_GYR1_X": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR1_Y": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR1_Z": {
      "Calibration": "1",
      "Description": "This is the 1st order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 1st order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR2_X": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR2_Y": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR2_Z": {
      "Calibration": "1",
      "Description": "This is the 2nd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 2nd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR3_X": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient X axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR3_Y": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Y axis",
      "User": "Advanced"
    },
    "INS_TCAL3_GYR3_Z": {
      "Calibration": "1",
      "Description": "This is the 3rd order temperature coefficient from a temperature calibration",
      "DisplayName": "Gyroscope 3rd order temperature coefficient Z axis",
      "User": "Advanced"
    },
    "INS_TCAL3_TMAX": {
      "Calibration": "1",
      "Description": "The maximum temperature that the calibration is valid for. This must be at least 10 degrees above TMIN for calibration",
      "DisplayName": "Temperature calibration max",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    },
    "INS_TCAL3_TMIN": {
      "Calibration": "1",
      "Description": "The minimum temperature that the calibration is valid for",
      "DisplayName": "Temperature calibration min",
      "Range": {
        "high": "80",
        "low": "-70"
      },
      "Units": "degC",
      "User": "Advanced"
    }
  },
  "LOG": {
    "LOG_BACKEND_TYPE": {
      "Bitmask": {
        "0": "File",
        "1": "MAVLink",
        "2": "Block"
      },
      "Description": "Bitmap of what Logger backend types to enable. Block-based logging is available on SITL and boards with dataflash chips. Multiple backends can be selected.",
      "DisplayName": "AP_Logger Backend Storage type",
      "User": "Standard"
    },
    "LOG_BLK_RATEMAX": {
      "Description": "This sets the maximum rate that streaming log messages will be logged to the mavlink backend. A value of zero means that rate limiting is disabled.",
      "DisplayName": "Maximum logging rate for block backend",
      "Range": {
        "high": "1000",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "LOG_DISARMED": {
      "Description": "If LOG_DISARMED is set to 1 then logging will be enabled while disarmed. This can make for very large logfiles but can help a lot when tracking down startup issues",
      "DisplayName": "Enable logging while disarmed",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "LOG_FILE_BUFSIZE": {
      "Description": "The File and Block backends use a buffer to store data before writing to the block device.  Raising this value may reduce \"gaps\" in your SD card logging.  This buffer size may be reduced depending on available memory.  PixHawk requires at least 4 kilobytes.  Maximum value available here is 64 kilobytes.",
      "DisplayName": "Maximum AP_Logger File and Block Backend buffer size (in kilobytes)",
      "User": "Standard"
    },
    "LOG_FILE_DSRMROT": {
      "Description": "When set, the current log file is closed when the vehicle is disarmed.  If LOG_DISARMED is set then a fresh log will be opened. Applies to the File and Block logging backends.",
      "DisplayName": "Stop logging to current file on disarm",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "LOG_FILE_MB_FREE": {
      "Description": "Set this such that the free space is larger than your largest typical flight log",
      "DisplayName": "Old logs on the SD card will be deleted to maintain this amount of free space",
      "Range": {
        "high": "1000",
        "low": "10"
      },
      "Units": "MB",
      "User": "Standard"
    },
    "LOG_FILE_RATEMAX": {
      "Description": "This sets the maximum rate that streaming log messages will be logged to the file backend. A value of zero means that rate limiting is disabled.",
      "DisplayName": "Maximum logging rate for file backend",
      "Range": {
        "high": "1000",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "LOG_FILE_TIMEOUT": {
      "Description": "This controls the amount of time before failing writes to a log file cause the file to be closed and logging stopped.",
      "DisplayName": "Timeout before giving up on file writes",
      "Units": "s",
      "User": "Standard"
    },
    "LOG_MAV_BUFSIZE": {
      "Description": "Maximum amount of memory to allocate to AP_Logger-over-mavlink",
      "DisplayName": "Maximum AP_Logger MAVLink Backend buffer size",
      "Units": "kB",
      "User": "Advanced"
    },
    "LOG_MAV_RATEMAX": {
      "Description": "This sets the maximum rate that streaming log messages will be logged to the mavlink backend. A value of zero means that rate limiting is disabled.",
      "DisplayName": "Maximum logging rate for mavlink backend",
      "Range": {
        "high": "1000",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Standard"
    },
    "LOG_REPLAY": {
      "Description": "If LOG_REPLAY is set to 1 then the EKF2 state estimator will log detailed information needed for diagnosing problems with the Kalman filter. It is suggested that you also raise LOG_FILE_BUFSIZE to give more buffer space for logging and use a high quality microSD card to ensure no sensor data is lost",
      "DisplayName": "Enable logging of information needed for Replay",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    }
  },
  "MSP": {
    "MSP_OPTIONS": {
      "Bitmask": {
        "0": "EnableTelemetryMode",
        "1": "DisableDJIWorkarounds",
        "2": "EnableBTFLFonts"
      },
      "Description": "A bitmask to set some MSP specific options",
      "DisplayName": "MSP OSD Options",
      "User": "Standard"
    },
    "MSP_OSD_NCELLS": {
      "Description": "Used for average cell voltage calculation",
      "DisplayName": "Cell count override",
      "User": "Standard",
      "Values": {
        "0": "Auto",
        "1": "1",
        "10": "10",
        "11": "11",
        "12": "12",
        "13": "13",
        "14": "14",
        "2": "2",
        "3": "3",
        "4": "4",
        "5": "5",
        "6": "6",
        "7": "7",
        "8": "8",
        "9": "9"
      }
    }
  },
  "NTF_": {
    "NTF_BUZZ_ON_LVL": {
      "Description": "Specifies pin level that indicates buzzer should play",
      "DisplayName": "Buzzer-on pin logic level",
      "User": "Advanced",
      "Values": {
        "0": "LowIsOn",
        "1": "HighIsOn"
      }
    },
    "NTF_BUZZ_PIN": {
      "Description": "Enables to connect active buzzer to arbitrary pin. Requires 3-pin buzzer or additional MOSFET! Some the Wiki's \"GPIOs\" page for how to determine the pin number for a given autopilot.",
      "DisplayName": "Buzzer pin",
      "User": "Advanced",
      "Values": {
        "0": "Disabled"
      }
    },
    "NTF_BUZZ_TYPES": {
      "Bitmask": {
        "0": "Built-in buzzer",
        "1": "DShot",
        "2": "DroneCAN"
      },
      "Description": "Controls what types of Buzzer will be enabled",
      "DisplayName": "Buzzer Driver Types",
      "User": "Advanced"
    },
    "NTF_BUZZ_VOLUME": {
      "Description": "Control the volume of the buzzer",
      "DisplayName": "Buzzer volume",
      "Range": {
        "high": "100",
        "low": "0"
      },
      "Units": "%"
    },
    "NTF_DISPLAY_TYPE": {
      "Description": "This sets up the type of on-board I2C display. Disabled by default.",
      "DisplayName": "Type of on-board I2C display",
      "User": "Advanced",
      "Values": {
        "0": "Disable",
        "1": "ssd1306",
        "10": "SITL",
        "2": "sh1106"
      }
    },
    "NTF_LED_BRIGHT": {
      "Description": "Select the RGB LED brightness level. When USB is connected brightness will never be higher than low regardless of the setting.",
      "DisplayName": "LED Brightness",
      "User": "Advanced",
      "Values": {
        "0": "Off",
        "1": "Low",
        "2": "Medium",
        "3": "High"
      }
    },
    "NTF_LED_LEN": {
      "Description": "The number of Serial LED's to use for notifications (NeoPixel's and ProfiLED)",
      "DisplayName": "Serial LED String Length",
      "Range": {
        "high": "32",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "NTF_LED_OVERRIDE": {
      "Description": "Specifies the source for the colours and brightness for the LED.  OutbackChallenge conforms to the MedicalExpress (https://uavchallenge.org/medical-express/) rules, essentially \"Green\" is disarmed (safe-to-approach), \"Red\" is armed (not safe-to-approach). Traffic light is a simplified color set, red when armed, yellow when the safety switch is not surpressing outputs (but disarmed), and green when outputs are surpressed and disarmed, the LED will blink faster if disarmed and failing arming checks.",
      "DisplayName": "Specifies colour source for the RGBLed",
      "User": "Advanced",
      "Values": {
        "0": "Standard",
        "1": "MAVLink/Scripting/AP_Periph",
        "2": "OutbackChallenge",
        "3": "TrafficLight"
      }
    },
    "NTF_LED_TYPES": {
      "Bitmask": {
        "0": "Built-in LED",
        "1": "Internal ToshibaLED",
        "10": "Scripting",
        "11": "DShot",
        "12": "ProfiLED_SPI",
        "2": "External ToshibaLED",
        "3": "External PCA9685",
        "4": "Oreo LED",
        "5": "DroneCAN",
        "6": "NCP5623 External",
        "7": "NCP5623 Internal",
        "8": "NeoPixel",
        "9": "ProfiLED"
      },
      "Description": "Controls what types of LEDs will be enabled",
      "DisplayName": "LED Driver Types",
      "User": "Advanced"
    },
    "NTF_OREO_THEME": {
      "Description": "Enable/Disable Solo Oreo LED driver, 0 to disable, 1 for Aircraft theme, 2 for Rover theme",
      "DisplayName": "OreoLED Theme",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Aircraft",
        "2": "Rover"
      }
    }
  },
  "RC": {
    "RC_OPTIONS": {
      "Bitmask": {
        "0": "Ignore RC Receiver",
        "1": "Ignore MAVLink Overrides",
        "10": "Enable multiple receiver support",
        "11": "CRSF RSSI shows Link Quality",
        "2": "Ignore Receiver Failsafe bit but allow other RC failsafes if setup",
        "21": "Switch to manual after disarming (plane only)",
        "22": "Disable throttle battery compensation in manual mode (plane only)",
        "23": "Disable throttle expo in manual mode (plane only)",
        "3": "FPort Pad",
        "4": "Log RC input bytes",
        "5": "Arming check throttle for 0 input",
        "6": "Skip the arming check for neutral Roll/Pitch/Yaw sticks",
        "7": "Allow Switch reverse",
        "8": "Use passthrough for CRSF telemetry",
        "9": "Suppress CRSF mode/rate message for ELRS systems"
      },
      "Description": "RC input options",
      "DisplayName": "RC options",
      "User": "Advanced"
    },
    "RC_OVERRIDE_TIME": {
      "Description": "Timeout after which RC overrides will no longer be used, and RC input will resume, 0 will disable RC overrides, -1 will never timeout, and continue using overrides until they are disabled",
      "DisplayName": "RC override timeout",
      "Range": {
        "high": "120.0",
        "low": "0.0"
      },
      "Units": "s",
      "User": "Advanced"
    },
    "RC_PROTOCOLS": {
      "Bitmask": {
        "0": "All",
        "1": "PPM",
        "10": "ST24",
        "11": "FPORT",
        "12": "FPORT2",
        "13": "FastSBUS",
        "2": "IBUS",
        "3": "SBUS",
        "4": "SBUS_NI",
        "5": "DSM",
        "6": "SUMD",
        "7": "SRXL",
        "8": "SRXL2",
        "9": "CRSF"
      },
      "Description": "Bitmask of enabled RC protocols. Allows narrowing the protocol detection to only specific types of RC receivers which can avoid issues with incorrect detection. Set to 1 to enable all protocols.",
      "DisplayName": "RC protocols enabled",
      "User": "Advanced"
    }
  },
  "RC10_": {
    "RC10_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC10_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC10_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC10_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC10_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC10_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC11_": {
    "RC11_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC11_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC11_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC11_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC11_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC11_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC12_": {
    "RC12_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC12_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC12_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC12_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC12_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC12_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC13_": {
    "RC13_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC13_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC13_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC13_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC13_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC13_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC14_": {
    "RC14_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC14_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC14_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC14_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC14_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC14_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC15_": {
    "RC15_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC15_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC15_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC15_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC15_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC15_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC16_": {
    "RC16_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC16_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC16_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC16_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC16_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC16_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC1_": {
    "RC1_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC1_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC1_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC1_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC1_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC1_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC2_": {
    "RC2_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC2_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC2_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC2_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC2_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC2_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC3_": {
    "RC3_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC3_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC3_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC3_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC3_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC3_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC4_": {
    "RC4_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC4_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC4_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC4_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC4_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC4_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC5_": {
    "RC5_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC5_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC5_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC5_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC5_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC5_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC6_": {
    "RC6_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC6_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC6_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC6_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC6_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC6_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC7_": {
    "RC7_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC7_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC7_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC7_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC7_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC7_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC8_": {
    "RC8_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC8_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC8_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC8_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC8_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC8_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RC9_": {
    "RC9_DZ": {
      "Description": "PWM dead zone in microseconds around trim or bottom",
      "DisplayName": "RC dead-zone",
      "Range": {
        "high": "200",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC9_MAX": {
      "Description": "RC maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC max PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC9_MIN": {
      "Description": "RC minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC min PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    },
    "RC9_OPTION": {
      "Description": "Function assigned to this RC channel",
      "DisplayName": "RC input option",
      "User": "Standard",
      "Values": {
        "0": "Do Nothing",
        "100": "KillIMU1",
        "101": "KillIMU2",
        "153": "ArmDisarm",
        "18": "Land",
        "46": "RC Override Enable",
        "65": "GPS Disable",
        "81": "Disarm",
        "90": "EKF Pos Source"
      }
    },
    "RC9_REVERSED": {
      "Description": "Reverse channel input. Set to 0 for normal operation. Set to 1 to reverse this input channel.",
      "DisplayName": "RC reversed",
      "User": "Advanced",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "RC9_TRIM": {
      "Description": "RC trim (neutral) PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "RC trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Advanced"
    }
  },
  "RCMAP_": {
    "RCMAP_PITCH": {
      "Description": "Pitch channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Pitch is normally on channel 2, but you can move it to any channel with this parameter.  Reboot is required for changes to take effect.",
      "DisplayName": "Pitch channel",
      "Increment": "1",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "RCMAP_ROLL": {
      "Description": "Roll channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Roll is normally on channel 1, but you can move it to any channel with this parameter.  Reboot is required for changes to take effect.",
      "DisplayName": "Roll channel",
      "Increment": "1",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "RCMAP_THROTTLE": {
      "Description": "Throttle channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Throttle is normally on channel 3, but you can move it to any channel with this parameter. Warning APM 2.X: Changing the throttle channel could produce unexpected fail-safe results if connection between receiver and on-board PPM Encoder is lost. Disabling on-board PPM Encoder is recommended.  Reboot is required for changes to take effect.",
      "DisplayName": "Throttle channel",
      "Increment": "1",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "RCMAP_YAW": {
      "Description": "Yaw channel number. This is useful when you have a RC transmitter that can't change the channel order easily. Yaw (also known as rudder) is normally on channel 4, but you can move it to any channel with this parameter.  Reboot is required for changes to take effect.",
      "DisplayName": "Yaw channel",
      "Increment": "1",
      "Range": {
        "high": "8",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    }
  },
  "RSSI_": {
    "RSSI_ANA_PIN": {
      "Description": "Pin used to read the RSSI voltage or PWM value",
      "DisplayName": "Receiver RSSI sensing pin",
      "User": "Standard",
      "Values": {
        "103": "Pixhawk SBUS",
        "11": "Pixracer",
        "13": "Pixhawk ADC4",
        "14": "Pixhawk ADC3",
        "15": "Pixhawk ADC6/Pixhawk2 ADC",
        "50": "AUX1",
        "51": "AUX2",
        "52": "AUX3",
        "53": "AUX4",
        "54": "AUX5",
        "55": "AUX6",
        "8": "V5 Nano"
      }
    },
    "RSSI_CHANNEL": {
      "Description": "The channel number where RSSI will be output by the radio receiver (5 and above).",
      "DisplayName": "Receiver RSSI channel number",
      "Range": {
        "high": "16",
        "low": "0"
      },
      "User": "Standard"
    },
    "RSSI_CHAN_HIGH": {
      "Description": "PWM value that the radio receiver will put on the RSSI_CHANNEL or RSSI_ANA_PIN when the signal strength is the strongest. Some radio receivers output inverted values so this value may be higher than RSSI_CHAN_LOW",
      "DisplayName": "Receiver RSSI PWM high value",
      "Range": {
        "high": "2000",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "RSSI_CHAN_LOW": {
      "Description": "PWM value that the radio receiver will put on the RSSI_CHANNEL or RSSI_ANA_PIN when the signal strength is the weakest. Some radio receivers output inverted values so this value may be lower than RSSI_CHAN_HIGH",
      "DisplayName": "RSSI PWM low value",
      "Range": {
        "high": "2000",
        "low": "0"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "RSSI_PIN_HIGH": {
      "Description": "RSSI pin's voltage received on the RSSI_ANA_PIN when the signal strength is the strongest. Some radio receivers put out inverted values so this value may be lower than RSSI_PIN_LOW. When using pin 103, the maximum value of the parameter is 3.3V.",
      "DisplayName": "RSSI pin's highest voltage",
      "Increment": "0.01",
      "Range": {
        "high": "5.0",
        "low": "0"
      },
      "Units": "V",
      "User": "Standard"
    },
    "RSSI_PIN_LOW": {
      "Description": "RSSI pin's voltage received on the RSSI_ANA_PIN when the signal strength is the weakest. Some radio receivers put out inverted values so this value may be higher than RSSI_PIN_HIGH. When using pin 103, the maximum value of the parameter is 3.3V.",
      "DisplayName": "RSSI pin's lowest voltage",
      "Increment": "0.01",
      "Range": {
        "high": "5.0",
        "low": "0"
      },
      "Units": "V",
      "User": "Standard"
    },
    "RSSI_TYPE": {
      "Description": "Radio Receiver RSSI type. If your radio receiver supports RSSI of some kind, set it here, then set its associated RSSI_XXXXX parameters, if any.",
      "DisplayName": "RSSI Type",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "AnalogPin",
        "2": "RCChannelPwmValue",
        "3": "ReceiverProtocol",
        "4": "PWMInputPin",
        "5": "TelemetryRadioRSSI"
      }
    }
  },
  "SCHED_": {
    "SCHED_DEBUG": {
      "Description": "Set to non-zero to enable scheduler debug messages. When set to show \"Slips\" the scheduler will display a message whenever a scheduled task is delayed due to too much CPU load. When set to ShowOverruns the scheduled will display a message whenever a task takes longer than the limit promised in the task table.",
      "DisplayName": "Scheduler debug level",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "2": "ShowSlips",
        "3": "ShowOverruns"
      }
    },
    "SCHED_LOOP_RATE": {
      "Description": "This controls the rate of the main control loop in Hz. This should only be changed by developers. This only takes effect on restart. Values over 400 are considered highly experimental.",
      "DisplayName": "Scheduling main loop rate",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "100": "100Hz",
        "200": "200Hz",
        "250": "250Hz",
        "300": "300Hz",
        "400": "400Hz",
        "50": "50Hz"
      }
    },
    "SCHED_OPTIONS": {
      "Bitmask": {
        "0": "Enable per-task perf info"
      },
      "Description": "This controls optional aspects of the scheduler.",
      "DisplayName": "Scheduling options",
      "User": "Advanced"
    }
  },
  "SCR_": {
    "SCR_DEBUG_OPTS": {
      "Bitmask": {
        "0": "No Scripts to run message if all scripts have stopped",
        "1": "Runtime messages for memory usage and execution time",
        "2": "Suppress logging scripts to dataflash",
        "3": "log runtime memory usage and execution time"
      },
      "Description": "Debugging options",
      "DisplayName": "Scripting Debug Level",
      "User": "Advanced"
    },
    "SCR_DIR_DISABLE": {
      "Bitmask": {
        "0": "ROMFS",
        "1": "APM/scripts"
      },
      "Description": "This will stop scripts being loaded from the given locations",
      "DisplayName": "Directory disable",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SCR_ENABLE": {
      "Description": "Controls if scripting is enabled",
      "DisplayName": "Enable Scripting",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "Lua Scripts"
      }
    },
    "SCR_HEAP_SIZE": {
      "Description": "Amount of memory available for scripting",
      "DisplayName": "Scripting Heap Size",
      "Increment": "1024",
      "Range": {
        "high": "1048576",
        "low": "1024"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SCR_USER1": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter1",
      "User": "Standard"
    },
    "SCR_USER2": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter2",
      "User": "Standard"
    },
    "SCR_USER3": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter3",
      "User": "Standard"
    },
    "SCR_USER4": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter4",
      "User": "Standard"
    },
    "SCR_USER5": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter5",
      "User": "Standard"
    },
    "SCR_USER6": {
      "Description": "General purpose user variable input for scripts",
      "DisplayName": "Scripting User Parameter6",
      "User": "Standard"
    },
    "SCR_VM_I_COUNT": {
      "Description": "The number virtual machine instructions that can be run before considering a script to have taken an excessive amount of time",
      "DisplayName": "Scripting Virtual Machine Instruction Count",
      "Increment": "10000",
      "Range": {
        "high": "1000000",
        "low": "1000"
      },
      "User": "Advanced"
    }
  },
  "SERIAL": {
    "SERIAL0_BAUD": {
      "Description": "The baud rate used on the USB console. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial0 baud rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL0_PROTOCOL": {
      "Description": "Control what protocol to use on the console. ",
      "DisplayName": "Console protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "1": "MAVlink1",
        "2": "MAVLink2"
      }
    },
    "SERIAL1_BAUD": {
      "Description": "The baud rate used on the Telem1 port. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Telem1 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL1_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire. The Swap option allows the RX and TX pins to be swapped on STM32F7 based boards.",
      "DisplayName": "Telem1 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL1_PROTOCOL": {
      "Description": "Control what protocol to use on the Telem1 port. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Telem1 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL2_BAUD": {
      "Description": "The baud rate of the Telem2 port. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Telemetry 2 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL2_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Telem2 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL2_PROTOCOL": {
      "Description": "Control what protocol to use on the Telem2 port. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Telemetry 2 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL3_BAUD": {
      "Description": "The baud rate used for the Serial 3 (GPS). Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 3 (GPS) Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL3_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial3 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL3_PROTOCOL": {
      "Description": "Control what protocol Serial 3 (GPS) should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial 3 (GPS) protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL4_BAUD": {
      "Description": "The baud rate used for Serial4. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 4 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL4_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial4 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL4_PROTOCOL": {
      "Description": "Control what protocol Serial4 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial4 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL5_BAUD": {
      "Description": "The baud rate used for Serial5. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 5 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL5_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial5 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL5_PROTOCOL": {
      "Description": "Control what protocol Serial5 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial5 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL6_BAUD": {
      "Description": "The baud rate used for Serial6. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 6 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL6_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial6 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL6_PROTOCOL": {
      "Description": "Control what protocol Serial6 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial6 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL7_BAUD": {
      "Description": "The baud rate used for Serial7. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 7 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL7_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial7 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL7_PROTOCOL": {
      "Description": "Control what protocol Serial7 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial7 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL8_BAUD": {
      "Description": "The baud rate used for Serial8. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 8 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL8_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial8 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL8_PROTOCOL": {
      "Description": "Control what protocol Serial8 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial8 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL9_BAUD": {
      "Description": "The baud rate used for Serial8. Most stm32-based boards can support rates of up to 1500. If you setup a rate you cannot support and then can't connect to your board you should load a firmware from a different vehicle type. That will reset all your parameters to defaults.",
      "DisplayName": "Serial 9 Baud Rate",
      "User": "Standard",
      "Values": {
        "1": "1200",
        "111": "111100",
        "115": "115200",
        "1500": "1500000",
        "19": "19200",
        "2": "2400",
        "230": "230400",
        "256": "256000",
        "38": "38400",
        "4": "4800",
        "460": "460800",
        "500": "500000",
        "57": "57600",
        "9": "9600",
        "921": "921600"
      }
    },
    "SERIAL9_OPTIONS": {
      "Bitmask": {
        "0": "InvertRX",
        "1": "InvertTX",
        "10": "Don't forward mavlink to/from",
        "11": "DisableFIFO",
        "12": "Ignore Streamrate",
        "2": "HalfDuplex",
        "3": "Swap",
        "4": "RX_PullDown",
        "5": "RX_PullUp",
        "6": "TX_PullDown",
        "7": "TX_PullUp",
        "8": "RX_NoDMA",
        "9": "TX_NoDMA"
      },
      "Description": "Control over UART options. The InvertRX option controls invert of the receive pin. The InvertTX option controls invert of the transmit pin. The HalfDuplex option controls half-duplex (onewire) mode, where both transmit and receive is done on the transmit wire.",
      "DisplayName": "Serial9 options",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERIAL9_PROTOCOL": {
      "Description": "Control what protocol Serial9 port should be used for. Note that the Frsky options require external converter hardware. See the wiki for details.",
      "DisplayName": "Serial9 protocol selection",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "None",
        "1": "MAVLink1",
        "10": "FrSky SPort Passthrough (OpenTX)",
        "11": "Lidar360",
        "13": "Beacon",
        "14": "Volz servo out",
        "15": "SBus servo out",
        "16": "ESC Telemetry",
        "17": "Devo Telemetry",
        "18": "OpticalFlow",
        "19": "RobotisServo",
        "2": "MAVLink2",
        "20": "NMEA Output",
        "21": "WindVane",
        "22": "SLCAN",
        "23": "RCIN",
        "24": "MegaSquirt EFI",
        "25": "LTM",
        "26": "RunCam",
        "27": "HottTelem",
        "28": "Scripting",
        "29": "Crossfire VTX",
        "3": "Frsky D",
        "30": "Generator",
        "31": "Winch",
        "32": "MSP",
        "33": "DJI FPV",
        "34": "AirSpeed",
        "35": "ADSB",
        "36": "AHRS",
        "37": "SmartAudio",
        "38": "FETtecOneWire",
        "39": "Torqeedo",
        "4": "Frsky SPort",
        "40": "AIS",
        "41": "CoDevESC",
        "42": "DisplayPort",
        "43": "MAVLink High Latency",
        "5": "GPS",
        "7": "Alexmos Gimbal Serial",
        "8": "SToRM32 Gimbal Serial",
        "9": "Rangefinder"
      }
    },
    "SERIAL_PASS1": {
      "Description": "This sets one side of pass-through between two serial ports. Once both sides are set then all data received on either port will be passed to the other port",
      "DisplayName": "Serial passthru first port",
      "User": "Advanced",
      "Values": {
        "-1": "Disabled",
        "0": "Serial0",
        "1": "Serial1",
        "2": "Serial2",
        "3": "Serial3",
        "4": "Serial4",
        "5": "Serial5",
        "6": "Serial6"
      }
    },
    "SERIAL_PASS2": {
      "Description": "This sets one side of pass-through between two serial ports. Once both sides are set then all data received on either port will be passed to the other port",
      "DisplayName": "Serial passthru second port",
      "User": "Advanced",
      "Values": {
        "-1": "Disabled",
        "0": "Serial0",
        "1": "Serial1",
        "2": "Serial2",
        "3": "Serial3",
        "4": "Serial4",
        "5": "Serial5",
        "6": "Serial6"
      }
    },
    "SERIAL_PASSTIMO": {
      "Description": "This sets a timeout for serial pass-through in seconds. When the pass-through is enabled by setting the SERIAL_PASS1 and SERIAL_PASS2 parameters then it remains in effect until no data comes from the first port for SERIAL_PASSTIMO seconds. This allows the port to revent to its normal usage (such as MAVLink connection to a GCS) when it is no longer needed. A value of 0 means no timeout.",
      "DisplayName": "Serial passthru timeout",
      "Range": {
        "high": "120",
        "low": "0"
      },
      "Units": "s",
      "User": "Advanced"
    }
  },
  "SERVO": {
    "SERVO_32_ENABLE": {
      "Description": "This allows for up to 32 outputs, enabling parameters for outputs above 16",
      "DisplayName": "Enable outputs 17 to 31",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "SERVO_DSHOT_ESC": {
      "Description": "This sets the DShot ESC type for all outputs. The ESC type affects the range of DShot commands available. None means that no dshot commands will be executed.",
      "DisplayName": "Servo DShot ESC type",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "BLHeli32/Kiss",
        "2": "BLHeli_S"
      }
    },
    "SERVO_DSHOT_RATE": {
      "Description": "This sets the DShot output rate for all outputs as a multiple of the loop rate. 0 sets the output rate to be fixed at 1Khz for low loop rates. This value should never be set below 500Hz.",
      "DisplayName": "Servo DShot output rate",
      "User": "Advanced",
      "Values": {
        "0": "1Khz",
        "1": "loop-rate",
        "2": "double loop-rate",
        "3": "triple loop-rate",
        "4": "quadruple loop rate"
      }
    },
    "SERVO_GPIO_MASK": {
      "Bitmask": {
        "0": "Servo 1",
        "1": "Servo 2",
        "10": "Servo 11",
        "11": "Servo 12",
        "12": "Servo 13",
        "13": "Servo 14",
        "14": "Servo 15",
        "15": "Servo 16",
        "16": "Servo 17",
        "17": "Servo 18",
        "18": "Servo 19",
        "19": "Servo 20",
        "2": "Servo 3",
        "20": "Servo 21",
        "21": "Servo 22",
        "22": "Servo 23",
        "23": "Servo 24",
        "24": "Servo 25",
        "25": "Servo 26",
        "26": "Servo 27",
        "27": "Servo 28",
        "28": "Servo 29",
        "29": "Servo 30",
        "3": "Servo 4",
        "30": "Servo 31",
        "31": "Servo 32",
        "4": "Servo 5",
        "5": "Servo 6",
        "6": "Servo 7",
        "7": "Servo 8",
        "8": "Servo 9",
        "9": "Servo 10"
      },
      "Description": "This sets a bitmask of outputs which will be available as GPIOs. Any auxiliary output with either the function set to -1 or with the corresponding bit set in this mask will be available for use as a GPIO pin",
      "DisplayName": "Servo GPIO mask",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_RATE": {
      "Description": "This sets the default output rate in Hz for all outputs.",
      "DisplayName": "Servo default output rate",
      "Range": {
        "high": "400",
        "low": "25"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SERVO10_": {
    "SERVO10_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO10_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO10_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO10_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO10_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO10_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO10_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO11_": {
    "SERVO11_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO11_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO11_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO11_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO11_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO11_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO11_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO12_": {
    "SERVO12_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO12_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO12_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO12_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO12_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO12_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO12_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO13_": {
    "SERVO13_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO13_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO13_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO13_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO13_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO13_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO13_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO14_": {
    "SERVO14_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO14_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO14_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO14_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO14_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO14_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO14_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO15_": {
    "SERVO15_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO15_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO15_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO15_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO15_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO15_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO15_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO16_": {
    "SERVO16_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO16_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO16_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO16_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO16_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO16_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO16_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO17_": {
    "SERVO17_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO17_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO17_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO17_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO17_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO17_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO17_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO18_": {
    "SERVO18_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO18_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO18_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO18_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO18_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO18_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO18_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO19_": {
    "SERVO19_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO19_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO19_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO19_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO19_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO19_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO19_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO1_": {
    "SERVO1_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO1_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO1_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO1_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO1_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO1_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO1_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO20_": {
    "SERVO20_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO20_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO20_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO20_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO20_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO20_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO20_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO21_": {
    "SERVO21_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO21_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO21_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO21_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO21_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO21_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO21_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO22_": {
    "SERVO22_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO22_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO22_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO22_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO22_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO22_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO22_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO23_": {
    "SERVO23_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO23_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO23_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO23_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO23_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO23_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO23_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO24_": {
    "SERVO24_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO24_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO24_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO24_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO24_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO24_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO24_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO25_": {
    "SERVO25_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO25_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO25_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO25_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO25_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO25_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO25_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO26_": {
    "SERVO26_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO26_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO26_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO26_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO26_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO26_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO26_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO27_": {
    "SERVO27_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO27_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO27_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO27_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO27_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO27_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO27_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO28_": {
    "SERVO28_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO28_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO28_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO28_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO28_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO28_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO28_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO29_": {
    "SERVO29_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO29_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO29_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO29_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO29_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO29_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO29_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO2_": {
    "SERVO2_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO2_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO2_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO2_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO2_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO2_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO2_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO30_": {
    "SERVO30_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO30_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO30_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO30_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO30_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO30_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO30_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO31_": {
    "SERVO31_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO31_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO31_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO31_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO31_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO31_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO31_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO32_": {
    "SERVO32_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO32_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO32_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO32_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO32_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO32_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO32_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO3_": {
    "SERVO3_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO3_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO3_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO3_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO3_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO3_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO3_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO4_": {
    "SERVO4_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO4_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO4_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO4_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO4_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO4_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO4_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO5_": {
    "SERVO5_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO5_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO5_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO5_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO5_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO5_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO5_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO6_": {
    "SERVO6_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO6_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO6_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO6_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO6_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO6_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO6_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO7_": {
    "SERVO7_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO7_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO7_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO7_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO7_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO7_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO7_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO8_": {
    "SERVO8_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO8_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO8_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO8_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO8_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO8_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO8_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO9_": {
    "SERVO9_ABS_MAX": {
      "Description": "Absolute maximum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO9_ABS_MIN": {
      "Description": "Absolute minimum PWM pulse width in microseconds. Used as limit for auto trim",
      "DisplayName": "Absolute minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2500",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO9_FUNCTION": {
      "Description": "Function assigned to this servo. Setting this to Disabled(0) will setup this output for control by auto missions or MAVLink servo set commands. any other value will enable the corresponding function",
      "DisplayName": "Servo output function",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "-1": "GPIO",
        "0": "Disabled",
        "1": "RCPassThru",
        "10": "CameraTrigger",
        "100": "Script7",
        "101": "Script8",
        "102": "Script9",
        "103": "Script10",
        "104": "Script11",
        "105": "Script12",
        "106": "Script13",
        "107": "Script14",
        "108": "Script15",
        "109": "Script16",
        "12": "Mount2Pan",
        "120": "NeoPixel1",
        "121": "NeoPixel2",
        "122": "NeoPixel3",
        "123": "NeoPixel4",
        "124": "RateRoll",
        "125": "RatePitch",
        "126": "RateThrust",
        "127": "RateYaw",
        "128": "WingSailElevator",
        "129": "ProfiLED1",
        "13": "Mount2Tilt",
        "130": "ProfiLED2",
        "131": "ProfiLED3",
        "132": "ProfiLEDClock",
        "133": "Winch Clutch",
        "134": "SERVOn_MIN",
        "135": "SERVOn_TRIM",
        "136": "SERVOn_MAX",
        "137": "SailMastRotation",
        "138": "Alarm",
        "139": "Alarm Inverted",
        "14": "Mount2Roll",
        "15": "Mount2Open",
        "16": "DifferentialSpoilerLeft1",
        "17": "DifferentialSpoilerRight1",
        "19": "Elevator",
        "2": "Flap",
        "21": "Rudder",
        "22": "SprayerPump",
        "23": "SprayerSpinner",
        "24": "FlaperonLeft",
        "25": "FlaperonRight",
        "26": "GroundSteering",
        "27": "Parachute",
        "28": "Gripper",
        "29": "LandingGear",
        "3": "FlapAuto",
        "30": "EngineRunEnable",
        "31": "HeliRSC",
        "32": "HeliTailRSC",
        "33": "Motor1",
        "34": "Motor2",
        "35": "Motor3",
        "36": "Motor4",
        "37": "Motor5",
        "38": "Motor6",
        "39": "Motor7",
        "4": "Aileron",
        "40": "Motor8",
        "41": "TiltMotorsFront",
        "45": "TiltMotorsRear",
        "46": "TiltMotorRearLeft",
        "47": "TiltMotorRearRight",
        "51": "RCIN1",
        "52": "RCIN2",
        "53": "RCIN3",
        "54": "RCIN4",
        "55": "RCIN5",
        "56": "RCIN6",
        "57": "RCIN7",
        "58": "RCIN8",
        "59": "RCIN9",
        "6": "MountPan",
        "60": "RCIN10",
        "61": "RCIN11",
        "62": "RCIN12",
        "63": "RCIN13",
        "64": "RCIN14",
        "65": "RCIN15",
        "66": "RCIN16",
        "67": "Ignition",
        "69": "Starter",
        "7": "MountTilt",
        "70": "Throttle",
        "71": "TrackerYaw",
        "72": "TrackerPitch",
        "73": "ThrottleLeft",
        "74": "ThrottleRight",
        "75": "TiltMotorFrontLeft",
        "76": "TiltMotorFrontRight",
        "77": "ElevonLeft",
        "78": "ElevonRight",
        "79": "VTailLeft",
        "8": "MountRoll",
        "80": "VTailRight",
        "81": "BoostThrottle",
        "82": "Motor9",
        "83": "Motor10",
        "84": "Motor11",
        "85": "Motor12",
        "86": "DifferentialSpoilerLeft2",
        "87": "DifferentialSpoilerRight2",
        "88": "Winch",
        "89": "Main Sail",
        "9": "MountOpen",
        "90": "CameraISO",
        "91": "CameraAperture",
        "92": "CameraFocus",
        "93": "CameraShutterSpeed",
        "94": "Script1",
        "95": "Script2",
        "96": "Script3",
        "97": "Script4",
        "98": "Script5",
        "99": "Script6"
      }
    },
    "SERVO9_MAX": {
      "Description": "maximum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Maximum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO9_MIN": {
      "Description": "minimum PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Minimum PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "500"
      },
      "Units": "PWM",
      "User": "Standard"
    },
    "SERVO9_REVERSED": {
      "Description": "Reverse servo operation. Set to 0 for normal operation. Set to 1 to reverse this output channel.",
      "DisplayName": "Servo reverse",
      "User": "Standard",
      "Values": {
        "0": "Normal",
        "1": "Reversed"
      }
    },
    "SERVO9_TRIM": {
      "Description": "Trim PWM pulse width in microseconds. Typically 1000 is lower limit, 1500 is neutral and 2000 is upper limit.",
      "DisplayName": "Trim PWM",
      "Increment": "1",
      "Range": {
        "high": "2200",
        "low": "800"
      },
      "Units": "PWM",
      "User": "Standard"
    }
  },
  "SERVO_BLH_": {
    "SERVO_BLH_3DMASK": {
      "Bitmask": {
        "0": "Channel1",
        "1": "Channel2",
        "10": "Channel11",
        "11": "Channel12",
        "12": "Channel13",
        "13": "Channel14",
        "14": "Channel15",
        "15": "Channel16",
        "16": "Channel 17",
        "17": "Channel 18",
        "18": "Channel 19",
        "19": "Channel 20",
        "2": "Channel3",
        "20": "Channel 21",
        "21": "Channel 22",
        "22": "Channel 23",
        "23": "Channel 24",
        "24": "Channel 25",
        "25": "Channel 26",
        "26": "Channel 27",
        "27": "Channel 28",
        "28": "Channel 29",
        "29": "Channel 30",
        "3": "Channel4",
        "30": "Channel 31",
        "31": "Channel 32",
        "4": "Channel5",
        "5": "Channel6",
        "6": "Channel7",
        "7": "Channel8",
        "8": "Channel9",
        "9": "Channel10"
      },
      "Description": "Mask of channels which are dynamically reversible. This is used to configure ESCs in '3D' mode, allowing for the motor to spin in either direction",
      "DisplayName": "BLHeli bitmask of 3D channels",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_BLH_AUTO": {
      "Description": "If set to 1 this auto-enables BLHeli pass-thru support for all multicopter motors",
      "DisplayName": "BLHeli pass-thru auto-enable for multicopter motors",
      "RebootRequired": "True",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "SERVO_BLH_BDMASK": {
      "Bitmask": {
        "0": "Channel1",
        "1": "Channel2",
        "10": "Channel11",
        "11": "Channel12",
        "12": "Channel13",
        "13": "Channel14",
        "14": "Channel15",
        "15": "Channel16",
        "16": "Channel 17",
        "17": "Channel 18",
        "18": "Channel 19",
        "19": "Channel 20",
        "2": "Channel3",
        "20": "Channel 21",
        "21": "Channel 22",
        "22": "Channel 23",
        "23": "Channel 24",
        "24": "Channel 25",
        "25": "Channel 26",
        "26": "Channel 27",
        "27": "Channel 28",
        "28": "Channel 29",
        "29": "Channel 30",
        "3": "Channel4",
        "30": "Channel 31",
        "31": "Channel 32",
        "4": "Channel5",
        "5": "Channel6",
        "6": "Channel7",
        "7": "Channel8",
        "8": "Channel9",
        "9": "Channel10"
      },
      "Description": "Mask of channels which support bi-directional dshot. This is used for ESCs which have firmware that supports bi-directional dshot allowing fast rpm telemetry values to be returned for the harmonic notch.",
      "DisplayName": "BLHeli bitmask of bi-directional dshot channels",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_BLH_DEBUG": {
      "Description": "When set to 1 this enabled verbose debugging output over MAVLink when the blheli protocol is active. This can be used to diagnose failures.",
      "DisplayName": "BLHeli debug level",
      "User": "Standard",
      "Values": {
        "0": "Disabled",
        "1": "Enabled"
      }
    },
    "SERVO_BLH_MASK": {
      "Bitmask": {
        "0": "Channel1",
        "1": "Channel2",
        "10": "Channel11",
        "11": "Channel12",
        "12": "Channel13",
        "13": "Channel14",
        "14": "Channel15",
        "15": "Channel16",
        "16": "Channel 17",
        "17": "Channel 18",
        "18": "Channel 19",
        "19": "Channel 20",
        "2": "Channel3",
        "20": "Channel 21",
        "21": "Channel 22",
        "22": "Channel 23",
        "23": "Channel 24",
        "24": "Channel 25",
        "25": "Channel 26",
        "26": "Channel 27",
        "27": "Channel 28",
        "28": "Channel 29",
        "29": "Channel 30",
        "3": "Channel4",
        "30": "Channel 31",
        "31": "Channel 32",
        "4": "Channel5",
        "5": "Channel6",
        "6": "Channel7",
        "7": "Channel8",
        "8": "Channel9",
        "9": "Channel10"
      },
      "Description": "Enable of BLHeli pass-thru servo protocol support to specific channels. This mask is in addition to motors enabled using SERVO_BLH_AUTO (if any)",
      "DisplayName": "BLHeli Channel Bitmask",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_BLH_OTYPE": {
      "Description": "When set to a non-zero value this overrides the output type for the output channels given by SERVO_BLH_MASK. This can be used to enable DShot on outputs that are not part of the multicopter motors group.",
      "DisplayName": "BLHeli output type override",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "OneShot",
        "2": "OneShot125",
        "3": "Brushed",
        "4": "DShot150",
        "5": "DShot300",
        "6": "DShot600",
        "7": "DShot1200"
      }
    },
    "SERVO_BLH_POLES": {
      "Description": "This allows calculation of true RPM from ESC's eRPM. The default is 14.",
      "DisplayName": "BLHeli Motor Poles",
      "Range": {
        "high": "127",
        "low": "1"
      },
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_BLH_PORT": {
      "Description": "This sets the mavlink channel to use for blheli pass-thru. The channel number is determined by the number of serial ports configured to use mavlink. So 0 is always the console, 1 is the next serial port using mavlink, 2 the next after that and so on.",
      "DisplayName": "Control port",
      "User": "Advanced",
      "Values": {
        "0": "Console",
        "1": "Mavlink Serial Channel1",
        "2": "Mavlink Serial Channel2",
        "3": "Mavlink Serial Channel3",
        "4": "Mavlink Serial Channel4",
        "5": "Mavlink Serial Channel5"
      }
    },
    "SERVO_BLH_RVMASK": {
      "Bitmask": {
        "0": "Channel1",
        "1": "Channel2",
        "10": "Channel11",
        "11": "Channel12",
        "12": "Channel13",
        "13": "Channel14",
        "14": "Channel15",
        "15": "Channel16",
        "16": "Channel 17",
        "17": "Channel 18",
        "18": "Channel 19",
        "19": "Channel 20",
        "2": "Channel3",
        "20": "Channel 21",
        "21": "Channel 22",
        "22": "Channel 23",
        "23": "Channel 24",
        "24": "Channel 25",
        "25": "Channel 26",
        "26": "Channel 27",
        "27": "Channel 28",
        "28": "Channel 29",
        "29": "Channel 30",
        "3": "Channel4",
        "30": "Channel 31",
        "31": "Channel 32",
        "4": "Channel5",
        "5": "Channel6",
        "6": "Channel7",
        "7": "Channel8",
        "8": "Channel9",
        "9": "Channel10"
      },
      "Description": "Mask of channels which are reversed. This is used to configure ESCs in reversed mode",
      "DisplayName": "BLHeli bitmask of reversed channels",
      "RebootRequired": "True",
      "User": "Advanced"
    },
    "SERVO_BLH_TEST": {
      "Description": "Setting SERVO_BLH_TEST to a motor number enables an internal test of the BLHeli ESC protocol to the corresponding ESC. The debug output is displayed on the USB console.",
      "DisplayName": "BLHeli internal interface test",
      "User": "Advanced",
      "Values": {
        "0": "Disabled",
        "1": "TestMotor1",
        "2": "TestMotor2",
        "3": "TestMotor3",
        "4": "TestMotor4",
        "5": "TestMotor5",
        "6": "TestMotor6",
        "7": "TestMotor7",
        "8": "TestMotor8"
      }
    },
    "SERVO_BLH_TMOUT": {
      "Description": "This sets the inactivity timeout for the BLHeli protocol in seconds. If no packets are received in this time normal MAVLink operations are resumed. A value of 0 means no timeout",
      "DisplayName": "BLHeli protocol timeout",
      "Range": {
        "high": "300",
        "low": "0"
      },
      "Units": "s",
      "User": "Standard"
    },
    "SERVO_BLH_TRATE": {
      "Description": "This sets the rate in Hz for requesting telemetry from ESCs. It is the rate per ESC. Setting to zero disables telemetry requests",
      "DisplayName": "BLHeli telemetry rate",
      "Range": {
        "high": "500",
        "low": "0"
      },
      "Units": "Hz",
      "User": "Standard"
    }
  },
  "SERVO_FTW_": {
    "SERVO_FTW_MASK": {
      "Bitmask": {
        "0": "SERVO1",
        "1": "SERVO2",
        "10": "SERVO11",
        "11": "SERVO12",
        "2": "SERVO3",
        "3": "SERVO4",
        "4": "SERVO5",
        "5": "SERVO6",
        "6": "SERVO7",
        "7": "SERVO8",
        "8": "SERVO9",
        "9": "SERVO10"
      },
      "Description": "Servo channel mask specifying FETtec ESC output.",
      "DisplayName": "Servo channel output bitmask",
      "RebootRequired": "True",
      "User": "Standard"
    },
    "SERVO_FTW_POLES": {
      "Description": "Number of motor electrical poles",
      "DisplayName": "Nr. electrical poles",
      "Range": {
        "high": "50",
        "low": "2"
      },
      "User": "Standard"
    },
    "SERVO_FTW_RVMASK": {
      "Bitmask": {
        "0": "SERVO1",
        "1": "SERVO2",
        "10": "SERVO11",
        "11": "SERVO12",
        "2": "SERVO3",
        "3": "SERVO4",
        "4": "SERVO5",
        "5": "SERVO6",
        "6": "SERVO7",
        "7": "SERVO8",
        "8": "SERVO9",
        "9": "SERVO10"
      },
      "Description": "Servo channel mask to reverse rotation of FETtec ESC outputs.",
      "DisplayName": "Servo channel reverse rotation bitmask",
      "User": "Standard"
    }
  },
  "SERVO_ROB_": {
    "SERVO_ROB_POSMAX": {
      "Description": "Position maximum at servo max value. This should be within the position control range of the servos, normally 0 to 4095",
      "DisplayName": "Robotis servo position max",
      "Range": {
        "high": "4095",
        "low": "0"
      },
      "User": "Standard"
    },
    "SERVO_ROB_POSMIN": {
      "Description": "Position minimum at servo min value. This should be within the position control range of the servos, normally 0 to 4095",
      "DisplayName": "Robotis servo position min",
      "Range": {
        "high": "4095",
        "low": "0"
      },
      "User": "Standard"
    }
  },
  "SERVO_SBUS_": {
    "SERVO_SBUS_RATE": {
      "Description": "This sets the SBUS output frame rate in Hz.",
      "DisplayName": "SBUS default output rate",
      "Range": {
        "high": "250",
        "low": "25"
      },
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SERVO_VOLZ_": {
    "SERVO_VOLZ_MASK": {
      "Bitmask": {
        "0": "Channel1",
        "1": "Channel2",
        "10": "Channel11",
        "11": "Channel12",
        "12": "Channel13",
        "13": "Channel14",
        "14": "Channel15",
        "15": "Channel16",
        "16": "Channel17",
        "17": "Channel18",
        "18": "Channel19",
        "19": "Channel20",
        "2": "Channel3",
        "20": "Channel21",
        "21": "Channel22",
        "22": "Channel23",
        "23": "Channel24",
        "24": "Channel25",
        "25": "Channel26",
        "26": "Channel27",
        "28": "Channel29",
        "29": "Channel30",
        "3": "Channel4",
        "30": "Channel31",
        "31": "Channel32",
        "4": "Channel5",
        "5": "Channel6",
        "6": "Channel7",
        "7": "Channel8",
        "8": "Channel9",
        "9": "Channel10"
      },
      "Description": "Enable of volz servo protocol to specific channels",
      "DisplayName": "Channel Bitmask",
      "User": "Standard"
    }
  },
  "SR0_": {
    "SR0_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR0_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR1_": {
    "SR1_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR1_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR2_": {
    "SR2_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR2_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR3_": {
    "SR3_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR3_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR4_": {
    "SR4_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR4_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR5_": {
    "SR5_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR5_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "SR6_": {
    "SR6_EXTRA1": {
      "Description": "Stream rate of ATTITUDE, SIMSTATE (SITL only), AHRS2 and PID_TUNING to ground station",
      "DisplayName": "Extra data type 1 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_EXTRA2": {
      "Description": "Stream rate of VFR_HUD to ground station",
      "DisplayName": "Extra data type 2 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_EXTRA3": {
      "Description": "Stream rate of AHRS, HWSTATUS, SYSTEM_TIME, RANGEFINDER, DISTANCE_SENSOR, TERRAIN_REQUEST, BATTERY2, MOUNT_STATUS, OPTICAL_FLOW, MAG_CAL_REPORT, MAG_CAL_PROGRESS, EKF_STATUS_REPORT, VIBRATION and RPM to ground station",
      "DisplayName": "Extra data type 3 stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_EXT_STAT": {
      "Description": "Stream rate of SYS_STATUS, POWER_STATUS, MCU_STATUS, MEMINFO, CURRENT_WAYPOINT, GPS_RAW_INT, GPS_RTK (if available), GPS2_RAW (if available), GPS2_RTK (if available), NAV_CONTROLLER_OUTPUT, and FENCE_STATUS to ground station",
      "DisplayName": "Extended status stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_PARAMS": {
      "Description": "Stream rate of PARAM_VALUE to ground station",
      "DisplayName": "Parameter stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_POSITION": {
      "Description": "Stream rate of GLOBAL_POSITION_INT and LOCAL_POSITION_NED to ground station",
      "DisplayName": "Position stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_RAW_CTRL": {
      "Description": "Unused",
      "DisplayName": "Unused",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_RAW_SENS": {
      "Description": "Stream rate of RAW_IMU, SCALED_IMU2, SCALED_IMU3, SCALED_PRESSURE, SCALED_PRESSURE2, SCALED_PRESSURE3 and SENSOR_OFFSETS to ground station",
      "DisplayName": "Raw sensor stream rate",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    },
    "SR6_RC_CHAN": {
      "Description": "Stream rate of SERVO_OUTPUT_RAW and RC_CHANNELS to ground station",
      "DisplayName": "RC Channel stream rate to ground station",
      "Increment": "1",
      "Range": {
        "high": "10",
        "low": "0"
      },
      "RebootRequired": "True",
      "Units": "Hz",
      "User": "Advanced"
    }
  },
  "STAT": {
    "STAT_ASPD_AVG": {
      "Description": "Average air speed",
      "DisplayName": "Average air speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    },
    "STAT_ASPD_MAX": {
      "Description": "Maximum air speed",
      "DisplayName": "Maximum air speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    },
    "STAT_BOOT_CNT": {
      "Description": "Number of times board has been booted",
      "DisplayName": "Boot Count",
      "ReadOnly": "True",
      "User": "Standard"
    },
    "STAT_CURRENT_AVG": {
      "Description": "Average current while flying",
      "DisplayName": "Average current while flying",
      "ReadOnly": "True",
      "Units": "A",
      "User": "Standard"
    },
    "STAT_CURRENT_MAX": {
      "Description": "Maximum current while flying",
      "DisplayName": "Maximum current while flying",
      "ReadOnly": "True",
      "Units": "A",
      "User": "Standard"
    },
    "STAT_FLT_CNT": {
      "Description": "Number of times the aircraft has been flying",
      "DisplayName": "Flight counter",
      "ReadOnly": "True",
      "User": "Standard"
    },
    "STAT_FLT_ENERGY": {
      "Description": "Total consumed energy while flying",
      "DisplayName": "Total consumed energy while flying",
      "ReadOnly": "True",
      "Units": "Wh",
      "User": "Standard"
    },
    "STAT_FLT_TIME": {
      "Description": "Total flight time",
      "DisplayName": "Total flight time",
      "ReadOnly": "True",
      "Units": "s",
      "User": "Standard"
    },
    "STAT_GSPD_AVG": {
      "Description": "Average ground speed",
      "DisplayName": "Average ground speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    },
    "STAT_GSPD_MAX": {
      "Description": "Maximum ground speed",
      "DisplayName": "Maximum ground speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    },
    "STAT_HOMEALT_MAX": {
      "Description": "Maximum home distance",
      "DisplayName": "Maximum relative altitude",
      "ReadOnly": "True",
      "Units": "m",
      "User": "Standard"
    },
    "STAT_HOMEDST_AVG": {
      "Description": "Average home distance",
      "DisplayName": "Average home distance",
      "ReadOnly": "True",
      "Units": "m",
      "User": "Standard"
    },
    "STAT_HOMEDST_MAX": {
      "Description": "Maximum home distance",
      "DisplayName": "Maximum home distance",
      "ReadOnly": "True",
      "Units": "m",
      "User": "Standard"
    },
    "STAT_LOAD": {
      "Description": "Set to 1 then set stat values then reboot or set back to 0",
      "DisplayName": "Set to 1 then set stat values then reboot or set back to 0",
      "User": "Standard"
    },
    "STAT_POWER_AVG": {
      "Description": "Average power while flying",
      "DisplayName": "Average power while flying",
      "ReadOnly": "True",
      "Units": "W",
      "User": "Standard"
    },
    "STAT_POWER_MAX": {
      "Description": "Maximum power while flying",
      "DisplayName": "Maximum power while flying",
      "ReadOnly": "True",
      "Units": "W",
      "User": "Standard"
    },
    "STAT_RESET": {
      "Description": "Seconds since January 1st 2016 (Unix epoch+1451606400) since statistics reset (set to 0 to reset statistics)",
      "DisplayName": "Statistics reset time",
      "Units": "s",
      "User": "Standard"
    },
    "STAT_RUN_TIME": {
      "Description": "Total time autopilot has run",
      "DisplayName": "Total run_time",
      "ReadOnly": "True",
      "Units": "s",
      "User": "Standard"
    },
    "STAT_TRAVEL_AIR": {
      "Description": "Total air distance traveled",
      "DisplayName": "Total air distance traveled",
      "ReadOnly": "True",
      "Units": "m",
      "User": "Standard"
    },
    "STAT_TRAVEL_GND": {
      "Description": "Total ground distance traveled",
      "DisplayName": "Total ground distance traveled",
      "ReadOnly": "True",
      "Units": "m",
      "User": "Standard"
    },
    "STAT_WSPD_AVG": {
      "Description": "Average wind speed",
      "DisplayName": "Average wind speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    },
    "STAT_WSPD_MAX": {
      "Description": "Maximum wind speed",
      "DisplayName": "Maximum wind speed",
      "ReadOnly": "True",
      "Units": "m/s",
      "User": "Standard"
    }
  },
  "VISO": {
    "VISO_DELAY_MS": {
      "Description": "Visual odometry sensor delay relative to inertial measurements",
      "DisplayName": "Visual odometry sensor delay",
      "Range": {
        "high": "250",
        "low": "0"
      },
      "Units": "ms",
      "User": "Advanced"
    },
    "VISO_ORIENT": {
      "Description": "Visual odometery camera orientation",
      "DisplayName": "Visual odometery camera orientation",
      "User": "Advanced",
      "Values": {
        "0": "Forward",
        "2": "Right",
        "24": "Up",
        "25": "Down",
        "4": "Back",
        "6": "Left"
      }
    },
    "VISO_POS_M_NSE": {
      "Description": "Visual odometry position measurement noise minimum (meters). This value will be used if the sensor provides a lower noise value (or no noise value)",
      "DisplayName": "Visual odometry position measurement noise ",
      "Range": {
        "high": "10.0",
        "low": "0.1"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "VISO_POS_X": {
      "Description": "X position of the camera in body frame. Positive X is forward of the origin.",
      "DisplayName": "Visual odometry camera X position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "VISO_POS_Y": {
      "Description": "Y position of the camera in body frame. Positive Y is to the right of the origin.",
      "DisplayName": "Visual odometry camera Y position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "VISO_POS_Z": {
      "Description": "Z position of the camera in body frame. Positive Z is down from the origin.",
      "DisplayName": "Visual odometry camera Z position offset",
      "Increment": "0.01",
      "Range": {
        "high": "5",
        "low": "-5"
      },
      "Units": "m",
      "User": "Advanced"
    },
    "VISO_SCALE": {
      "Description": "Visual odometry scaling factor applied to position estimates from sensor",
      "DisplayName": "Visual odometry scaling factor",
      "User": "Advanced"
    },
    "VISO_TYPE": {
      "Description": "Visual odometry camera connection type",
      "DisplayName": "Visual odometry camera connection type",
      "RebootRequired": "True",
      "User": "Advanced",
      "Values": {
        "0": "None",
        "1": "MAVLink",
        "2": "IntelT265",
        "3": "VOXL(ModalAI)"
      }
    },
    "VISO_VEL_M_NSE": {
      "Description": "Visual odometry velocity measurement noise in m/s",
      "DisplayName": "Visual odometry velocity measurement noise",
      "Range": {
        "high": "5.0",
        "low": "0.05"
      },
      "Units": "m/s",
      "User": "Advanced"
    },
    "VISO_YAW_M_NSE": {
      "Description": "Visual odometry yaw measurement noise minimum (radians), This value will be used if the sensor provides a lower noise value (or no noise value)",
      "DisplayName": "Visual odometry yaw measurement noise",
      "Range": {
        "high": "1.0",
        "low": "0.05"
      },
      "Units": "rad",
      "User": "Advanced"
    }
  },
  "VTX_": {
    "VTX_BAND": {
      "Description": "Video Transmitter Band",
      "DisplayName": "Video Transmitter Band",
      "User": "Standard",
      "Values": {
        "0": "Band A",
        "1": "Band B",
        "2": "Band E",
        "3": "Airwave",
        "4": "RaceBand",
        "5": "Low RaceBand"
      }
    },
    "VTX_CHANNEL": {
      "Description": "Video Transmitter Channel",
      "DisplayName": "Video Transmitter Channel",
      "Range": {
        "high": "7",
        "low": "0"
      },
      "User": "Standard"
    },
    "VTX_ENABLE": {
      "Description": "Toggles the Video Transmitter on and off",
      "DisplayName": "Is the Video Transmitter enabled or not",
      "Values": {
        "0": "Disable",
        "1": "Enable"
      }
    },
    "VTX_FREQ": {
      "Description": "Video Transmitter Frequency. The frequency is derived from the setting of BAND and CHANNEL",
      "DisplayName": "Video Transmitter Frequency",
      "Range": {
        "high": "6000",
        "low": "5000"
      },
      "ReadOnly": "True",
      "User": "Standard"
    },
    "VTX_MAX_POWER": {
      "Description": "Video Transmitter Maximum Power Level. Different VTXs support different power levels, this prevents the power aux switch from requesting too high a power level. The switch supports 6 power levels and the selected power will be a subdivision between 0 and this setting.",
      "DisplayName": "Video Transmitter Max Power Level",
      "Range": {
        "high": "1000",
        "low": "25"
      }
    },
    "VTX_OPTIONS": {
      "Bitmask": {
        "0": "Pitmode",
        "1": "Pitmode until armed",
        "2": "Pitmode when disarmed",
        "3": "Unlocked",
        "4": "Add leading zero byte to requests"
      },
      "Description": "Video Transmitter Options. Pitmode puts the VTX in a low power state. Unlocked enables certain restricted frequencies and power levels. Do not enable the Unlocked option unless you have appropriate permissions in your jurisdiction to transmit at high power levels.",
      "DisplayName": "Video Transmitter Options",
      "User": "Advanced"
    },
    "VTX_POWER": {
      "Description": "Video Transmitter Power Level. Different VTXs support different power levels, the power level chosen will be rounded down to the nearest supported power level",
      "DisplayName": "Video Transmitter Power Level",
      "Range": {
        "high": "1000",
        "low": "1"
      }
    }
  },
  "json": {
    "version": 0
  }
}